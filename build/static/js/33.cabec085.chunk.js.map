{"version":3,"sources":["utils/api.jsx","components/date-time-picker/index.jsx","pages/Operational/Ranking/content.jsx"],"names":["api","axios","create","baseURL","interceptors","request","use","config","headers","Cookies","get","error","Promise","reject","registerLocale","pt","DatePicker","Content","props","state","page","page_limit","page_length","users","value","label","filiais","sales","Date","loadFiliais","bind","loadUsers","loadSales","filterHistory","data","length","this","setState","map","item","id","name","console","log","alert","date_s","format","filter_start_date","date_e","filter_end_date","filter_filial_id","user_id","show_user_id","loading","client_name","toUpperCase","includes","term","title","user_name","dates","start","end","prevProps","prevState","pages","items","filter","Math","ceil","i","push","slice","customStyles","control","css","borderColor","isFocused","boxShadow","option","bgc","isSelected","backgroundColor","multiValueLabel","color","className","xs","sm","md","for","defaultValue","options","styles","onChange","row","tag","showTriangle","Toggle","Menu","onClick","selected","changeFilterDate","startDate","endDate","selectsRange","inline","locale","type","placeholder","event","target","item_user","indice","key","toString","padStart","filial_name","qde_services","average","amount_sales","toLocaleString","parseISO","date","to","closed_by","canceled_by","client_id","obs","placement","trigger","amount","aria-label","Component","connect","settings","toasts","addToast","actionAddToast","removeToast","actionRemoveToast"],"mappings":"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","file":"static/js/33.cabec085.chunk.js","sourcesContent":["import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst api = axios.create({ baseURL: \"https://onb-api-demo.agenciaonside.com.br\" });\n//const api = axios.create({ baseURL: \"http://192.168.1.5:8080\" });\n\napi.interceptors.request.use(\n  config => {\n    config.headers[\"Authorization\"] = \"bearer \" + Cookies.get(\"rui-auth-token\");\n    return config;\n  },\n  error => {\n    Promise.reject(error);\n  },\n);\n\nexport default api;\n","/**\n * Styles\n */\nimport \"./style.scss\";\n\n/**\n * External Dependencies\n */\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\nimport pt from \"date-fns/locale/pt\";\nregisterLocale(\"pt\", pt);\n\nexport default DatePicker;\n","/**\n * Styles\n */\nimport \"./style.scss\";\n\n/**\n * External Dependencies\n */\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { UncontrolledPopover, PopoverHeader, PopoverBody } from \"reactstrap\";\n\nimport { Modal, ModalBody, ModalFooter } from \"reactstrap\";\nimport { Button, Input, Label, FormGroup } from \"reactstrap\";\n\nimport { Row, Col } from \"reactstrap\";\nimport { Card, CardBody, CardText, CardTitle, CardSubtitle } from \"reactstrap\";\nimport { CardLink, CustomInput } from \"reactstrap\";\nimport Cookies from \"js-cookie\";\nimport Select from \"react-select\";\n\n/**\n * Internal Dependencies\n */\nimport Icon from \"../../../components/icon\";\nimport Dropdown from \"../../../components/bs-dropdown\";\nimport { addToast as actionAddToast, removeToast as actionRemoveToast } from \"../../../actions\";\nimport DatePicker from \"../../../components/date-time-picker\";\n/**\n * import services/utils\n */\n\nimport api from \"../../../utils/api\";\nimport { format, parseISO } from \"date-fns\";\nimport pt from \"date-fns/locale/pt-BR\";\n\n/**\n * Component\n */\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 0,\n      page_limit: 20,\n      page_length: 1,\n\n      users: [{ value: Cookies.get(\"rui-auth-user_id\"), label: Cookies.get(\"rui-auth-user_name\") }],\n      filiais: [],\n      sales: [],\n      users: [],\n\n      term: \"\",\n      loading: false,\n      show_user_id: 0,\n\n      filter_start_date: new Date(),\n      filter_end_date: null,\n      filter_filial_id: {\n        value: Cookies.get(\"rui-auth-filial_id\") != \"undefined\" ? Cookies.get(\"rui-auth-filial_id\") : \"\",\n        label: Cookies.get(\"rui-auth-filial_name\") != \"undefined\" ? Cookies.get(\"rui-auth-filial_name\") : \"Selecione\",\n      },\n    };\n\n    this.loadFiliais = this.loadFiliais.bind(this);\n    this.loadUsers = this.loadUsers.bind(this);\n    this.loadSales = this.loadSales.bind(this);\n    this.filterHistory = this.filterHistory.bind(this);\n  }\n\n  // carrega as filiais\n  async loadFiliais() {\n    try {\n      const { data } = await api.get(\"/filiais\");\n      if (data.length > 0) {\n        this.setState({\n          filiais: data.map(item => {\n            return { value: item.id, label: item.name };\n          }),\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      alert(\"Erro ao carregar filiais\");\n    }\n  }\n\n  // --> carrega os usuários do ranking\n  async loadUsers() {\n    try {\n      const date_s = format(this.state.filter_start_date, \"yyyy-MM-dd\");\n      const date_e = this.state.filter_end_date ? format(this.state.filter_end_date, \"yyyy-MM-dd\") : format(this.state.filter_start_date, \"yyyy-MM-dd\");\n\n      const { data } = await api.get(`/ranking/?start_date=${date_s}&end_date=${date_e}&filial_id=${this.state.filter_filial_id.value}`);\n\n      this.setState({ users: data });\n    } catch (error) {\n      console.log(error);\n      alert(\"Erro ao carregar dados dos usuários\");\n    }\n  }\n\n  // --> Carrega na api os lancamentos de contas a pagar e a receber\n  async loadSales(user_id) {\n    if (user_id === this.state.show_user_id) {\n      this.setState({ show_user_id: 0 });\n      return;\n    }\n\n    this.setState({ loading: true });\n    try {\n      const date_s = format(this.state.filter_start_date, \"yyyy-MM-dd\");\n      const date_e = this.state.filter_end_date ? format(this.state.filter_end_date, \"yyyy-MM-dd\") : format(this.state.filter_start_date, \"yyyy-MM-dd\");\n\n      const { data } = await api.get(`/sales/?user_id=${user_id}&start_date=${date_s}&end_date=${date_e}&filial_id=${this.state.filter_filial_id.value}`);\n\n      this.setState({ sales: data, show_user_id: user_id });\n    } catch (error) {\n      console.log(error);\n      alert(\"Erro ao carregar Lançamentos\");\n    }\n\n    this.setState({ loading: false });\n  }\n\n  // --> Filtra os registros\n  filterHistory(item) {\n    if (\n      item?.client_name?.toUpperCase().includes(this.state.term.toUpperCase()) ||\n      item?.title?.toUpperCase().includes(this.state.term.toUpperCase()) ||\n      item?.user_name?.toUpperCase().includes(this.state.term.toUpperCase())\n    )\n      return true;\n    else return false;\n  }\n\n  // --> realiza a alteração do filtro de datas\n  changeFilterDate(dates) {\n    const [start, end] = dates;\n    this.setState({ filter_start_date: start, filter_end_date: end });\n  }\n\n  componentDidMount() {\n    this.loadUsers();\n    //this.loadSales();\n    this.loadFiliais();\n    this.loadFiliais();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (Cookies.get(\"rui-auth-token\")) {\n      if (\n        prevState.filter_start_date !== this.state.filter_start_date ||\n        prevState.filter_end_date !== this.state.filter_end_date ||\n        prevState.filter_filial_id !== this.state.filter_filial_id\n      ) {\n        this.setState({ show_user_id: 0, sales: [] });\n        this.loadUsers();\n      }\n    }\n  }\n\n  render() {\n    let { users, sales, page_length, page, page_limit } = this.state;\n    let pages = [];\n\n    // --> obtem os registros filtrados, conforme a busca pelo usuário\n    let items = users.filter(item => this.state.term === \"\" || this.filterHistory(item));\n\n    page_length = Math.ceil(items.length / page_limit);\n    for (let i = 0; i < page_length; i++) {\n      pages.push(i);\n    }\n    // --> obtem os registros conforme pagina selecionada\n    items = items.slice(page * page_limit, page * page_limit + page_limit);\n\n    const customStyles = {\n      control: (css, state) => {\n        return {\n          ...css,\n          borderColor: state.isFocused ? \"rgba(114, 94, 195, 0.6)\" : \"#eaecf0\",\n          \"&:hover\": {\n            borderColor: state.isFocused ? \"rgba(114, 94, 195, 0.6)\" : \"#eaecf0\",\n          },\n          boxShadow: state.isFocused ? \"0 0 0 0.2rem rgba(114, 94, 195, 0.2)\" : \"\",\n        };\n      },\n      option: (css, state) => {\n        let bgc = \"\";\n\n        if (state.isSelected) {\n          bgc = \"#725ec3\";\n        } else if (state.isFocused) {\n          bgc = \"rgba(114, 94, 195, 0.2)\";\n        }\n\n        return {\n          ...css,\n          backgroundColor: bgc,\n        };\n      },\n      multiValueLabel: css => {\n        return {\n          ...css,\n          color: \"#545b61\",\n          backgroundColor: \"#eeeeef\",\n        };\n      },\n    };\n\n    return (\n      <Fragment>\n        <div className=\"bill-filters\">\n          <Row>\n            <Col xs={12} sm={12} md={4}>\n              <Label for=\"filter_filial_id\" className=\"mt-10\">\n                Filial\n              </Label>\n              <Select\n                id=\"filter_filial_id\"\n                name=\"filter_filial_id\"\n                defaultValue={this.state.filter_filial_id}\n                value={this.state.filter_filial_id}\n                options={[{ value: \"\", label: \"Selecione\" }, ...this.state.filiais]}\n                styles={customStyles}\n                onChange={row => this.setState({ filter_filial_id: row })}\n              />\n            </Col>\n\n            <Col xs={12} sm={12} md={8}>\n              <Label className=\"mt-10\">Período</Label>\n              <Dropdown tag=\"div\" className=\"\" showTriangle>\n                <Dropdown.Toggle tag=\"button\" className=\"btn btn-brand btn-block mb-5\">\n                  <span className=\"text\">\n                    {format(this.state.filter_start_date, \"dd/MM/yyyy\")} à {format(this.state.filter_end_date ?? this.state.filter_start_date, \"dd/MM/yyyy\")}\n                  </span>\n                  <span className=\"icon icon ml-auto\">\n                    <Icon name=\"chevron-down\" />\n                  </span>\n                </Dropdown.Toggle>\n                <Dropdown.Menu tag=\"ul\" className=\"nav\">\n                  <li onClick={() => {}}>\n                    <DatePicker\n                      selected={this.state.filter_start_date}\n                      onChange={dates => this.changeFilterDate(dates)}\n                      startDate={this.state.filter_start_date}\n                      endDate={this.state.filter_end_date}\n                      selectsRange\n                      inline\n                      className=\"rui-datetimepicker form-control w-auto\"\n                      locale=\"pt\"\n                    />\n                  </li>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n        </div>\n        <div className=\"card\">\n          <div className=\"card-body py-30 pt-0\">\n            <div className=\"rui-project-task-search\">\n              <div className=\"input-group input-group-clean\">\n                <input\n                  type=\"search\"\n                  className=\"form-control pl-3 order-1\"\n                  placeholder=\"Digite para procurar...\"\n                  value={this.state.term}\n                  onChange={event => this.setState({ term: event.target.value })}\n                />\n              </div>\n            </div>\n\n            <ul className=\"list-group list-group-flush rui-project-task-list bills\">\n              {items.map((item_user, indice) => (\n                <div className=\"row-bill ranking\" key={item_user.user_id}>\n                  <div className=\"user\">\n                    <div className=\"card-day\">\n                      <strong>{(indice + 1).toString().padStart(2, \"0\")}°</strong>\n                    </div>\n                    <Card className=\"card\">\n                      <CardBody>\n                        <CardTitle className=\"h2\" onClick={() => this.loadSales(item_user.user_id)}>\n                          [{item_user.filial_name}] - {item_user.user_name}\n                        </CardTitle>\n                        <CardSubtitle className=\"h5 text-muted mb-2 card-subtitle mt-2\">\n                          Qtde Atendimentos: <strong>{item_user?.qde_services ?? \"-\"}</strong>\n                        </CardSubtitle>\n                        <CardSubtitle className=\"h5 text-muted mb-2 card-subtitle mt-2\">\n                          Tempo médio: <strong>{item_user?.average ?? \"-\"}</strong>\n                        </CardSubtitle>\n\n                        {this.state.show_user_id === item_user.user_id ? (\n                          <>\n                            <CardLink className={`open mt-10`} onClick={() => this.setState({ show_user_id: 0, sales: [] })}>\n                              Fechar\n                            </CardLink>\n                          </>\n                        ) : (\n                          <>\n                            {\" \"}\n                            <CardLink className={`open mt-10`} onClick={() => this.loadSales(item_user.user_id)}>\n                              {this.state.loading ? \"Carregando...\" : \"Ver atendimentos\"}\n                            </CardLink>\n                          </>\n                        )}\n                      </CardBody>\n                      <a className={`rui-task-subtitle price ${item_user.state}`}>\n                        <strong>\n                          <small>R$ </small>\n                          {item_user.amount_sales.toLocaleString()}\n                        </strong>\n                      </a>\n                    </Card>\n                  </div>\n                  <div className={`p-50 pt-0 details ${this.state.show_user_id === item_user.user_id ? \"show\" : \"\"}`}>\n                    <ul className=\"list-group list-group-flush rui-project-task-list bills\">\n                      {sales.map((item, i) => (\n                        <div className=\"row-bill\" key={item.id}>\n                          <div className=\"card-day\">\n                            {i === 0 ? (\n                              <>\n                                <strong>{format(parseISO(item.date), \"dd\")}</strong> <small>{format(parseISO(item.date), \"MMM\", { locale: pt })}</small>\n                              </>\n                            ) : (\n                              <>\n                                {sales[i - 1].date !== item.date ? (\n                                  <>\n                                    <strong>{format(parseISO(item.date), \"dd\")}</strong> <small>{format(parseISO(item.date), \"MMM\", { locale: pt })}</small>\n                                  </>\n                                ) : (\n                                  <></>\n                                )}\n                              </>\n                            )}\n                          </div>\n                          <Card className=\"card\">\n                            <CardBody>\n                              <Link to={`/pdv/show/${item.id}`} target=\"_blank\">\n                                <CardTitle className=\"h2\">{item.title}</CardTitle>\n                              </Link>\n\n                              {item.closed_by ? (\n                                <>\n                                  <CardSubtitle className=\"h5 text-muted mb-2 card-subtitle mt-2\">\n                                    Fechado por: <strong>{item?.closed_by ?? \"-\"}</strong>\n                                  </CardSubtitle>\n                                </>\n                              ) : (\n                                <></>\n                              )}\n\n                              <CardSubtitle className=\"h5 text-muted mb-2 card-subtitle mt-2\">\n                                Realizado às: <strong>{format(parseISO(item.date), \"HH':'mm\")}</strong>\n                              </CardSubtitle>\n                              {item.canceled_by ? (\n                                <>\n                                  <CardSubtitle className=\"h5 text-muted mb-2 card-subtitle mt-2\">\n                                    Cancelado por: <strong>{item?.canceled_by ?? \"-\"}</strong>\n                                  </CardSubtitle>\n                                </>\n                              ) : (\n                                <></>\n                              )}\n\n                              <CardSubtitle className=\"h4 text-muted mb-5\">{item?.filial_name}</CardSubtitle>\n                              {item.client_id ? (\n                                <>\n                                  <CardText className=\"mb-5\">\n                                    <Link to={`/crm/clientes/show/${item.client_id}`} className=\"card-link\" target=\"_blank\">\n                                      Cliente: <strong>{item?.client_name}</strong>\n                                    </Link>\n                                  </CardText>\n                                </>\n                              ) : (\n                                <></>\n                              )}\n\n                              <CardLink className={`${item.state} mt-10`} id={`popover_paid_${item.id}`}>\n                                {item.state === \"closed\" ? \"Fechada/Finalizada\" : item.state === \"canceled\" ? \"Cancelada\" : \"Em aberto\"}\n                              </CardLink>\n\n                              {item.obs ? (\n                                <>\n                                  <CardLink id={`popover_obs_${item.id}`}>Observações</CardLink>\n                                  <UncontrolledPopover placement=\"top\" target={`popover_obs_${item.id}`} trigger=\"hover\">\n                                    <PopoverHeader>Observações</PopoverHeader>\n                                    <PopoverBody>\n                                      <strong>{item.obs}</strong>\n                                    </PopoverBody>\n                                  </UncontrolledPopover>\n                                </>\n                              ) : (\n                                <></>\n                              )}\n                            </CardBody>\n                            <a className={`rui-task-subtitle price ${item.state}`}>\n                              <strong>\n                                <small>R$ </small>\n                                {item.amount.toLocaleString()}\n                              </strong>\n                            </a>\n                          </Card>\n                        </div>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <nav className=\"mt-15\" aria-label=\"Page navigation example\">\n          <ul className=\"pagination pagination-sm\">\n            <ul className=\"pagination pagination-sm\">\n              {pages.map(item => (\n                <li key={item} onClick={() => this.setState({ page: item })} className={`page-item ${item === this.state.page ? \"active\" : \"\"}`}>\n                  <a className=\"page-link\">{item + 1}</a>\n                </li>\n              ))}\n            </ul>\n          </ul>\n        </nav>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  ({ settings, toasts }) => ({\n    settings,\n    toasts,\n  }),\n  {\n    addToast: actionAddToast,\n    removeToast: actionRemoveToast,\n  },\n)(Content);\n"],"sourceRoot":""}