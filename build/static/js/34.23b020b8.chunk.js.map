{"version":3,"sources":["utils/api.jsx","components/date-time-picker/index.jsx","pages/Operational/Report/content.jsx"],"names":["api","axios","create","baseURL","interceptors","request","use","config","headers","Cookies","get","error","Promise","reject","registerLocale","pt","DatePicker","Content","props","state","page","page_limit","page_length","modalOpenIn","modalOpenOut","modalOpenTransf","users","value","label","filiais","sales","states","term","loading","calculations","expected_in","realized_in","filter_start_date","Date","filter_end_date","filter_filial_id","filter_state","loadFiliais","bind","loadSales","filterHistory","items","i","length","amount","this","setState","data","map","item","id","name","console","log","alert","date_s","format","date_e","client_name","toUpperCase","includes","title","user_name","dates","start","end","prevProps","prevState","pages","filter","Math","ceil","push","slice","customStyles","control","css","borderColor","isFocused","boxShadow","option","bgc","isSelected","backgroundColor","multiValueLabel","color","className","xs","sm","md","for","defaultValue","options","styles","onChange","row","tag","showTriangle","Toggle","Menu","onClick","selected","changeFilterDate","startDate","endDate","selectsRange","inline","locale","type","placeholder","event","target","toLocaleString","indice","parseISO","date","key","to","closed_by","canceled_by","filial_name","client_id","obs","placement","trigger","aria-label","Component","connect","settings","toasts","addToast","actionAddToast","removeToast","actionRemoveToast"],"mappings":"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","file":"static/js/34.23b020b8.chunk.js","sourcesContent":["import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst api = axios.create({ baseURL: \"https://onb-api-demo.agenciaonside.com.br\" });\n//const api = axios.create({ baseURL: \"http://192.168.1.5:8080\" });\n\napi.interceptors.request.use(\n  config => {\n    config.headers[\"Authorization\"] = \"bearer \" + Cookies.get(\"rui-auth-token\");\n    return config;\n  },\n  error => {\n    Promise.reject(error);\n  },\n);\n\nexport default api;\n","/**\n * Styles\n */\nimport \"./style.scss\";\n\n/**\n * External Dependencies\n */\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\nimport pt from \"date-fns/locale/pt\";\nregisterLocale(\"pt\", pt);\n\nexport default DatePicker;\n","/**\n * Styles\n */\nimport \"./style.scss\";\n\n/**\n * External Dependencies\n */\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { UncontrolledPopover, PopoverHeader, PopoverBody } from \"reactstrap\";\n\nimport { Modal, ModalBody, ModalFooter } from \"reactstrap\";\nimport { Button, Input, Label, FormGroup } from \"reactstrap\";\n\nimport { Row, Col } from \"reactstrap\";\nimport { Card, CardBody, CardText, CardTitle, CardSubtitle } from \"reactstrap\";\nimport { CardLink, CustomInput } from \"reactstrap\";\nimport Cookies from \"js-cookie\";\nimport Select from \"react-select\";\n\n/**\n * Internal Dependencies\n */\nimport Icon from \"../../../components/icon\";\nimport Dropdown from \"../../../components/bs-dropdown\";\nimport { addToast as actionAddToast, removeToast as actionRemoveToast } from \"../../../actions\";\nimport DatePicker from \"../../../components/date-time-picker\";\n/**\n * import services/utils\n */\n\nimport api from \"../../../utils/api\";\nimport { format, parseISO } from \"date-fns\";\nimport pt from \"date-fns/locale/pt-BR\";\n\n/**\n * Component\n */\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 0,\n      page_limit: 20,\n      page_length: 1,\n\n      modalOpenIn: false,\n      modalOpenOut: false,\n      modalOpenTransf: false,\n\n      users: [{ value: Cookies.get(\"rui-auth-user_id\"), label: Cookies.get(\"rui-auth-user_name\") }],\n      filiais: [],\n      sales: [],\n      states: [\n        { value: \"open\", label: \"Em Aberto\" },\n        { value: \"closed\", label: \"Fechadas/Finalizadas\" },\n        { value: \"canceled\", label: \"Canceladas\" },\n      ],\n      term: \"\",\n      loading: false,\n\n      calculations: {\n        expected_in: 0,\n        realized_in: 0,\n      },\n      filter_start_date: new Date(),\n      filter_end_date: null,\n      filter_filial_id: {\n        value: Cookies.get(\"rui-auth-filial_id\") != \"undefined\" ? Cookies.get(\"rui-auth-filial_id\") : \"\",\n        label: Cookies.get(\"rui-auth-filial_name\") != \"undefined\" ? Cookies.get(\"rui-auth-filial_name\") : \"Selecione\",\n      },\n      filter_state: { value: \"\", label: \"Todas\" },\n    };\n\n    this.loadFiliais = this.loadFiliais.bind(this);\n    this.loadSales = this.loadSales.bind(this);\n    this.filterHistory = this.filterHistory.bind(this);\n    this.calculations = this.calculations.bind(this);\n  }\n\n  // --> realizada os calculos do balanço\n  async calculations(items) {\n    let realized_in = 0;\n    let expected_in = 0;\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].state !== \"canceled\") {\n        expected_in = expected_in + items[i].amount;\n      }\n\n      if (items[i].state === \"closed\") {\n        realized_in = realized_in + items[i].amount;\n      }\n    }\n\n    this.setState({ calculations: { realized_in, expected_in } });\n  }\n\n  // carrega as filiais\n  async loadFiliais() {\n    try {\n      const { data } = await api.get(\"/filiais\");\n      if (data.length > 0) {\n        this.setState({\n          filiais: data.map(item => {\n            return { value: item.id, label: item.name };\n          }),\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      alert(\"Erro ao carregar filiais\");\n    }\n  }\n\n  // --> Carrega na api os lancamentos de contas a pagar e a receber\n  async loadSales() {\n    try {\n      const date_s = format(this.state.filter_start_date, \"yyyy-MM-dd\");\n      const date_e = this.state.filter_end_date ? format(this.state.filter_end_date, \"yyyy-MM-dd\") : format(this.state.filter_start_date, \"yyyy-MM-dd\");\n\n      const { data } = await api.get(\n        `/sales/?state=${this.state.filter_state.value}&start_date=${date_s}&end_date=${date_e}&filial_id=${this.state.filter_filial_id.value}`,\n      );\n\n      this.setState({ sales: data });\n\n      this.calculations(data);\n    } catch (error) {\n      console.log(error);\n      alert(\"Erro ao carregar Lançamentos\");\n    }\n  }\n\n  // --> Filtra os registros\n  filterHistory(item) {\n    if (\n      item?.client_name?.toUpperCase().includes(this.state.term.toUpperCase()) ||\n      item?.title?.toUpperCase().includes(this.state.term.toUpperCase()) ||\n      item?.user_name?.toUpperCase().includes(this.state.term.toUpperCase())\n    )\n      return true;\n    else return false;\n  }\n\n  // --> realiza a alteração do filtro de datas\n  changeFilterDate(dates) {\n    const [start, end] = dates;\n    this.setState({ filter_start_date: start, filter_end_date: end });\n  }\n\n  componentDidMount() {\n    this.loadSales();\n    this.loadFiliais();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (Cookies.get(\"rui-auth-token\")) {\n      if (\n        prevState.filter_start_date !== this.state.filter_start_date ||\n        prevState.filter_end_date !== this.state.filter_end_date ||\n        prevState.filter_filial_id !== this.state.filter_filial_id ||\n        prevState.filter_state !== this.state.filter_state\n      ) {\n        this.loadSales();\n      }\n    }\n  }\n\n  render() {\n    let { sales, page_length, page, page_limit } = this.state;\n    let pages = [];\n\n    // --> obtem os registros filtrados, conforme a busca pelo usuário\n    let items = sales.filter(item => this.state.term === \"\" || this.filterHistory(item));\n\n    page_length = Math.ceil(items.length / page_limit);\n    for (let i = 0; i < page_length; i++) {\n      pages.push(i);\n    }\n    // --> obtem os registros conforme pagina selecionada\n    items = items.slice(page * page_limit, page * page_limit + page_limit);\n\n    const customStyles = {\n      control: (css, state) => {\n        return {\n          ...css,\n          borderColor: state.isFocused ? \"rgba(114, 94, 195, 0.6)\" : \"#eaecf0\",\n          \"&:hover\": {\n            borderColor: state.isFocused ? \"rgba(114, 94, 195, 0.6)\" : \"#eaecf0\",\n          },\n          boxShadow: state.isFocused ? \"0 0 0 0.2rem rgba(114, 94, 195, 0.2)\" : \"\",\n        };\n      },\n      option: (css, state) => {\n        let bgc = \"\";\n\n        if (state.isSelected) {\n          bgc = \"#725ec3\";\n        } else if (state.isFocused) {\n          bgc = \"rgba(114, 94, 195, 0.2)\";\n        }\n\n        return {\n          ...css,\n          backgroundColor: bgc,\n        };\n      },\n      multiValueLabel: css => {\n        return {\n          ...css,\n          color: \"#545b61\",\n          backgroundColor: \"#eeeeef\",\n        };\n      },\n    };\n\n    return (\n      <Fragment>\n        <div className=\"bill-filters\">\n          <Row>\n            <Col xs={12} sm={12} md={3}>\n              <Label for=\"filter_filial_id\" className=\"mt-10\">\n                Filial\n              </Label>\n              <Select\n                id=\"filter_filial_id\"\n                name=\"filter_filial_id\"\n                defaultValue={this.state.filter_filial_id}\n                value={this.state.filter_filial_id}\n                options={[{ value: \"\", label: \"Selecione\" }, ...this.state.filiais]}\n                styles={customStyles}\n                onChange={row => this.setState({ filter_filial_id: row })}\n              />\n            </Col>\n\n            <Col xs={12} sm={12} md={3}>\n              <Label for=\"filter_state\" className=\"mt-10\">\n                Situação\n              </Label>\n              <Select\n                id=\"filter_state\"\n                name=\"filter_state\"\n                defaultValue={this.state.filter_state}\n                value={this.state.filter_state}\n                options={[{ value: \"\", label: \"Todos\" }, ...this.state.states]}\n                styles={customStyles}\n                onChange={row => this.setState({ filter_state: row })}\n              />\n            </Col>\n\n            <Col xs={12} sm={12} md={6}>\n              <Label className=\"mt-10\">Período</Label>\n              <Dropdown tag=\"div\" className=\"\" showTriangle>\n                <Dropdown.Toggle tag=\"button\" className=\"btn btn-brand btn-block mb-5\">\n                  <span className=\"text\">\n                    {format(this.state.filter_start_date, \"dd/MM/yyyy\")} à {format(this.state.filter_end_date ?? this.state.filter_start_date, \"dd/MM/yyyy\")}\n                  </span>\n                  <span className=\"icon icon ml-auto\">\n                    <Icon name=\"chevron-down\" />\n                  </span>\n                </Dropdown.Toggle>\n                <Dropdown.Menu tag=\"ul\" className=\"nav\">\n                  <li onClick={() => {}}>\n                    <DatePicker\n                      selected={this.state.filter_start_date}\n                      onChange={dates => this.changeFilterDate(dates)}\n                      startDate={this.state.filter_start_date}\n                      endDate={this.state.filter_end_date}\n                      selectsRange\n                      inline\n                      className=\"rui-datetimepicker form-control w-auto\"\n                      locale=\"pt\"\n                    />\n                  </li>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n          </Row>\n        </div>\n        <div className=\"card\">\n          <div className=\"card-body py-30 pt-0\">\n            <div className=\"rui-project-task-search\">\n              <div className=\"input-group input-group-clean\">\n                <input\n                  type=\"search\"\n                  className=\"form-control pl-3 order-1\"\n                  placeholder=\"Digite para procurar...\"\n                  value={this.state.term}\n                  onChange={event => this.setState({ term: event.target.value })}\n                />\n              </div>\n            </div>\n            <div className=\"rui-project-task-info\">\n              <a className=\"rui-project-task-info-link ml-20 mr-0\">\n                <span className=\"rui-project-task-info-title\">Saldo: </span>\n              </a>\n              <a className={`rui-task-subtitle balance ml-10 mr-0 in`}>\n                <strong>\n                  <small>R$ </small>\n                  {this.state.calculations.realized_in.toLocaleString()}\n                </strong>\n              </a>\n              <a className=\"rui-project-task-info-link ml-20 mr-0\">\n                <span className=\"rui-project-task-info-title\">Previsto: </span>\n              </a>\n              <a className={`rui-task-subtitle balance ml-10 mr-0 in`}>\n                <strong>\n                  <small>R$ </small>\n                  {this.state.calculations.expected_in.toLocaleString()}\n                </strong>\n              </a>\n            </div>\n            <ul className=\"list-group list-group-flush rui-project-task-list bills\">\n              {items.map((item, indice) => (\n                <div className=\"row-bill\">\n                  <div className=\"card-day\">\n                    {indice === 0 ? (\n                      <>\n                        <strong>{format(parseISO(item.date), \"dd\")}</strong> <small>{format(parseISO(item.date), \"MMM\", { locale: pt })}</small>\n                      </>\n                    ) : (\n                      <>\n                        {items[indice - 1].date !== item.date ? (\n                          <>\n                            <strong>{format(parseISO(item.date), \"dd\")}</strong> <small>{format(parseISO(item.date), \"MMM\", { locale: pt })}</small>\n                          </>\n                        ) : (\n                          <></>\n                        )}\n                      </>\n                    )}\n                  </div>\n                  <Card key={item.id} className=\"card\">\n                    <CardBody>\n                      <Link to={`/pdv/show/${item.id}`}>\n                        <CardTitle className=\"h2\">{item.title}</CardTitle>\n                      </Link>\n                      <CardSubtitle className=\"h5 text-muted mb-2 card-subtitle mt-2\">\n                        Aberto por: <strong>{item?.user_name ?? \"-\"}</strong>\n                      </CardSubtitle>\n                      {item.closed_by ? (\n                        <>\n                          <CardSubtitle className=\"h5 text-muted mb-2 card-subtitle mt-2\">\n                            Fechado por: <strong>{item?.closed_by ?? \"-\"}</strong>\n                          </CardSubtitle>\n                        </>\n                      ) : (\n                        <></>\n                      )}\n                      {item.canceled_by ? (\n                        <>\n                          <CardSubtitle className=\"h5 text-muted mb-2 card-subtitle mt-2\">\n                            Cancelado por: <strong>{item?.canceled_by ?? \"-\"}</strong>\n                          </CardSubtitle>\n                        </>\n                      ) : (\n                        <></>\n                      )}\n\n                      <CardSubtitle className=\"h4 text-muted mb-5\">{item?.filial_name}</CardSubtitle>\n                      {item.client_id ? (\n                        <>\n                          <CardText className=\"mb-5\">\n                            <Link to={`/crm/clientes/show/${item.client_id}`} className=\"card-link\">\n                              Cliente: <strong>{item?.client_name}</strong>\n                            </Link>\n                          </CardText>\n                        </>\n                      ) : (\n                        <></>\n                      )}\n\n                      <CardLink className={`${item.state} mt-10`} id={`popover_paid_${item.id}`}>\n                        {item.state === \"closed\" ? \"Fechada/Finalizada\" : item.state === \"canceled\" ? \"Cancelada\" : \"Em aberto\"}\n                      </CardLink>\n\n                      {item.obs ? (\n                        <>\n                          <CardLink id={`popover_obs_${item.id}`}>Observações</CardLink>\n                          <UncontrolledPopover placement=\"top\" target={`popover_obs_${item.id}`} trigger=\"hover\">\n                            <PopoverHeader>Observações</PopoverHeader>\n                            <PopoverBody>\n                              <strong>{item.obs}</strong>\n                            </PopoverBody>\n                          </UncontrolledPopover>\n                        </>\n                      ) : (\n                        <></>\n                      )}\n                    </CardBody>\n                    <a className={`rui-task-subtitle price ${item.state}`}>\n                      <strong>\n                        <small>R$ </small>\n                        {item.amount.toLocaleString()}\n                      </strong>\n                    </a>\n                  </Card>\n                </div>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <nav className=\"mt-15\" aria-label=\"Page navigation example\">\n          <ul className=\"pagination pagination-sm\">\n            <ul className=\"pagination pagination-sm\">\n              {pages.map(item => (\n                <li key={item} onClick={() => this.setState({ page: item })} className={`page-item ${item === this.state.page ? \"active\" : \"\"}`}>\n                  <a className=\"page-link\">{item + 1}</a>\n                </li>\n              ))}\n            </ul>\n          </ul>\n        </nav>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  ({ settings, toasts }) => ({\n    settings,\n    toasts,\n  }),\n  {\n    addToast: actionAddToast,\n    removeToast: actionRemoveToast,\n  },\n)(Content);\n"],"sourceRoot":""}