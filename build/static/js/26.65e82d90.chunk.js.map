{"version":3,"sources":["utils/api.jsx","components/date-time-picker/index.jsx","pages/Financial/Flow/content.jsx"],"names":["api","axios","create","baseURL","interceptors","request","use","config","headers","Cookies","get","error","Promise","reject","registerLocale","pt","DatePicker","Content","props","state","page","page_limit","page_length","modalOpenIn","modalOpenOut","modalOpenTransf","users","value","label","filiais","bills","bank_accounts","bank_accounts_in","flow_categories","previous_balance","term","loading","types","is_editable","id","type","date","bank_account_id","user_id","flow_category_id","client_id","description","obs","target","origin","bank_account_id_out","bank_account_id_in","auxItem","calculations","realized_in","expected_in","realized_out","expected_out","balance","balance_expected","filter_types","filter_start_date","Date","filter_end_date","filter_filial_id","filter_category_id","filter_bank_account_id","filter_type","toggleIn","bind","toggleOut","toggleTransf","toggleModalSave","toggleModalSaveTransf","handleEdit","update","updateTransf","loadFiliais","loadBills","loadBankAcconts","loadBankAccontsIn","loadCategories","filterHistory","clearFields","handleRemove","handleUpdateState","items","i","length","this","setState","prevState","data","map","item","name","console","log","alert","date_s","format","date_e","d","event","preventDefault","addToast","post","title","content","time","duration","color","response","more","target_bank_account_id","origin_bank_account_id","res","put","find","parseISO","bank_account","flow_category","client","toUpperCase","includes","cashier","filial","user","category","dates","start","end","prevProps","pages","filter","Math","ceil","push","slice","customStyles","control","css","borderColor","isFocused","boxShadow","option","bgc","isSelected","backgroundColor","multiValueLabel","className","Row","Col","xs","sm","md","Label","for","defaultValue","options","styles","onChange","row","tag","showTriangle","Toggle","Menu","onClick","selected","changeFilterDate","startDate","endDate","selectsRange","inline","locale","placeholder","UncontrolledPopover","placement","trigger","PopoverHeader","PopoverBody","undefined","toLocaleString","indice","Card","key","CardBody","CardTitle","CardSubtitle","CardText","to","CardLink","aria-label","Modal","isOpen","toggle","fade","onOpened","document","querySelector","focus","onSubmit","Button","ModalBody","FormGroup","Input","required","readOnly","disabled","inputProps","CustomInput","checked","ModalFooter","Component","connect","settings","toasts","actionAddToast","removeToast","actionRemoveToast"],"mappings":"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","file":"static/js/26.65e82d90.chunk.js","sourcesContent":["import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst api = axios.create({ baseURL: \"http://onb-api-demo.agenciaonside.com.br\" });\n//const api = axios.create({ baseURL: \"http://192.168.1.5:8080\" });\n\napi.interceptors.request.use(\n  config => {\n    config.headers[\"Authorization\"] = \"bearer \" + Cookies.get(\"rui-auth-token\");\n    return config;\n  },\n  error => {\n    Promise.reject(error);\n  },\n);\n\nexport default api;\n","/**\n * Styles\n */\nimport \"./style.scss\";\n\n/**\n * External Dependencies\n */\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\nimport pt from \"date-fns/locale/pt\";\nregisterLocale(\"pt\", pt);\n\nexport default DatePicker;\n","/**\n * Styles\n */\nimport \"./style.scss\";\n\n/**\n * External Dependencies\n */\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { UncontrolledPopover, PopoverHeader, PopoverBody } from \"reactstrap\";\n\nimport { Modal, ModalBody, ModalFooter } from \"reactstrap\";\nimport { Button, Input, Label, FormGroup } from \"reactstrap\";\n\nimport { Row, Col } from \"reactstrap\";\nimport { Card, CardBody, CardText, CardTitle, CardSubtitle } from \"reactstrap\";\nimport { CardLink, CustomInput } from \"reactstrap\";\nimport Cookies from \"js-cookie\";\nimport Select from \"react-select\";\n\n/**\n * Internal Dependencies\n */\nimport Icon from \"../../../components/icon\";\nimport Dropdown from \"../../../components/bs-dropdown\";\nimport { addToast as actionAddToast, removeToast as actionRemoveToast } from \"../../../actions\";\nimport DatePicker from \"../../../components/date-time-picker\";\n/**\n * import services/utils\n */\n\nimport api from \"../../../utils/api\";\nimport { format, parseISO } from \"date-fns\";\nimport pt from \"date-fns/locale/pt-BR\";\n\n/**\n * Component\n */\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 0,\n      page_limit: 20,\n      page_length: 1,\n\n      modalOpenIn: false,\n      modalOpenOut: false,\n      modalOpenTransf: false,\n\n      users: [{ value: Cookies.get(\"rui-auth-user_id\"), label: Cookies.get(\"rui-auth-user_name\") }],\n      filiais: [],\n      bills: [],\n      bank_accounts: [],\n      bank_accounts_in: [],\n      flow_categories: [],\n      previous_balance: null,\n      term: \"\",\n      loading: false,\n\n      types: [\n        { value: \"in\", label: \"Contas à Receber\" },\n        { value: \"out\", label: \"Contas à Pagar\" },\n      ],\n\n      is_editable: true,\n      id: \"\",\n      type: {},\n      date: \"\",\n      bank_account_id: {},\n      user_id: { value: Cookies.get(\"rui-auth-user_id\"), label: Cookies.get(\"rui-auth-user_name\") },\n      flow_category_id: {},\n      state: false,\n      client_id: {},\n      description: \"\",\n      value: \"\",\n      obs: \"\",\n      target: \"\",\n      origin: \"\",\n\n      bank_account_id_out: {},\n      bank_account_id_in: {},\n\n      auxItem: {},\n\n      calculations: {\n        realized_in: 0, // --> receitas realizadas\n        expected_in: 0, // --> receitas previstas\n        realized_out: 0, // --> despesas realizadas\n        expected_out: 0, // --> despesas previstas\n        balance: 0, // --> saldo atual\n        balance_expected: 0, // -> saldo previsto\n      },\n      filter_types: [\n        { value: \"\", label: \"Todos os lançamentos\" },\n        { value: \"type=in\", label: \"Receitas\" },\n        { value: \"type=in&state=paid\", label: \"Receitas recebidas\" },\n        { value: \"type=in&state=opened\", label: \"Receitas não pagas\" },\n        { value: \"type=out\", label: \"Despesas\" },\n        { value: \"type=out&state=paid\", label: \"Despesas pagas\" },\n        { value: \"type=out&state=opened\", label: \"Despesas não pagas\" },\n        { value: \"tranf=true\", label: \"Transferências entre contas\" },\n        { value: \"tranf=true&state=paid\", label: \"Transferências realizadas\" },\n        { value: \"tranf=true&state=opened\", label: \"Transferências pendentes\" },\n        { value: \"tranf=true&type=out\", label: \"Transferências feitas\" },\n        { value: \"tranf=true&type=in\", label: \"Transferências recebidas\" },\n      ],\n      filter_start_date: new Date(),\n      filter_end_date: null,\n      filter_filial_id: {\n        value: Cookies.get(\"rui-auth-filial_id\") != \"undefined\" ? Cookies.get(\"rui-auth-filial_id\") : \"\",\n        label: Cookies.get(\"rui-auth-filial_name\") != \"undefined\" ? Cookies.get(\"rui-auth-filial_name\") : \"Selecione\",\n      },\n      filter_category_id: { value: \"\", label: \"Todas\" },\n      filter_bank_account_id: { value: \"\", label: \"Todos\" },\n      filter_type: { value: \"\", label: \"Todos os lançamentos\" },\n    };\n\n    this.toggleIn = this.toggleIn.bind(this);\n    this.toggleOut = this.toggleOut.bind(this);\n    this.toggleTransf = this.toggleTransf.bind(this);\n    this.toggleModalSave = this.toggleModalSave.bind(this);\n    this.toggleModalSaveTransf = this.toggleModalSaveTransf.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.update = this.update.bind(this);\n    this.updateTransf = this.updateTransf.bind(this);\n    this.loadFiliais = this.loadFiliais.bind(this);\n    this.loadBills = this.loadBills.bind(this);\n    this.loadBankAcconts = this.loadBankAcconts.bind(this);\n    this.loadBankAccontsIn = this.loadBankAccontsIn.bind(this);\n    this.loadCategories = this.loadCategories.bind(this);\n    this.filterHistory = this.filterHistory.bind(this);\n    this.clearFields = this.clearFields.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleUpdateState = this.handleUpdateState.bind(this);\n    this.calculations = this.calculations.bind(this);\n  }\n\n  // --> realizada os calculos do balanço\n  async calculations(items) {\n    let realized_in = 0;\n    let expected_in = 0;\n    let realized_out = 0;\n    let expected_out = 0;\n    let balance = 0;\n    let balance_expected = 0;\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].type === \"in\") {\n        expected_in = expected_in + items[i].value;\n\n        if (items[i].state === \"paid\") {\n          realized_in = realized_in + items[i].value;\n        }\n      } else if (items[i].type === \"out\") {\n        expected_out = expected_out + items[i].value;\n\n        if (items[i].state === \"paid\") {\n          realized_out = realized_out + items[i].value;\n        }\n      }\n    }\n\n    balance = realized_in - realized_out;\n    balance_expected = expected_in - expected_out;\n\n    this.setState({ calculations: { realized_in, expected_in, realized_out, expected_out, balance, balance_expected } });\n  }\n\n  // --> responsavel por abrir e fechar o modal da Contas a receber\n  toggleIn() {\n    this.setState(prevState => ({\n      type: { value: \"in\", label: \"Contas à Receber\" },\n      modalOpenIn: !prevState.modalOpenIn,\n    }));\n  }\n\n  // --> responsavel por abrir e fechar o modal da Contas a receber\n  toggleOut() {\n    this.setState(prevState => ({\n      type: { value: \"out\", label: \"Contas à Pagar\" },\n      modalOpenOut: !prevState.modalOpenOut,\n    }));\n  }\n\n  // --> responsavel por abrir e fechar o modal da Contas a receber\n  toggleTransf() {\n    this.setState(prevState => ({\n      modalOpenTransf: !prevState.modalOpenTransf,\n    }));\n  }\n\n  // carrega as filiais\n  async loadFiliais() {\n    try {\n      const { data } = await api.get(\"/filiais\");\n      if (data.length > 0) {\n        this.setState({\n          filiais: data.map(item => {\n            return { value: item.id, label: item.name };\n          }),\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      alert(\"Erro ao carregar filiais\");\n    }\n  }\n\n  // --> Carrega na api os lancamentos de contas a pagar e a receber\n  async loadBills() {\n    try {\n      const date_s = format(this.state.filter_start_date, \"yyyy-MM-dd\");\n      const date_e = this.state.filter_end_date ? format(this.state.filter_end_date, \"yyyy-MM-dd\") : format(this.state.filter_start_date, \"yyyy-MM-dd\");\n\n      const { data } = await api.get(\n        `/bills/?start_date=${date_s}&end_date=${date_e}&filial_id=${this.state.filter_filial_id.value}&flow_category_id=${this.state.filter_category_id.value}&bank_account_id=${this.state.filter_bank_account_id.value}&${this.state.filter_type.value}`,\n      );\n\n      this.setState({ bills: data.bills, previous_balance: data.previous_balance });\n\n      this.calculations(data.bills);\n    } catch (error) {\n      console.log(error);\n      alert(\"Erro ao carregar Lançamentos\");\n    }\n  }\n\n  // --> Carrega na api as contas\n  async loadBankAcconts() {\n    try {\n      const { data } = await api.get(\"/banks/accounts\");\n      if (data.length > 0) {\n        this.setState({\n          bank_accounts: data.map(item => {\n            return { value: item.id, label: item.name };\n          }),\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      alert(\"Erro ao carregar Contas e Carterias\");\n    }\n  }\n\n  // --> Carrega na api as contas de entrada\n  async loadBankAccontsIn() {\n    try {\n      const { data } = await api.get(\"/banks/accounts?all=true\");\n      if (data.length > 0) {\n        this.setState({\n          bank_accounts_in: data.map(item => {\n            return { value: item.id, label: item.name };\n          }),\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      alert(\"Erro ao carregar Contas e Carterias de Entrada de Recursos\");\n    }\n  }\n\n  // --> Carrega as categorias das dos lancamentos\n  async loadCategories() {\n    const { data } = await api.get(\"/flows/categories\");\n    this.setState({\n      flow_categories: data.map(d => {\n        return { value: d.id, label: d.name };\n      }),\n    });\n  }\n\n  // --> salva o registro\n  async toggleModalSave(event) {\n    event.preventDefault();\n    const { addToast } = this.props;\n\n    if (\n      !this.state.description ||\n      !this.state.flow_category_id ||\n      !this.state.date ||\n      !this.state.bank_account_id ||\n      !this.state.value ||\n      !this.state.user_id\n    ) {\n      alert(\"Preencha os campos obrigatórios.\");\n      return false;\n    }\n\n    this.setState({ loading: true });\n\n    if (this.state.id) {\n      return this.update();\n    }\n\n    try {\n      const { data } = await api.post(`/bills`, {\n        bank_account_id: this.state.bank_account_id.value,\n        client_id: this.state?.client_id?.value,\n        flow_category_id: this.state.flow_category_id.value,\n        description: this.state.description,\n        date: this.state.date,\n        value: this.state.value,\n        type: this.state.type.value,\n        obs: this.state.obs,\n        state: this.state.state ? \"paid\" : \"opened\",\n        user_id: this.state.user_id.value,\n      });\n\n      this.loadBills();\n      this.clearFields();\n      this.setState({ modalOpenIn: false, modalOpenOut: false, modalOpenTransf: false });\n\n      addToast({ title: \"Sucesso!.\", content: \"Lançamento realizado com sucesso.\", time: new Date(), duration: 10000, color: \"success\" });\n    } catch (error) {\n      if (error.response) {\n        if (error.response.data && error.response.data.error === true) {\n          alert(error.response.data.more);\n        } else {\n          alert(\"Erro ao salvar lançamento. Tente novamente\");\n        }\n      } else {\n        alert(\"Erro ao salvar lançamento. Tente novamente\");\n      }\n      console.log(error);\n    }\n\n    this.setState({ loading: false });\n  }\n\n  // --> salva o registro de transferencia\n  async toggleModalSaveTransf(event) {\n    event.preventDefault();\n    const { addToast } = this.props;\n\n    if (!this.state.bank_account_id_out || !this.state.bank_account_id_in || !this.state.date || !this.state.value || !this.state.description) {\n      alert(\"Preencha os campos obrigatórios.\");\n      return false;\n    }\n\n    this.setState({ loading: true });\n\n    if (this.state.id) {\n      return this.updateTransf();\n    }\n\n    try {\n      // --> realiza a saida do recurso na conta de origem\n      const { data } = await api.post(`/bills`, {\n        bank_account_id: this.state.bank_account_id_out.value,\n        flow_category_id: 46, // --> 45 = transferencia entre contas\n        description: this.state.description,\n        date: this.state.date,\n        value: this.state.value,\n        type: \"out\",\n        obs: this.state.obs,\n        state: \"paid\",\n        user_id: this.state.user_id.value,\n        target_bank_account_id: this.state.bank_account_id_in.value,\n      });\n\n      if (data) {\n        // --> se houver sucesso na retirada do recursos entao envia para entrada do mesmo\n        // --> realiza a entrada do recurso na conta de destino\n        const res = await api.post(`/bills`, {\n          bank_account_id: this.state.bank_account_id_in.value,\n          flow_category_id: 46, // --> 45 = transferencia entre contas\n          description: this.state.description,\n          date: this.state.date,\n          value: this.state.value,\n          type: \"in\",\n          obs: this.state.obs,\n          state: \"paid\",\n          user_id: this.state.user_id.value,\n          origin: data.id,\n          origin_bank_account_id: this.state.bank_account_id_out.value,\n        });\n\n        if (res.data) {\n          const res2 = await api.put(`/bills/${data.id}`, { target: res.data.id });\n        }\n      }\n\n      this.loadBills();\n      this.clearFields();\n      this.setState({ modalOpenIn: false, modalOpenOut: false, modalOpenTransf: false });\n\n      addToast({ title: \"Sucesso!.\", content: \"Transferência realizada com sucesso.\", time: new Date(), duration: 10000, color: \"success\" });\n    } catch (error) {\n      if (error.response) {\n        if (error.response.data && error.response.data.error === true) alert(error.response.data.more);\n        else alert(\"Erro ao salvar transferência. Tente novamente\");\n      } else alert(\"Erro ao salvar transferência. Tente novamente\");\n\n      console.log(error);\n    }\n\n    this.setState({ loading: false });\n  }\n\n  // --> identifica o tipo de edição, se é entrada, saida ou transferencia\n  async handleEdit(item) {\n    this.setState({\n      auxItem: item,\n      is_editable: item.is_editable,\n      id: item.id,\n      type: this.state.types.find(i => i.value === item.type),\n      date: format(parseISO(item.date), \"yyyy'-'MM'-'dd\"),\n      bank_account_id: { value: item.bank_account.id, label: item.bank_account.name },\n      flow_category_id: { value: item.flow_category.id, label: item.flow_category.name },\n      state: item.state === \"paid\",\n      client_id: { value: item?.client?.id, label: item?.client?.name },\n      description: item.description,\n      value: item.value,\n      obs: item.obs,\n      target: item.target,\n      origin: item.origin,\n      bank_account_id_out: this.state.bank_accounts_in.find(i => i.value === (item.origin_bank_account_id ?? item.bank_account_id)),\n      bank_account_id_in: this.state.bank_accounts_in.find(i => i.value === (item.target_bank_account_id ?? item.bank_account_id)),\n    });\n\n    if (item.type === \"in\" && item.flow_category_id !== 46) {\n      // --> se for entrada e nao for do tipo transferenca\n      this.toggleIn();\n    } else if (item.type === \"out\" && item.flow_category_id !== 46) {\n      // --> se for saida e nao for do tipo transferenca\n      this.toggleOut();\n    } else if (item.type === \"in\" && item.flow_category_id === 46) {\n      // --> se for entrada e for do tipo transferenca\n      this.toggleTransf();\n    } else if (item.type === \"out\" && item.flow_category_id === 46) {\n      // --> se for saida e for do tipo transferenca\n      this.toggleTransf();\n    }\n  }\n\n  // --> atualiza o registro\n  async update() {\n    const { addToast } = this.props;\n\n    this.setState({ loading: true });\n\n    try {\n      const { data } = await api.put(`/bills/${this.state.id}`, {\n        bank_account_id: this.state.bank_account_id.value,\n        client_id: this.state?.client_id?.value,\n        flow_category_id: this.state.flow_category_id.value,\n        description: this.state.description,\n        date: this.state.date,\n        value: this.state.value,\n        type: this.state.type.value,\n        obs: this.state.obs,\n        state: this.state.state ? \"paid\" : \"opened\",\n        user_id: this.state.user_id.value,\n      });\n\n      this.loadBills();\n      this.clearFields();\n      this.setState({ modalOpenIn: false, modalOpenOut: false, modalOpenTransf: false });\n\n      addToast({ title: \"Sucesso!.\", content: \"Lançamento atualizado com sucesso.\", time: new Date(), duration: 10000, color: \"success\" });\n    } catch (error) {\n      if (error.response) {\n        if (error.response.data && error.response.data.error === true) alert(error.response.data.more);\n        else alert(\"Erro ao salvar lançamento. Tente novamente\");\n      } else alert(\"Erro ao salvar lançamento. Tente novamente\");\n\n      console.log(error);\n    }\n\n    this.setState({ loading: false });\n  }\n\n  // --> atualizada uma transferencia\n  async updateTransf() {\n    const { addToast } = this.props;\n\n    this.setState({ loading: false });\n\n    try {\n      // verifica se está editando a saida do recurso\n      if (this.state.type.value === \"out\") {\n        const { data } = await api.put(`/bills/${this.state.id}`, {\n          bank_account_id: this.state.bank_account_id_out.value,\n          flow_category_id: 46, // --> 46 = transferencia entre contas\n          description: this.state.description,\n          date: this.state.date,\n          value: this.state.value,\n          obs: this.state.obs,\n          target_bank_account_id: this.state.bank_account_id_in.value,\n        });\n\n        if (data) {\n          const res = await api.put(`/bills/${data.target}`, {\n            bank_account_id: this.state.bank_account_id_in.value,\n            flow_category_id: 46, // --> 46 = transferencia entre contas\n            description: this.state.description,\n            date: this.state.date,\n            value: this.state.value,\n            obs: this.state.obs,\n            origin_bank_account_id: this.state.bank_account_id_out.value,\n          });\n        }\n      } else if (this.state.type.value === \"in\") {\n        //se estiver editando a entrada de recurso\n        const { data } = await api.put(`/bills/${this.state.id}`, {\n          bank_account_id: this.state.bank_account_id_in.value,\n          flow_category_id: 46, // --> 46 = transferencia entre contas\n          description: this.state.description,\n          date: this.state.date,\n          value: this.state.value,\n          obs: this.state.obs,\n          origin_bank_account_id: this.state.bank_account_id_out.value,\n        });\n\n        if (data) {\n          const res = await api.put(`/bills/${data.origin}`, {\n            bank_account_id: this.state.bank_account_id_out.value,\n            flow_category_id: 46, // --> 46 = transferencia entre contas\n            description: this.state.description,\n            date: this.state.date,\n            value: this.state.value,\n            obs: this.state.obs,\n            target_bank_account_id: this.state.bank_account_id_in.value,\n          });\n        }\n      }\n\n      this.loadBills();\n      this.clearFields();\n      this.setState({ modalOpenIn: false, modalOpenOut: false, modalOpenTransf: false });\n\n      addToast({ title: \"Sucesso!.\", content: \"Transferência atualizada com sucesso.\", time: new Date(), duration: 10000, color: \"success\" });\n    } catch (error) {\n      if (error.response) {\n        if (error.response.data && error.response.data.error === true) alert(error.response.data.more);\n        else alert(\"Erro ao salvar transferência. Tente novamente\");\n      } else alert(\"Erro ao salvar transferência. Tente novamente\");\n\n      console.log(error);\n    }\n\n    this.setState({ loading: false });\n  }\n\n  // --> remove o registro\n  async handleRemove() {\n    const { addToast } = this.props;\n\n    this.setState({ loading: true });\n\n    try {\n      // verifica se está editando a saida do recurso\n      if (this.state.auxItem.type === \"out\") {\n        await api.delete(`/bills/${this.state.auxItem.id}`);\n        if (this.state.auxItem.target) {\n          await api.delete(`/bills/${this.state.auxItem.target}`);\n        }\n      } else if (this.state.auxItem.type === \"in\") {\n        //se estiver editando a entrada de recurso\n        await api.delete(`/bills/${this.state.auxItem.id}`);\n        if (this.state.auxItem.origin) {\n          await api.delete(`/bills/${this.state.auxItem.origin}`);\n        }\n      }\n\n      this.loadBills();\n      this.clearFields();\n      this.setState({ modalOpenIn: false, modalOpenOut: false, modalOpenTransf: false });\n\n      addToast({ title: \"Sucesso!.\", content: \"Lançamento removido com sucesso.\", time: new Date(), duration: 10000, color: \"success\" });\n    } catch (error) {\n      if (error.response) {\n        if (error.response.data && error.response.data.error === true) alert(error.response.data.more);\n        else alert(\"Erro ao remover lançamento. Tente novamente\");\n      } else alert(\"Erro ao remover lançamento. Tente novamente\");\n\n      console.log(error);\n    }\n    this.setState({ loading: false });\n  }\n\n  // --> atualiza o registro\n  async handleUpdateState(item) {\n    const { addToast } = this.props;\n\n    this.setState({ loading: true });\n\n    try {\n      const state = item.state === \"paid\" ? \"opened\" : \"paid\";\n\n      // verifica se está editando a saida do recurso\n      if (item.type === \"out\") {\n        await api.put(`/bills/${item.id}`, { state });\n        if (item.target) {\n          await api.put(`/bills/${item.target}`, { state });\n        }\n      } else if (item.type === \"in\") {\n        //se estiver editando a entrada de recurso\n        await api.put(`/bills/${item.id}`, { state });\n        if (item.origin) {\n          await api.put(`/bills/${item.origin}`, { state });\n        }\n      }\n\n      this.loadBills();\n      addToast({ title: \"Sucesso!.\", content: \"A Situação foi atualizada com sucesso.\", time: new Date(), duration: 10000, color: \"success\" });\n    } catch (error) {\n      if (error.response) {\n        if (error.response.data && error.response.data.error === true)\n          addToast({ title: \"Erro!.\", content: error.response.data.more, time: new Date(), duration: 10000, color: \"danger\" });\n        else addToast({ title: \"Erro!.\", content: \"Desculpe, não foi possivel atualizar a situação\", time: new Date(), duration: 10000, color: \"danger\" });\n      } else addToast({ title: \"Erro!.\", content: \"Desculpe, não foi possivel atualizar a situação\", time: new Date(), duration: 10000, color: \"danger\" });\n\n      console.log(error);\n    }\n\n    this.setState({ loading: false });\n  }\n\n  // --> Filtra os registros\n  filterHistory(item) {\n    if (\n      item?.bank_account?.name?.toUpperCase().includes(this.state.term.toUpperCase()) ||\n      item?.cashier?.name?.toUpperCase().includes(this.state.term.toUpperCase()) ||\n      item?.client?.name?.toUpperCase().includes(this.state.term.toUpperCase()) ||\n      item.description.toUpperCase().includes(this.state.term.toUpperCase()) ||\n      item?.filial?.name?.toUpperCase().includes(this.state.term.toUpperCase()) ||\n      item?.obs?.toUpperCase().includes(this.state.term.toUpperCase()) ||\n      item?.user?.name?.toUpperCase().includes(this.state.term.toUpperCase()) ||\n      item?.flow_category?.name?.toUpperCase().includes(this.state.term.toUpperCase()) ||\n      item?.flow_category?.category?.toUpperCase().includes(this.state.term.toUpperCase())\n    )\n      return true;\n    else return false;\n  }\n\n  // --> limpa os campos do modal\n  clearFields() {\n    this.setState({\n      auxItem: {},\n      is_editable: true,\n      id: \"\",\n      type: {},\n      date: \"\",\n      bank_account_id: {},\n      flow_category_id: {},\n      obs: \"\",\n      value: \"\",\n      description: \"\",\n      bank_account_id_out: {},\n      bank_account_id_in: {},\n    });\n  }\n\n  // --> realiza a alteração do filtro de datas\n  changeFilterDate(dates) {\n    const [start, end] = dates;\n    this.setState({ filter_start_date: start, filter_end_date: end });\n  }\n\n  componentDidMount() {\n    this.loadBills();\n    this.loadFiliais();\n    this.loadBankAcconts();\n    this.loadBankAccontsIn();\n    this.loadCategories();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (Cookies.get(\"rui-auth-token\")) {\n      if (\n        prevState.filter_start_date !== this.state.filter_start_date ||\n        prevState.filter_end_date !== this.state.filter_end_date ||\n        prevState.filter_filial_id !== this.state.filter_filial_id ||\n        prevState.filter_category_id !== this.state.filter_category_id ||\n        prevState.filter_bank_account_id !== this.state.filter_bank_account_id ||\n        prevState.filter_type !== this.state.filter_type\n      ) {\n        this.loadBills();\n      }\n    }\n  }\n\n  render() {\n    let { bills, page_length, page, page_limit } = this.state;\n    let pages = [];\n\n    // --> obtem os registros filtrados, conforme a busca pelo usuário\n    let items = bills.filter(item => this.state.term === \"\" || this.filterHistory(item));\n\n    page_length = Math.ceil(items.length / page_limit);\n    for (let i = 0; i < page_length; i++) {\n      pages.push(i);\n    }\n    // --> obtem os registros conforme pagina selecionada\n    items = items.slice(page * page_limit, page * page_limit + page_limit);\n\n    const customStyles = {\n      control: (css, state) => {\n        return {\n          ...css,\n          borderColor: state.isFocused ? \"rgba(114, 94, 195, 0.6)\" : \"#eaecf0\",\n          \"&:hover\": {\n            borderColor: state.isFocused ? \"rgba(114, 94, 195, 0.6)\" : \"#eaecf0\",\n          },\n          boxShadow: state.isFocused ? \"0 0 0 0.2rem rgba(114, 94, 195, 0.2)\" : \"\",\n        };\n      },\n      option: (css, state) => {\n        let bgc = \"\";\n\n        if (state.isSelected) {\n          bgc = \"#725ec3\";\n        } else if (state.isFocused) {\n          bgc = \"rgba(114, 94, 195, 0.2)\";\n        }\n\n        return {\n          ...css,\n          backgroundColor: bgc,\n        };\n      },\n      multiValueLabel: css => {\n        return {\n          ...css,\n          color: \"#545b61\",\n          backgroundColor: \"#eeeeef\",\n        };\n      },\n    };\n\n    return (\n      <Fragment>\n        <div className=\"bill-filters\">\n          <Row>\n            <Col xs={12} sm={6} md={2}>\n              <Label for=\"filter_type\" className=\"mt-10\">\n                Tipo\n              </Label>\n              <Select\n                id=\"filter_type\"\n                name=\"filter_type\"\n                defaultValue={this.state.filter_type}\n                value={this.state.filter_type}\n                options={this.state.filter_types}\n                styles={customStyles}\n                onChange={row => this.setState({ filter_type: row })}\n              />\n            </Col>\n\n            <Col xs={12} sm={6} md={2}>\n              <Label for=\"filter_filial_id\" className=\"mt-10\">\n                Filial\n              </Label>\n              <Select\n                id=\"filter_filial_id\"\n                name=\"filter_filial_id\"\n                defaultValue={this.state.filter_filial_id}\n                value={this.state.filter_filial_id}\n                options={[{ value: \"\", label: \"Selecione\" }, ...this.state.filiais]}\n                styles={customStyles}\n                onChange={row => this.setState({ filter_filial_id: row })}\n              />\n            </Col>\n\n            <Col xs={12} sm={12} md={4}>\n              <Label className=\"mt-10\">Período</Label>\n              <Dropdown tag=\"div\" className=\"\" showTriangle>\n                <Dropdown.Toggle tag=\"button\" className=\"btn btn-brand btn-block mb-5\">\n                  <span className=\"text\">\n                    {format(this.state.filter_start_date, \"dd/MM/yyyy\")} à {format(this.state.filter_end_date ?? this.state.filter_start_date, \"dd/MM/yyyy\")}\n                  </span>\n                  <span className=\"icon icon ml-auto\">\n                    <Icon name=\"chevron-down\" />\n                  </span>\n                </Dropdown.Toggle>\n                <Dropdown.Menu tag=\"ul\" className=\"nav\">\n                  <li onClick={() => {}}>\n                    <DatePicker\n                      selected={this.state.filter_start_date}\n                      onChange={dates => this.changeFilterDate(dates)}\n                      startDate={this.state.filter_start_date}\n                      endDate={this.state.filter_end_date}\n                      selectsRange\n                      inline\n                      className=\"rui-datetimepicker form-control w-auto\"\n                      locale=\"pt\"\n                    />\n                  </li>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n\n            <Col xs={12} sm={6} md={2}>\n              <Label for=\"filter_category_id\" className=\"mt-10\">\n                Categorias\n              </Label>\n              <Select\n                id=\"filter_category_id\"\n                name=\"filter_category_id\"\n                defaultValue={this.state.filter_category_id}\n                value={this.state.filter_category_id}\n                options={[{ value: \"\", label: \"Todas\" }, ...this.state.flow_categories]}\n                styles={customStyles}\n                onChange={row => this.setState({ filter_category_id: row })}\n              />\n            </Col>\n            <Col xs={12} sm={6} md={2}>\n              <Label for=\"filter_bank_account_id\" className=\"mt-10\">\n                Bancos&Carterias\n              </Label>\n              <Select\n                id=\"filter_bank_account_id\"\n                name=\"filter_bank_account_id\"\n                defaultValue={this.state.filter_bank_account_id}\n                value={this.state.filter_bank_account_id}\n                options={[{ value: \"\", label: \"Todos\" }, ...this.state.bank_accounts]}\n                styles={customStyles}\n                onChange={row => this.setState({ filter_bank_account_id: row })}\n              />\n            </Col>\n          </Row>\n        </div>\n        <div className=\"card\">\n          <div className=\"card-body py-30 pt-0\">\n            <div className=\"rui-project-task-search\">\n              <div className=\"input-group input-group-clean\">\n                <input\n                  type=\"search\"\n                  className=\"form-control pl-3 order-1\"\n                  placeholder=\"Digite para procurar...\"\n                  value={this.state.term}\n                  onChange={event => this.setState({ term: event.target.value })}\n                />\n                <div className=\"input-group-prepend mnl-3 order-2\">\n                  <button\n                    id=\"popover_expenses\"\n                    onClick={() => {\n                      this.clearFields();\n                      this.toggleOut();\n                    }}\n                    type=\"button\"\n                    className=\"ml-15 btn btn-custom-round btn-danger btn-lg\">\n                    <Icon name=\"arrow-down-circle\" />\n                  </button>\n\n                  <UncontrolledPopover placement=\"right\" target=\"popover_expenses\" trigger=\"hover\">\n                    <PopoverHeader>Nova Conta à Pagar</PopoverHeader>\n                    <PopoverBody>Clique aqui para adicionar uma nova Conta à Pagar</PopoverBody>\n                  </UncontrolledPopover>\n\n                  <button\n                    id=\"popover_income\"\n                    onClick={() => {\n                      this.clearFields();\n                      this.toggleIn();\n                    }}\n                    type=\"button\"\n                    className=\"ml-15 btn btn-custom-round btn-success btn-lg\">\n                    <Icon name=\"arrow-up-circle\" />\n                  </button>\n                  <UncontrolledPopover placement=\"right\" target=\"popover_income\" trigger=\"hover\">\n                    <PopoverHeader>Nova Conta à Receber</PopoverHeader>\n                    <PopoverBody>Clique aqui para adicionar uma nova Conta à Receber</PopoverBody>\n                  </UncontrolledPopover>\n\n                  <button\n                    id=\"popover_transf\"\n                    onClick={() => {\n                      this.clearFields();\n                      this.toggleTransf();\n                    }}\n                    type=\"button\"\n                    className=\"ml-15 btn btn-custom-round btn-primary btn-lg\">\n                    <Icon name=\"git-branch\" />\n                  </button>\n\n                  <UncontrolledPopover placement=\"right\" target=\"popover_transf\" trigger=\"hover\">\n                    <PopoverHeader>Transferência de recursos</PopoverHeader>\n                    <PopoverBody>Clique para realizar uma transferência entre contas</PopoverBody>\n                  </UncontrolledPopover>\n                </div>\n              </div>\n            </div>\n            <div className=\"rui-project-task-info\">\n              {this.state.previous_balance !== null && this.state.previous_balance != undefined ? (\n                <>\n                  <a className=\"rui-project-task-info-link ml-20 mr-0\">\n                    <span className=\"rui-project-task-info-title\">Saldo Anterior: </span>\n                  </a>\n                  <a className={`rui-task-subtitle balance ml-10 mr-0 ${this.state.previous_balance < 0 ? \"out\" : \"in\"} `}>\n                    {this.state.previous_balance < 0 ? (\n                      <>\n                        <strong>\n                          <small>- R$ </small>\n                          {(this.state.previous_balance * -1).toLocaleString()}\n                        </strong>\n                      </>\n                    ) : (\n                      <>\n                        <strong>\n                          <small>R$ </small>\n                          {this.state.previous_balance.toLocaleString()}\n                        </strong>\n                      </>\n                    )}\n                  </a>\n                </>\n              ) : (\n                <></>\n              )}\n              <a className=\"rui-project-task-info-link ml-20 mr-0\">\n                <span className=\"rui-project-task-info-title\">Saldo: </span>\n              </a>\n              <a className={`rui-task-subtitle balance ml-10 mr-0 ${this.state.calculations.balance < 0 ? \"out\" : \"in\"} `}>\n                {this.state.calculations.balance < 0 ? (\n                  <>\n                    <strong>\n                      <small>- R$ </small>\n                      {(this.state.calculations.balance * -1).toLocaleString()}\n                    </strong>\n                  </>\n                ) : (\n                  <>\n                    <strong>\n                      <small>R$ </small>\n                      {this.state.calculations.balance.toLocaleString()}\n                    </strong>\n                  </>\n                )}\n              </a>\n              <a className=\"rui-project-task-info-link ml-20 mr-0\">\n                <span className=\"rui-project-task-info-title\">Previsto: </span>\n              </a>\n              <a className={`rui-task-subtitle balance ml-10 mr-0 ${this.state.calculations.balance_expected < 0 ? \"out\" : \"in\"} `}>\n                {this.state.calculations.balance_expected < 0 ? (\n                  <>\n                    <strong>\n                      <small>- R$ </small>\n                      {(this.state.calculations.balance_expected * -1).toLocaleString()}\n                    </strong>\n                  </>\n                ) : (\n                  <>\n                    <strong>\n                      <small>R$ </small>\n                      {this.state.calculations.balance_expected.toLocaleString()}\n                    </strong>\n                  </>\n                )}\n              </a>\n            </div>\n            <ul className=\"list-group list-group-flush rui-project-task-list bills\">\n              {items.map((item, indice) => (\n                <div className=\"row-bill\">\n                  <div className=\"card-day\">\n                    {indice === 0 ? (\n                      <>\n                        <strong>{format(parseISO(item.date), \"dd\")}</strong> <small>{format(parseISO(item.date), \"MMM\", { locale: pt })}</small>\n                      </>\n                    ) : (\n                      <>\n                        {items[indice - 1].date !== item.date ? (\n                          <>\n                            <strong>{format(parseISO(item.date), \"dd\")}</strong> <small>{format(parseISO(item.date), \"MMM\", { locale: pt })}</small>\n                          </>\n                        ) : (\n                          <></>\n                        )}\n                      </>\n                    )}\n                  </div>\n                  <Card key={item.id} className=\"card\">\n                    <CardBody>\n                      <CardTitle className=\"h2\" onClick={() => this.handleEdit(item)}>\n                        {item.description}\n                      </CardTitle>\n                      <CardSubtitle className=\"h5 text-muted mb-2 card-subtitle mt-2\">\n                        <strong>{item?.flow_category?.name ?? \"-\"}</strong>\n                      </CardSubtitle>\n                      <CardSubtitle className=\"h4 text-muted mb-5\">{item?.bank_account?.name}</CardSubtitle>\n                      {item.client_id ? (\n                        <>\n                          <CardText className=\"mb-5\">\n                            <Link to={`/crm/clientes/show/${item.client_id}`} className=\"card-link\">\n                              {item?.client?.name}\n                            </Link>\n                          </CardText>\n                        </>\n                      ) : (\n                        <></>\n                      )}\n\n                      <CardLink onClick={() => this.handleUpdateState(item)} className={`${item.state} mt-10`} id={`popover_paid_${item.id}`}>\n                        {item.flow_category_id === 46 ? ( // --> caso seja transferencia entre contas\n                          <>\n                            {item.type === \"in\" ? (\n                              <>{this.state.loading ? \"Atualizando...\" : item.state === \"paid\" ? \"Recebido\" : \"À Receber\"}</>\n                            ) : (\n                              <>{this.state.loading ? \"Atualizando...\" : item.state === \"paid\" ? \"Realizado\" : \"À Realizar\"}</>\n                            )}\n                          </>\n                        ) : (\n                          <>\n                            {this.state.loading ? (\n                              \"Atualizando...\"\n                            ) : item.type === \"in\" ? (\n                              <>{this.state.loading ? \"Atualizando...\" : item.state === \"paid\" ? \"Recebido\" : \"À Receber\"}</>\n                            ) : (\n                              <>{this.state.loading ? \"Atualizando...\" : item.state === \"paid\" ? \"Pago\" : \"À Pagar\"}</>\n                            )}\n                          </>\n                        )}\n                      </CardLink>\n                      <UncontrolledPopover placement=\"top\" target={`popover_paid_${item.id}`} trigger=\"hover\">\n                        <PopoverHeader>\n                          {item.flow_category_id === 46 ? ( // --> caso seja transferencia entre contas\n                            <>\n                              {item.type === \"in\" ? (\n                                <>{item.state === \"paid\" ? \"Recebido\" : \"À Receber\"}</>\n                              ) : (\n                                <>{item.state === \"paid\" ? \"Realizado\" : \"À Realizar\"}</>\n                              )}\n                            </>\n                          ) : (\n                            <>\n                              {item.type === \"in\" ? <>{item.state === \"paid\" ? \"Recebido\" : \"À Receber\"}</> : <>{item.state === \"paid\" ? \"Pago\" : \"À Pagar\"}</>}\n                            </>\n                          )}\n                        </PopoverHeader>\n                        <PopoverBody>\n                          Clique para marcar como:{\" \"}\n                          <strong>\n                            {item.flow_category_id === 46 ? ( // --> caso seja transferencia entre contas\n                              <>\n                                {item.type === \"in\" ? (\n                                  <>{item.state === \"paid\" ? \"À RECEBER\" : \"RECEBIDO\"}</>\n                                ) : (\n                                  <>{item.state === \"paid\" ? \"À REALIZAR\" : \"REALIZADO\"}</>\n                                )}\n                              </>\n                            ) : (\n                              <>\n                                {item.type === \"in\" ? (\n                                  <>{item.state === \"paid\" ? \"À RECEBER\" : \"RECEBIDO\"}</>\n                                ) : (\n                                  <>{item.state === \"paid\" ? \"À PAGAR\" : \"PAGO\"}</>\n                                )}\n                              </>\n                            )}\n                          </strong>\n                        </PopoverBody>\n                      </UncontrolledPopover>\n\n                      {item.obs ? (\n                        <>\n                          <CardLink id={`popover_obs_${item.id}`}>Observações</CardLink>\n                          <UncontrolledPopover placement=\"top\" target={`popover_obs_${item.id}`} trigger=\"hover\">\n                            <PopoverHeader>Observações</PopoverHeader>\n                            <PopoverBody>\n                              <strong>{item.obs}</strong>\n                            </PopoverBody>\n                          </UncontrolledPopover>\n                        </>\n                      ) : (\n                        <></>\n                      )}\n                    </CardBody>\n                    <a className={`rui-task-subtitle price ${item.type}`}>\n                      {item.type === \"out\" ? (\n                        <>\n                          <strong>\n                            <small>- R$ </small>\n                            {item.value.toLocaleString()}\n                          </strong>\n                        </>\n                      ) : (\n                        <></>\n                      )}\n                      {item.type === \"in\" ? (\n                        <>\n                          <strong>\n                            <small>R$ </small>\n                            {item.value.toLocaleString()}\n                          </strong>\n                        </>\n                      ) : (\n                        <></>\n                      )}\n                    </a>\n                  </Card>\n                </div>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <nav className=\"mt-15\" aria-label=\"Page navigation example\">\n          <ul className=\"pagination pagination-sm\">\n            <ul className=\"pagination pagination-sm\">\n              {pages.map(item => (\n                <li key={item} onClick={() => this.setState({ page: item })} className={`page-item ${item === this.state.page ? \"active\" : \"\"}`}>\n                  <a className=\"page-link\">{item + 1}</a>\n                </li>\n              ))}\n            </ul>\n          </ul>\n        </nav>\n\n        {/** modal lancamento CONTAS A RECEBER */}\n        <Modal\n          isOpen={this.state.modalOpenIn}\n          toggle={this.toggleIn}\n          className={this.props.className}\n          fade\n          onOpened={() => document.querySelector(\"#description\").focus()}>\n          <form onSubmit={this.toggleModalSave}>\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title h2\">{this.state.id ? \"Editar\" : \"Nova\"} Conta à Receber</h5>\n              <Button className=\"close\" color=\"\" onClick={this.toggleIn}>\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n            <ModalBody>\n              {this.state.id ? \"Editar\" : \"Adicionar\"} uma <mark className=\"display-4\">Conta à Receber</mark>\n              <br />\n              <br />\n              <FormGroup>\n                <Label for=\"description\">Descrição *</Label>\n                <Input\n                  id=\"description\"\n                  name=\"description\"\n                  placeholder=\"\"\n                  type=\"text\"\n                  required\n                  value={this.state.description}\n                  onChange={event => this.setState({ description: event.target.value })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"flow_category_id\">Categoria *</Label>\n                <Select\n                  id=\"flow_category_id\"\n                  name=\"flow_category_id\"\n                  required\n                  defaultValue={this.state.flow_category_id}\n                  value={this.state.flow_category_id}\n                  options={this.state.flow_categories}\n                  styles={customStyles}\n                  onChange={row => this.setState({ flow_category_id: row })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"date\">Data *</Label>\n                <Input\n                  id=\"date\"\n                  required\n                  name=\"date\"\n                  placeholder=\"01/01/2021\"\n                  type=\"date\"\n                  value={this.state.date}\n                  onChange={event => this.setState({ date: event.target.value })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"bank_account_id\">Contas&Carteiras *</Label>\n                <Select\n                  id=\"filial_id\"\n                  name=\"filial_id\"\n                  required\n                  defaultValue={this.state.bank_account_id}\n                  value={this.state.bank_account_id}\n                  options={this.state.bank_accounts}\n                  styles={customStyles}\n                  onChange={row => this.setState({ bank_account_id: row })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"value\">Valor *</Label>\n                <Input\n                  id=\"value\"\n                  name=\"value\"\n                  placeholder=\"0,00\"\n                  type=\"text\"\n                  required\n                  value={this.state.value}\n                  onChange={event => this.setState({ value: event.target.value })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"user_id\">Realizado por *</Label>\n                <Select\n                  id=\"user_id\"\n                  name=\"user_id\"\n                  required\n                  defaultValue={this.state.user_id}\n                  value={this.state.user_id}\n                  options={this.state.users}\n                  styles={customStyles}\n                  readOnly\n                  disabled\n                  inputProps={{ readOnly: true }}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"obs\">Observações</Label>\n                <Input id=\"obs\" name=\"obs\" placeholder=\"\" type=\"text\" value={this.state.obs} onChange={event => this.setState({ obs: event.target.value })} />\n              </FormGroup>\n              <FormGroup>\n                <CustomInput\n                  type=\"switch\"\n                  id=\"state\"\n                  name=\"state\"\n                  label=\"Recebido?\"\n                  checked={this.state.state}\n                  onChange={event => this.setState({ state: event.target.checked })}\n                />\n              </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" type=\"button\" onClick={this.toggleIn}>\n                Fechar\n              </Button>\n\n              {this.state.is_editable ? (\n                <>\n                  {this.state.id ? (\n                    <Button onClick={() => this.handleRemove()} color=\"danger\" type=\"button\" disabled={this.state.loading}>\n                      {this.state.loading ? \"Excluindo...\" : \"Excluir\"}\n                    </Button>\n                  ) : (\n                    <></>\n                  )}\n                  <Button color=\"success\" type=\"submit\" disabled={this.state.loading}>\n                    {this.state.loading ? \"Salvando...\" : \"Salvar\"}\n                  </Button>\n                </>\n              ) : (\n                <></>\n              )}\n            </ModalFooter>\n          </form>\n        </Modal>\n\n        {/** modal lancamento CONTAS A PAGAR */}\n        <Modal\n          isOpen={this.state.modalOpenOut}\n          toggle={this.toggleOut}\n          className={this.props.className}\n          fade\n          onOpened={() => document.querySelector(\"#description\").focus()}>\n          <form onSubmit={this.toggleModalSave}>\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title h2\">{this.state.id ? \"Editar\" : \"Nova\"} Conta à Pagar</h5>\n              <Button className=\"close\" color=\"\" onClick={this.toggleOut}>\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n            <ModalBody>\n              {this.state.id ? \"Editar\" : \"Adicionar\"} uma <mark className=\"display-4\">Conta à Pagar</mark>\n              <br />\n              <br />\n              <FormGroup>\n                <Label for=\"description\">Descrição *</Label>\n                <Input\n                  id=\"description\"\n                  name=\"description\"\n                  placeholder=\"\"\n                  type=\"text\"\n                  required\n                  value={this.state.description}\n                  onChange={event => this.setState({ description: event.target.value })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"flow_category_id\">Categoria *</Label>\n                <Select\n                  id=\"flow_category_id\"\n                  name=\"flow_category_id\"\n                  required\n                  defaultValue={this.state.flow_category_id}\n                  value={this.state.flow_category_id}\n                  options={this.state.flow_categories}\n                  styles={customStyles}\n                  onChange={row => this.setState({ flow_category_id: row })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"date\">Data *</Label>\n                <Input\n                  id=\"date\"\n                  required\n                  name=\"date\"\n                  placeholder=\"01/01/2021\"\n                  type=\"date\"\n                  value={this.state.date}\n                  onChange={event => this.setState({ date: event.target.value })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"bank_account_id\">Contas&Carteiras *</Label>\n                <Select\n                  id=\"filial_id\"\n                  name=\"filial_id\"\n                  required\n                  defaultValue={this.state.bank_account_id}\n                  value={this.state.bank_account_id}\n                  options={this.state.bank_accounts}\n                  styles={customStyles}\n                  onChange={row => this.setState({ bank_account_id: row })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"value\">Valor *</Label>\n                <Input\n                  id=\"value\"\n                  name=\"value\"\n                  placeholder=\"0,00\"\n                  type=\"text\"\n                  required\n                  value={this.state.value}\n                  onChange={event => this.setState({ value: event.target.value })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"user_id\">Realizado por *</Label>\n                <Select\n                  id=\"user_id\"\n                  name=\"user_id\"\n                  required\n                  defaultValue={this.state.user_id}\n                  value={this.state.user_id}\n                  options={this.state.users}\n                  styles={customStyles}\n                  readOnly\n                  disabled\n                  inputProps={{ readOnly: true }}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"obs\">Observações</Label>\n                <Input id=\"obs\" name=\"obs\" placeholder=\"\" type=\"text\" value={this.state.obs} onChange={event => this.setState({ obs: event.target.value })} />\n              </FormGroup>\n              <FormGroup>\n                <CustomInput\n                  type=\"switch\"\n                  id=\"state\"\n                  name=\"state\"\n                  label=\"Pago?\"\n                  checked={this.state.state}\n                  onChange={event => this.setState({ state: event.target.checked })}\n                />\n              </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" type=\"button\" onClick={this.toggleOut}>\n                Fechar\n              </Button>\n\n              {this.state.is_editable ? (\n                <>\n                  {this.state.id ? (\n                    <Button onClick={() => this.handleRemove()} color=\"danger\" type=\"button\" disabled={this.state.loading}>\n                      {this.state.loading ? \"Excluindo...\" : \"Excluir\"}\n                    </Button>\n                  ) : (\n                    <></>\n                  )}\n                  <Button color=\"success\" type=\"submit\" disabled={this.state.loading}>\n                    {this.state.loading ? \"Salvando...\" : \"Salvar\"}\n                  </Button>\n                </>\n              ) : (\n                <></>\n              )}\n            </ModalFooter>\n          </form>\n        </Modal>\n\n        {/** modal lancamento TRANSFERENCIA ENTRE CONTAS */}\n        <Modal\n          isOpen={this.state.modalOpenTransf}\n          toggle={this.toggleTransf}\n          className={this.props.className}\n          fade\n          onOpened={() => document.querySelector(\"#bank_account_id_out\").focus()}>\n          <form onSubmit={this.toggleModalSaveTransf}>\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title h2\">{this.state.id ? \"Editar\" : \"Nova\"} Transferência entre Contas</h5>\n              <Button className=\"close\" color=\"\" onClick={this.toggleTransf}>\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n            <ModalBody>\n              Realizar uma <mark className=\"display-4\">{this.state.id ? \"Editar\" : \"Nova\"} Transferência entre Contas</mark>\n              <br />\n              <br />\n              <FormGroup>\n                <Label for=\"bank_account_id_out\">Saiu da Conta *</Label>\n                <Select\n                  id=\"bank_account_id_out\"\n                  name=\"bank_account_id_out\"\n                  required\n                  defaultValue={this.state.bank_account_id_out}\n                  value={this.state.bank_account_id_out}\n                  options={this.state.bank_accounts}\n                  styles={customStyles}\n                  onChange={row => this.setState({ bank_account_id_out: row })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"bank_account_id_in\">Entrou na Conta *</Label>\n                <Select\n                  id=\"bank_account_id_in\"\n                  name=\"bank_account_id_in\"\n                  required\n                  defaultValue={this.state.bank_account_id_in}\n                  value={this.state.bank_account_id_in}\n                  options={this.state.bank_accounts_in}\n                  styles={customStyles}\n                  onChange={row => this.setState({ bank_account_id_in: row })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"description\">Descrição *</Label>\n                <Input\n                  id=\"description\"\n                  name=\"description\"\n                  placeholder=\"\"\n                  type=\"text\"\n                  required\n                  value={this.state.description}\n                  onChange={event => this.setState({ description: event.target.value })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"date\">Data *</Label>\n                <Input\n                  id=\"date\"\n                  required\n                  name=\"date\"\n                  placeholder=\"01/01/2021\"\n                  type=\"date\"\n                  value={this.state.date}\n                  onChange={event => this.setState({ date: event.target.value })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"value\">Valor *</Label>\n                <Input\n                  id=\"value\"\n                  name=\"value\"\n                  placeholder=\"0,00\"\n                  type=\"text\"\n                  required\n                  value={this.state.value}\n                  onChange={event => this.setState({ value: event.target.value })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"user_id\">Registrado por *</Label>\n                <Select\n                  id=\"user_id\"\n                  name=\"user_id\"\n                  required\n                  defaultValue={this.state.user_id}\n                  value={this.state.user_id}\n                  options={this.state.users}\n                  styles={customStyles}\n                  readOnly\n                  disabled\n                  inputProps={{ readOnly: true }}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"obs\">Observações</Label>\n                <Input id=\"obs\" name=\"obs\" placeholder=\"\" type=\"text\" value={this.state.obs} onChange={event => this.setState({ obs: event.target.value })} />\n              </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" type=\"button\" onClick={this.toggleTransf}>\n                Fechar\n              </Button>\n\n              {this.state.is_editable ? (\n                <>\n                  {this.state.id ? (\n                    <Button onClick={() => this.handleRemove()} color=\"danger\" type=\"button\" disabled={this.state.loading}>\n                      {this.state.loading ? \"Excluindo...\" : \"Excluir\"}\n                    </Button>\n                  ) : (\n                    <></>\n                  )}\n                  <Button color=\"success\" type=\"submit\" disabled={this.state.loading}>\n                    {this.state.loading ? \"Salvando...\" : \"Salvar\"}\n                  </Button>\n                </>\n              ) : (\n                <></>\n              )}\n            </ModalFooter>\n          </form>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  ({ settings, toasts }) => ({\n    settings,\n    toasts,\n  }),\n  {\n    addToast: actionAddToast,\n    removeToast: actionRemoveToast,\n  },\n)(Content);\n"],"sourceRoot":""}