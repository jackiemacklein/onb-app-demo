{"version":3,"sources":["utils/api.jsx","pages/ADM/Spaces/Create/content.jsx"],"names":["api","axios","create","baseURL","interceptors","request","use","config","headers","Cookies","get","error","Promise","reject","Content","props","state","id","name","color","is_active","position","loading","save","bind","event","preventDefault","addToast","this","setState","post","title","content","time","Date","duration","console","log","className","onSubmit","for","type","required","placeholder","value","onChange","target","label","checked","disableAlpha","onChangeComplete","hex","disabled","Component","connect","settings","toasts","actionAddToast","removeToast","actionRemoveToast"],"mappings":"+JAAA,uCAGMA,EAAMC,IAAMC,OAAO,CAAEC,QAAS,8CAGpCH,EAAII,aAAaC,QAAQC,KACvB,SAAAC,GAEE,OADAA,EAAOC,QAAP,cAAkC,UAAYC,IAAQC,IAAI,kBACnDH,KAET,SAAAI,GACEC,QAAQC,OAAOF,MAIJX,O,yNCETc,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,GAAI,GACJC,KAAM,GACNC,MAAO,GACPC,UAAW,GACXC,SAAU,EACVC,SAAS,GAGX,EAAKC,KAAO,EAAKA,KAAKC,KAAV,gBAZK,E,0FAeRC,G,8EACTA,EAAMC,iBACEC,EAAaC,KAAKb,MAAlBY,SAERC,KAAKC,SAAS,CAAEP,SAAS,I,kBAGjBtB,IAAI8B,KAAK,UAAT,eAAyBF,KAAKZ,Q,OACpCW,EAAS,CACPI,MAAO,YACPC,QAAS,gCACTC,KAAM,IAAIC,KACVC,SAAU,IACVhB,MAAO,YAETS,KAAKC,SAAS,CAAEP,SAAS,I,kDAEzBc,QAAQC,IAAR,MACAV,EAAS,CACPI,MAAO,4CACPC,QAAS,2DACTC,KAAM,IAAIC,KACVC,SAAU,IACVhB,MAAO,UAETS,KAAKC,SAAS,CAAEP,SAAS,I,gJAInB,IAAD,SAC6BM,KAAKZ,MAAjCE,EADD,EACCA,KAAMG,EADP,EACOA,SAAUC,EADjB,EACiBA,QAExB,OACE,kBAAC,WAAD,KACE,wBAAIL,GAAG,aAAP,sBACA,0BAAMqB,UAAU,kDAAkDC,SAAUX,KAAKL,MAC/E,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiB,IAAI,QAAX,QACA,kBAAC,IAAD,CAAOC,KAAK,OAAOvB,KAAK,OAAOwB,UAAQ,EAACzB,GAAG,OAAO0B,YAAY,OAAOC,MAAO1B,EAAM2B,SAAU,SAAApB,GAAK,OAAI,EAAKI,SAAS,CAAEX,KAAMO,EAAMqB,OAAOF,YAG1I,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOJ,IAAI,YAAX,2BACA,kBAAC,IAAD,CACEC,KAAK,SACLvB,KAAK,WACLwB,UAAQ,EACRzB,GAAG,WACH0B,YAAY,QACZC,MAAOvB,EACPwB,SAAU,SAAApB,GAAK,OAAI,EAAKI,SAAS,CAAER,SAAUI,EAAMqB,OAAOF,YAI9D,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEH,KAAK,SACLxB,GAAG,YACHC,KAAK,YACL6B,MAAM,gBACNC,QAASpB,KAAKZ,MAAMI,UACpByB,SAAU,SAAApB,GAAK,OAAI,EAAKI,SAAS,CAAET,UAAWK,EAAMqB,OAAOE,cAI/D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOR,IAAI,YAAX,yBACA,kBAAC,IAAD,CACErB,MAAOS,KAAKZ,MAAMG,MAClB8B,cAAY,EAEZC,iBAAkB,gBAAGC,EAAH,EAAGA,IAAH,OAAa,EAAKtB,SAAS,CAAEV,MAAOgC,QAI1D,kBAAC,IAAD,CAAWb,UAAU,cACnB,kBAAC,IAAD,CAAQG,KAAK,SAAStB,MAAM,QAAQmB,UAAU,WAAWc,SAAU9B,GACjE,0BAAMgB,UAAU,QAAQhB,EAAU,cAAgB,UACjDA,EACC,qCAEA,0BAAMgB,UAAU,QACd,kBAAC,IAAD,CAAMpB,KAAK,mB,GAlGPmC,aA6GPC,uBACb,kBAA2B,CACzBC,SADF,EAAGA,SAEDC,OAFF,EAAaA,UAIb,CACE7B,SAAU8B,IACVC,YAAaC,KAPFL,CASbxC","file":"static/js/53.922c6174.chunk.js","sourcesContent":["import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst api = axios.create({ baseURL: \"https://onb-api-demo.agenciaonside.com.br\" });\n//const api = axios.create({ baseURL: \"http://192.168.1.5:8080\" });\n\napi.interceptors.request.use(\n  config => {\n    config.headers[\"Authorization\"] = \"bearer \" + Cookies.get(\"rui-auth-token\");\n    return config;\n  },\n  error => {\n    Promise.reject(error);\n  },\n);\n\nexport default api;\n","/**\n * External Dependencies\n */\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CustomInput, FormGroup, Button, Label, Input } from \"reactstrap\";\nimport { SketchPicker } from \"react-color\";\n\n/**\n * Internal Dependencies\n */\nimport api from \"./../../../../utils/api\";\nimport Icon from \"../../../../components/icon\";\nimport { addToast as actionAddToast, removeToast as actionRemoveToast } from \"../../../../actions\";\n\n/**\n * Component\n */\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      name: \"\",\n      color: \"\",\n      is_active: \"\",\n      position: 0,\n      loading: false,\n    };\n\n    this.save = this.save.bind(this);\n  }\n\n  async save(event) {\n    event.preventDefault();\n    const { addToast } = this.props;\n\n    this.setState({ loading: true });\n\n    try {\n      await api.post(\"/spaces\", { ...this.state });\n      addToast({\n        title: \"Sucesso!.\",\n        content: \"O Item foi salvo com sucesso.\",\n        time: new Date(),\n        duration: 10000,\n        color: \"success\",\n      });\n      this.setState({ loading: false });\n    } catch (error) {\n      console.log(error);\n      addToast({\n        title: \"Ocorreu um erro ao tentar salvar o item!.\",\n        content: \"Consulte o log do navegador, ou contate o administrador.\",\n        time: new Date(),\n        duration: 20000,\n        color: \"error\",\n      });\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { name, position, loading } = this.state;\n\n    return (\n      <Fragment>\n        <h2 id=\"formsBase\">Dados do Espaço</h2>\n        <form className=\"rui-snippet-preview demo form-border-effect-kie\" onSubmit={this.save}>\n          <FormGroup>\n            <Label for=\"name\">Nome</Label>\n            <Input type=\"text\" name=\"name\" required id=\"name\" placeholder=\"Nome\" value={name} onChange={event => this.setState({ name: event.target.value })} />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"position\">Ordem de exibição</Label>\n            <Input\n              type=\"number\"\n              name=\"position\"\n              required\n              id=\"position\"\n              placeholder=\"Ordem\"\n              value={position}\n              onChange={event => this.setState({ position: event.target.value })}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <CustomInput\n              type=\"switch\"\n              id=\"is_active\"\n              name=\"is_active\"\n              label=\"Ativo/Inativo\"\n              checked={this.state.is_active}\n              onChange={event => this.setState({ is_active: event.target.checked })}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"position\">Cor de exibição</Label>\n            <SketchPicker\n              color={this.state.color}\n              disableAlpha\n              // eslint-disable-next-line no-console\n              onChangeComplete={({ hex }) => this.setState({ color: hex })}\n            />\n          </FormGroup>\n\n          <FormGroup className=\"text-right\">\n            <Button type=\"submit\" color=\"brand\" className=\"btn-long\" disabled={loading}>\n              <span className=\"text\">{loading ? \"Gravando...\" : \"Gravar\"}</span>\n              {loading ? (\n                <></>\n              ) : (\n                <span className=\"icon\">\n                  <Icon name=\"check\" />\n                </span>\n              )}\n            </Button>\n          </FormGroup>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  ({ settings, toasts }) => ({\n    settings,\n    toasts,\n  }),\n  {\n    addToast: actionAddToast,\n    removeToast: actionRemoveToast,\n  },\n)(Content);\n"],"sourceRoot":""}