{"version":3,"sources":["utils/api.jsx","pages/ADM/Spaces/content.jsx"],"names":["api","axios","create","baseURL","interceptors","request","use","config","headers","Cookies","get","error","Promise","reject","Content","props","state","term","data","columns","name","selector","sortable","handleRowDoubleClicked","bind","handleRowClicked","this","setState","map","d","is_active","row","history","push","id","data_id","toggle","loadData","className","type","value","onChange","event","target","placeholder","to","title","pagination","responsive","pointerOnHover","highlightOnHover","paginationPerPage","onRowClicked","onRowDoubleClicked","filter","toUpperCase","includes","Component","connect","settings","toasts","addToast","actionAddToast","withRouter"],"mappings":"+JAAA,uCAGMA,EAAMC,IAAMC,OAAO,CAAEC,QAAS,8CAGpCH,EAAII,aAAaC,QAAQC,KACvB,SAAAC,GAEE,OADAA,EAAOC,QAAP,cAAkC,UAAYC,IAAQC,IAAI,kBACnDH,KAET,SAAAI,GACEC,QAAQC,OAAOF,MAIJX,O,8LCQTc,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,KAAM,GACNC,KAAM,GACNC,QAAS,CACP,CACEC,KAAM,UACNC,SAAU,KACVC,UAAU,GAEZ,CACEF,KAAM,OACNC,SAAU,OACVC,UAAU,GAEZ,CACEF,KAAM,MACNC,SAAU,QACVC,UAAU,KAKhB,EAAKC,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAC9B,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBA1BP,E,yLA8BMxB,IAAIU,IAAI,W,gBAAvBQ,E,EAAAA,KACRQ,KAAKC,SAAS,CACZT,KAAMA,EAAKU,KAAI,SAAAC,GAEb,OADAA,EAAEC,UAAYD,EAAEC,UAAY,QAAU,UAC/BD,O,sLAKUE,G,iEACDL,KAAKX,MAAjBiB,QAEAC,KAAR,wBAA8BF,EAAIG,K,6LAGPH,G,iEAC3BL,KAAKC,SAAS,CAAEQ,QAASJ,EAAIG,KAC7BR,KAAKU,S,iJAILV,KAAKW,a,+BAGG,IAAD,SACyBX,KAAKV,MAA7BE,EADD,EACCA,KAAMC,EADP,EACOA,QAASF,EADhB,EACgBA,KAEvB,OACE,kBAAC,WAAD,KACE,yBAAKqB,UAAU,8BACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,6BACb,4BAAQC,KAAK,SAASD,UAAU,wCAC9B,kBAAC,IAAD,CAAMlB,KAAK,aAGf,2BACEmB,KAAK,SACLC,MAAOvB,EACPwB,SAAU,SAAAC,GAAK,OAAI,EAAKf,SAAS,CAAEV,KAAMyB,EAAMC,OAAOH,SACtDF,UAAU,mDACVM,YAAY,oCAKlB,yBAAKN,UAAU,YACb,kBAAC,IAAD,CAAMO,GAAG,gBACP,4BAAQN,KAAK,SAASD,UAAU,8CAC9B,kBAAC,IAAD,CAAMlB,KAAK,cAMrB,yBAAKkB,UAAU,2BACb,kBAAC,IAAD,CACEQ,MAAM,WACNC,YAAU,EACVC,YAAU,EACVC,gBAAc,EACd9B,QAASA,EACT+B,kBAAgB,EAChBC,kBAAmB,GACnBC,aAAc1B,KAAKD,iBACnB4B,mBAAoB3B,KAAKH,uBACzBL,KAAMA,EAAKoC,QAAO,SAAAzB,GAAC,OAAIA,EAAET,KAAKmC,cAAcC,SAASvC,EAAKsC,gBAAkBtC,GAAQY,EAAEK,c,GAnG5EuB,aA2GPC,uBACb,kBAA2B,CACzBC,SADF,EAAGA,SAEDC,OAFF,EAAaA,UAIb,CACEC,SAAUC,KANCJ,CAQbK,YAAWjD","file":"static/js/49.6f4e8dfb.chunk.js","sourcesContent":["import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst api = axios.create({ baseURL: \"https://onb-api-demo.agenciaonside.com.br\" });\n//const api = axios.create({ baseURL: \"http://192.168.1.5:8080\" });\n\napi.interceptors.request.use(\n  config => {\n    config.headers[\"Authorization\"] = \"bearer \" + Cookies.get(\"rui-auth-token\");\n    return config;\n  },\n  error => {\n    Promise.reject(error);\n  },\n);\n\nexport default api;\n","/**\n * External Dependencies\n */\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport DataTable from \"react-data-table-component\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { Button, ModalBody, ModalFooter } from \"reactstrap\";\n\n/**\n * import services/utils\n */\nimport api from \"./../../../utils/api\";\n\n/**\n * Internal Dependencies\n */\n//import Snippet from \"../../../components/snippet\";\nimport Icon from \"../../../components/icon\";\nimport { addToast as actionAddToast } from \"../../../actions\";\n\n/**\n * Component\n */\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      term: \"\",\n      data: [],\n      columns: [\n        {\n          name: \"CÃ³d.\",\n          selector: \"id\",\n          sortable: true,\n        },\n        {\n          name: \"Nome\",\n          selector: \"name\",\n          sortable: true,\n        },\n        {\n          name: \"Cor\",\n          selector: \"color\",\n          sortable: false,\n        },\n      ],\n    };\n\n    this.handleRowDoubleClicked = this.handleRowDoubleClicked.bind(this);\n    this.handleRowClicked = this.handleRowClicked.bind(this);\n  }\n\n  async loadData() {\n    const { data } = await api.get(\"/spaces\");\n    this.setState({\n      data: data.map(d => {\n        d.is_active = d.is_active ? \"Ativo\" : \"Inativo\";\n        return d;\n      }),\n    });\n  }\n\n  async handleRowClicked(row) {\n    const { history } = this.props;\n\n    history.push(`/espacos/edit/${row.id}`);\n  }\n\n  async handleRowDoubleClicked(row) {\n    this.setState({ data_id: row.id });\n    this.toggle();\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    const { data, columns, term } = this.state;\n\n    return (\n      <Fragment>\n        <div className=\"rui-filemanager-head mb-20\">\n          <div className=\"row sm-gap vertical-gap align-items-center\">\n            <div className=\"col\">\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend mnl-3\">\n                  <button type=\"button\" className=\"btn btn-clean btn-grey-5 mb-0 mnl-10\">\n                    <Icon name=\"search\" />\n                  </button>\n                </div>\n                <input\n                  type=\"search\"\n                  value={term}\n                  onChange={event => this.setState({ term: event.target.value })}\n                  className=\"form-control form-control-clean rui-search-input\"\n                  placeholder=\"Digite aqui para pesquisar...\"\n                />\n              </div>\n            </div>\n\n            <div className=\"col-auto\">\n              <Link to=\"/espacos/add\">\n                <button type=\"button\" className=\"btn btn-brand btn-sm btn-uniform btn-round\">\n                  <Icon name=\"plus\" />\n                </button>\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"table-border-effect-kie\">\n          <DataTable\n            title=\"Listagem\"\n            pagination\n            responsive\n            pointerOnHover\n            columns={columns}\n            highlightOnHover\n            paginationPerPage={10}\n            onRowClicked={this.handleRowClicked}\n            onRowDoubleClicked={this.handleRowDoubleClicked}\n            data={data.filter(d => d.name.toUpperCase().includes(term.toUpperCase()) || term == d.id)}\n          />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  ({ settings, toasts }) => ({\n    settings,\n    toasts,\n  }),\n  {\n    addToast: actionAddToast,\n  },\n)(withRouter(Content));\n"],"sourceRoot":""}