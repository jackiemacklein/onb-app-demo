{"version":3,"sources":["pages/AuthSignUp/content.jsx"],"names":["Content","props","state","email","emailError","name","nameError","password","passwordError","terms","termsError","loading","checkEmail","bind","checkName","checkPassword","checkTerms","maybeLogin","this","isValid","isValidEmail","setState","length","updateAuth","setTimeout","token","className","type","classnames","aria-describedby","placeholder","value","onChange","e","target","onBlur","disabled","id","checked","htmlFor","to","onClick","vendor","Component","connect","auth","settings","actionUpdateAuth"],"mappings":"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","file":"static/js/55.080443af.chunk.js","sourcesContent":["/**\n * External Dependencies\n */\nimport classnames from 'classnames/dedupe';\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Spinner } from 'reactstrap';\n\n/**\n * Internal Dependencies\n */\nimport Icon from '../../components/icon';\nimport { isValidEmail } from '../../utils';\n\nimport { updateAuth as actionUpdateAuth } from '../../actions';\n\n/**\n * Component\n */\nclass Content extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            email: '',\n            emailError: '',\n            name: '',\n            nameError: '',\n            password: '',\n            passwordError: '',\n            terms: false,\n            termsError: '',\n            loading: false,\n        };\n\n        this.checkEmail = this.checkEmail.bind( this );\n        this.checkName = this.checkName.bind( this );\n        this.checkPassword = this.checkPassword.bind( this );\n        this.checkTerms = this.checkTerms.bind( this );\n        this.maybeLogin = this.maybeLogin.bind( this );\n    }\n\n    checkEmail() {\n        const {\n            email,\n        } = this.state;\n\n        const isValid = email && isValidEmail( email );\n\n        this.setState( {\n            emailError: isValid ? '' : 'Invalid email format',\n        } );\n\n        return isValid;\n    }\n\n    checkName() {\n        const {\n            name,\n        } = this.state;\n\n        const isValid = name && name.length >= 3;\n\n        this.setState( {\n            nameError: isValid ? '' : 'Name must be at least 3 characters long',\n        } );\n\n        return isValid;\n    }\n\n    checkPassword() {\n        const {\n            password,\n        } = this.state;\n\n        const isValid = password && password.length >= 6;\n\n        this.setState( {\n            passwordError: isValid ? '' : 'Password must be at least 6 characters long',\n        } );\n\n        return isValid;\n    }\n\n    checkTerms() {\n        const {\n            terms,\n        } = this.state;\n\n        this.setState( {\n            termsError: terms ? '' : 'Accepting our terms is required',\n        } );\n\n        return terms;\n    }\n\n    maybeLogin() {\n        const {\n            updateAuth,\n        } = this.props;\n\n        if ( this.state.loading ) {\n            return;\n        }\n\n        let isValid = true;\n        isValid = this.checkEmail() && isValid;\n        isValid = this.checkName() && isValid;\n        isValid = this.checkPassword() && isValid;\n        isValid = this.checkTerms() && isValid;\n\n        // Form is not valid.\n        if ( ! isValid ) {\n            return;\n        }\n\n        this.setState( {\n            loading: true,\n        }, () => {\n            setTimeout( () => {\n                updateAuth( {\n                    token: 'fake-token',\n                } );\n            }, 600 );\n        } );\n    }\n\n    render() {\n        const {\n            email,\n            emailError,\n            name,\n            nameError,\n            password,\n            passwordError,\n            terms,\n            termsError,\n        } = this.state;\n\n        return (\n            <Fragment>\n                <div className=\"bg-image\">\n                    <div className=\"bg-grey-1\" />\n                </div>\n                <div className=\"form rui-sign-form rui-sign-form-cloud\">\n                    <div className=\"row vertical-gap sm-gap justify-content-center\">\n                        <div className=\"col-12\">\n                            <h1 className=\"display-4 mb-10 text-center\">Sign Up</h1>\n                        </div>\n                        <div className=\"col-12\">\n                            <input\n                                type=\"email\"\n                                className={ classnames( 'form-control', { 'is-invalid': emailError } ) }\n                                aria-describedby=\"emailHelp\"\n                                placeholder=\"Email\"\n                                value={ email }\n                                onChange={ ( e ) => {\n                                    this.setState( {\n                                        email: e.target.value,\n                                    }, emailError ? this.checkEmail : () => {} );\n                                } }\n                                onBlur={ this.checkEmail }\n                                disabled={ this.state.loading }\n                            />\n                            { emailError ? (\n                                <div className=\"invalid-feedback\">{ emailError }</div>\n                            ) : '' }\n                        </div>\n                        <div className=\"col-12\">\n                            <input\n                                type=\"text\"\n                                className={ classnames( 'form-control', { 'is-invalid': nameError } ) }\n                                placeholder=\"Name\"\n                                value={ name }\n                                onChange={ ( e ) => {\n                                    this.setState( {\n                                        name: e.target.value,\n                                    }, nameError ? this.checkName : () => {} );\n                                } }\n                                onBlur={ this.checkName }\n                                disabled={ this.state.loading }\n                            />\n                            { nameError ? (\n                                <div className=\"invalid-feedback\">{ nameError }</div>\n                            ) : '' }\n                        </div>\n                        <div className=\"col-12\">\n                            <input\n                                type=\"password\"\n                                className={ classnames( 'form-control', { 'is-invalid': passwordError } ) }\n                                placeholder=\"Password\"\n                                value={ password }\n                                onChange={ ( e ) => {\n                                    this.setState( {\n                                        password: e.target.value,\n                                    }, passwordError ? this.checkPassword : () => {} );\n                                } }\n                                onBlur={ this.checkPassword }\n                                disabled={ this.state.loading }\n                            />\n                            { passwordError ? (\n                                <div className=\"invalid-feedback\">{ passwordError }</div>\n                            ) : '' }\n                        </div>\n                        <div className=\"col-12\">\n                            <div className=\"custom-control custom-checkbox d-flex justify-content-start\">\n                                <input\n                                    type=\"checkbox\"\n                                    className={ classnames( 'form-control custom-control-input', { 'is-invalid': passwordError } ) }\n                                    id=\"termsCheck\"\n                                    checked={ terms }\n                                    onChange={ ( e ) => {\n                                        this.setState( {\n                                            terms: e.target.checked,\n                                        }, this.checkTerms );\n                                    } }\n                                    disabled={ this.state.loading }\n                                />\n                                <label className=\"custom-control-label fs-13\" htmlFor=\"termsCheck\">I have read and agree to the <Link to=\"#\">terms and conditions</Link></label>\n                            </div>\n                            { termsError ? (\n                                <div className=\"invalid-feedback db\">{ termsError }</div>\n                            ) : '' }\n                        </div>\n                        <div className=\"col-12\">\n                            <button\n                                className=\"btn btn-brand btn-block text-center\"\n                                onClick={ this.maybeLogin }\n                                disabled={ this.state.loading }\n                            >\n                                Sign Up\n                                { this.state.loading ? (\n                                    <Spinner />\n                                ) : '' }\n                            </button>\n                        </div>\n                        <div className=\"col-12\">\n                            <div className=\"rui-sign-or mt-2 mb-5\">or</div>\n                        </div>\n                        <div className=\"col-12\">\n                            <ul className=\"rui-social-links\">\n                                <li>\n                                    <button\n                                        className=\"rui-social-github\"\n                                        onClick={ this.maybeLogin }\n                                        disabled={ this.state.loading }\n                                    >\n                                        <Icon vendor=\"fa\" name={ [ 'fab', 'github' ] } />\n                                        Github\n                                    </button>\n                                </li>\n                                <li>\n                                    <button\n                                        className=\"rui-social-facebook\"\n                                        onClick={ this.maybeLogin }\n                                        disabled={ this.state.loading }\n                                    >\n                                        <Icon vendor=\"fa\" name={ [ 'fab', 'facebook-f' ] } />\n                                        Facebook\n                                    </button>\n                                </li>\n                                <li>\n                                    <button\n                                        className=\"rui-social-google\"\n                                        onClick={ this.maybeLogin }\n                                        disabled={ this.state.loading }\n                                    >\n                                        <Icon vendor=\"fa\" name={ [ 'fab', 'google' ] } />\n                                        Google\n                                    </button>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mt-20 text-grey-5\">\n                    Already have an account? <Link to=\"/sign-in\" className=\"text-2\">Sign In</Link>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect( ( { auth, settings } ) => (\n    {\n        auth,\n        settings,\n    }\n), { updateAuth: actionUpdateAuth } )( Content );\n"],"sourceRoot":""}