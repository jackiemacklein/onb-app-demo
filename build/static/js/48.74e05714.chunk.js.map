{"version":3,"sources":["utils/api.jsx","pages/CRM/Calendar/content.jsx"],"names":["api","axios","create","baseURL","interceptors","request","use","config","headers","Cookies","get","error","Promise","reject","Content","props","state","options","locale","initialView","expandRows","plugins","dayGridPlugin","timeGridPlugin","listWeekPlugin","interactionPlugin","headerToolbar","end","center","start","events","customButtons","newCustomButton","text","click","handleNewSchedule","id","schedule_id","data","name","phone","email","cpf","profile","schedules","modalOpen","user_id","filial_id","client_id","client_name","date","obs","filiais","users","clients","loading","states","value","label","loadData","bind","toggle","loadUsers","loadClients","loadFiliais","handleSchedule","handleScheduleSave","this","setState","map","item","title","client","format","parseISO","allDay","className","schedule","prevState","d","param","find","i","event","user","filial","context","preventDefault","addToast","alert","put","content","time","Date","duration","color","post","response","more","console","log","customStyles","control","css","borderColor","isFocused","boxShadow","option","bgc","isSelected","backgroundColor","multiValueLabel","eventClick","isOpen","fade","onSubmit","onClick","for","required","defaultValue","styles","onChange","row","min","placeholder","type","target","disabled","Component","connect","settings","toasts","actionAddToast","removeToast","actionRemoveToast"],"mappings":"+JAAA,uCAGMA,EAAMC,IAAMC,OAAO,CAAEC,QAAS,8CAGpCH,EAAII,aAAaC,QAAQC,KACvB,SAAAC,GAEE,OADAA,EAAOC,QAAP,cAAkC,UAAYC,IAAQC,IAAI,kBACnDH,KAET,SAAAI,GACEC,QAAQC,OAAOF,MAIJX,O,+VCqBTc,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,QAAS,CACPC,OAAQ,QACRC,YAAa,WACbC,YAAY,EACZC,QAAS,CAACC,IAAeC,IAAgBC,IAAgBC,KACzDC,cAAe,CACbC,IAAK,kCACLC,OAAQ,QACRC,MAAO,yBAETC,OAAQ,GACRC,cAAe,CACbC,gBAAiB,CACfC,KAAM,eACNC,MAAO,kBAAM,EAAKC,kBAAL,oBAInBL,OAAQ,GACRM,GAAI,GACJC,YAAa,GACbC,KAAM,CAAEC,KAAM,GAAIC,MAAO,GAAIC,MAAO,GAAIC,IAAK,GAAIC,QAAS,CAAEJ,KAAM,IAAMK,UAAW,IACnFC,WAAW,EACXC,QAAS,GACTC,UAAW,GACXC,UAAW,GACXC,YAAa,GACbC,KAAM,GACNC,IAAK,GACLC,QAAS,GACTC,MAAO,GACPC,QAAS,GACTC,SAAS,EACTC,OAAQ,CACN,CAAEC,MAAO,YAAaC,MAAO,YAC7B,CAAED,MAAO,WAAYC,MAAO,aAC5B,CAAED,MAAO,WAAYC,MAAO,eAIhC,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBACd,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBACjB,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBACnB,EAAKI,YAAc,EAAKA,YAAYJ,KAAjB,gBACnB,EAAKK,eAAiB,EAAKA,eAAeL,KAApB,gBACtB,EAAKM,mBAAqB,EAAKA,mBAAmBN,KAAxB,gBAC1B,EAAKzB,kBAAoB,EAAKA,kBAAkByB,KAAvB,gBAnDR,E,yLAuDM5D,IAAIU,IAAJ,kB,gBAAf4B,E,EAAAA,KAER6B,KAAKC,SAAS,CACZ9B,OACAR,OAAQQ,EAAK+B,KAAI,SAAAC,GAAS,IAAD,EACvB,MAAO,CACLlC,GAAIkC,EAAKlC,GACTmC,MAAK,OAAED,QAAF,IAAEA,GAAF,UAAEA,EAAME,cAAR,aAAE,EAAcjC,KACrBV,MAAO4C,YAAOC,YAASJ,EAAKpB,MAAO,0BACnCyB,QAAQ,EACRC,UAAU,YAAD,OAAcN,EAAKtD,OAC5B6D,SAAUP,Q,qIAOhBH,KAAKC,UAAS,SAAAU,GAAS,MAAK,CAC1BjC,WAAYiC,EAAUjC,gB,oKAKD7C,IAAIU,IAAI,U,gBAAvB4B,E,EAAAA,KACR6B,KAAKC,SAAS,CACZf,MAAOf,EAAK+B,KAAI,SAAAU,GACd,MAAO,CAAEtB,MAAOsB,EAAE3C,GAAIsB,MAAOqB,EAAExC,W,4QAMZvC,IAAIU,IAAI,Y,gBAAvB4B,E,EAAAA,KACR6B,KAAKC,SAAS,CACZhB,QAASd,EAAK+B,KAAI,SAAAU,GAChB,MAAO,CAAEtB,MAAOsB,EAAE3C,GAAIsB,MAAOqB,EAAExC,W,4QAMZvC,IAAIU,IAAI,+B,gBAAvB4B,E,EAAAA,KACR6B,KAAKC,SAAS,CACZd,QAAShB,EAAK+B,KAAI,SAAAU,GAChB,MAAO,CAAEtB,MAAOsB,EAAE3C,GAAIsB,MAAOqB,EAAExC,W,2IAKtByC,GAAQ,IAAD,kBAGdlC,EAAU,CAAEW,MAAK,UAFvBuB,EAAQb,KAAKnD,MAAMsB,KAAK2C,MAAK,SAAAC,GAAC,OAAIA,EAAE9C,IAAM4C,EAAMG,MAAM/C,aAE/B,aAAE,EAAOU,QAASY,MAAK,UAAEsB,SAAF,iBAAE,EAAOI,YAAT,aAAE,EAAa7C,MACvDS,EAAY,CAAES,MAAK,UAAEuB,SAAF,aAAE,EAAOhC,UAAWU,MAAK,UAAEsB,SAAF,iBAAE,EAAOR,cAAT,aAAE,EAAejC,MAC7DQ,EAAY,CAAEU,MAAK,UAAEuB,SAAF,aAAE,EAAOjC,UAAWW,MAAK,UAAEsB,SAAF,iBAAE,EAAOK,cAAT,aAAE,EAAe9C,MAC7DvB,EAAQmD,KAAKnD,MAAMwC,OAAOyB,MAAK,SAAAC,GAAC,OAAIA,EAAEzB,QAAUuB,EAAMhE,SACtDkC,EAAOuB,YAAOC,YAASM,EAAM9B,MAAO,0BAE1CiB,KAAKC,SAAS,CAAE/B,YAAa2C,EAAM5C,GAAIU,UAASE,YAAWD,YAAWG,OAAMC,IAAK6B,EAAM7B,IAAKnC,UAC5FmD,KAAKN,W,wCAGWyB,GAShBA,EAAQlB,SAAS,CAAE/B,YARC,GAQYS,QANhB,GAMyBE,UALvB,GAKkCD,UAJlC,GAI6CG,KAFlD,GAEwDC,IAPzD,GAO8DnC,MAH5D,KAIdsE,EAAQzB,W,kFAGesB,G,8EACvBA,EAAMI,iBACEC,EAAarB,KAAKpD,MAAlByE,SAEHrB,KAAKnD,MAAMkC,MAASiB,KAAKnD,MAAM+B,WAAcoB,KAAKnD,MAAM8B,SAAYqB,KAAKnD,MAAMgC,U,uBAClFyC,MAAM,uE,mBACC,G,mBAIPtB,KAAKC,SAAS,CAAEb,SAAS,KACrBY,KAAKnD,MAAMqB,Y,kCACUrC,IAAI0F,IAAJ,yBAA0BvB,KAAKnD,MAAMqB,aAAe,CACzEW,UAAWmB,KAAKnD,MAAMgC,UAAUS,MAChCX,QAASqB,KAAKnD,MAAM8B,QAAQW,MAC5BV,UAAWoB,KAAKnD,MAAM+B,UAAUU,MAChCP,KAAMiB,KAAKnD,MAAMkC,KACjBC,IAAKgB,KAAKnD,MAAMmC,IAChBnC,MAAOmD,KAAKnD,MAAMA,MAAMyC,Q,mBANlBnB,KASR6B,KAAKN,SAEL2B,EAAS,CACPjB,MAAO,YACPoB,QAAS,sCACTC,KAAM,IAAIC,KACVC,SAAU,IACVC,MAAO,Y,yCAGc/F,IAAIgG,KAAJ,kBAA4B,CACjDhD,UAAWmB,KAAKnD,MAAMgC,UAAUS,MAChCX,QAASqB,KAAKnD,MAAM8B,QAAQW,MAC5BV,UAAWoB,KAAKnD,MAAM+B,UAAUU,MAChCP,KAAMiB,KAAKnD,MAAMkC,KACjBC,IAAKgB,KAAKnD,MAAMmC,IAChBnC,MAAOmD,KAAKnD,MAAMA,MAAMyC,Q,mBANlBnB,KASR6B,KAAKN,SAEL2B,EAAS,CACPjB,MAAO,YACPoB,QAAS,sCACTC,KAAM,IAAIC,KACVC,SAAU,IACVC,MAAO,Y,QAIX5B,KAAKR,W,kDAED,KAAMsC,UACJ,KAAMA,SAAS3D,OAAsC,IAA9B,KAAM2D,SAAS3D,KAAK3B,MAC7C8E,MAAM,KAAMQ,SAAS3D,KAAK4D,MAK5BT,MAAM,iCAERU,QAAQC,IAAR,M,QAGFjC,KAAKC,SAAS,CAAEb,SAAS,I,2JAIzBY,KAAKR,WACLQ,KAAKL,YACLK,KAAKH,cACLG,KAAKJ,gB,+BAGG,IAAD,SACqBI,KAAKnD,MAAzBC,EADD,EACCA,QAASa,EADV,EACUA,OACjBb,EAAQa,OAASA,EAEjB,IAAMuE,EAAe,CACnBC,QAAS,SAACC,EAAKvF,GACb,OAAO,2BACFuF,GADL,IAEEC,YAAaxF,EAAMyF,UAAY,0BAA4B,UAC3D,UAAW,CACTD,YAAaxF,EAAMyF,UAAY,0BAA4B,WAE7DC,UAAW1F,EAAMyF,UAAY,uCAAyC,MAG1EE,OAAQ,SAACJ,EAAKvF,GACZ,IAAI4F,EAAM,GAQV,OANI5F,EAAM6F,WACRD,EAAM,UACG5F,EAAMyF,YACfG,EAAM,2BAGD,2BACFL,GADL,IAEEO,gBAAiBF,KAGrBG,gBAAiB,SAAAR,GACf,OAAO,2BACFA,GADL,IAEER,MAAO,UACPe,gBAAiB,cAKvB,OACE,kBAAC,WAAD,KACE,yBAAKlC,UAAU,kCACb,kBAAC,IAAD,eAAkB3D,EAAlB,CAA2B+F,WAAY7C,KAAKF,mBAI9C,kBAAC,IAAD,CAAOgD,OAAQ9C,KAAKnD,MAAM6B,UAAWgB,OAAQM,KAAKN,OAAQe,UAAWT,KAAKpD,MAAM6D,UAAWsC,MAAI,GAC7F,0BAAMC,SAAUhD,KAAKD,oBACnB,yBAAKU,UAAU,gBACb,wBAAIA,UAAU,kBAAd,eACA,kBAAC,IAAD,CAAQA,UAAU,QAAQmB,MAAM,GAAGqB,QAASjD,KAAKN,QAC/C,kBAAC,IAAD,CAAMtB,KAAK,QAGf,kBAAC,IAAD,gDAEE,6BACA,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8E,IAAI,SAAX,oBACA,kBAAC,IAAD,CACEjF,GAAG,QACHG,KAAK,QACL+E,UAAQ,EACRC,aAAcpD,KAAKnD,MAAMA,MACzBC,QAASkD,KAAKnD,MAAMwC,OACpBgE,OAAQnB,EACRoB,SAAU,SAAAC,GAAG,OAAI,EAAKtD,SAAS,CAAEpD,MAAO0G,QAG5C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOL,IAAI,aAAX,aACA,kBAAC,IAAD,CACEjF,GAAG,YACHG,KAAK,YACL+E,UAAQ,EACRC,aAAcpD,KAAKnD,MAAMgC,UACzB/B,QAASkD,KAAKnD,MAAMsC,QACpBkE,OAAQnB,EACRoB,SAAU,SAAAC,GAAG,OAAI,EAAKtD,SAAS,CAAEpB,UAAW0E,QAGhD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOL,IAAI,aAAX,YACA,kBAAC,IAAD,CACEjF,GAAG,YACHG,KAAK,YACL+E,UAAQ,EACRC,aAAcpD,KAAKnD,MAAM+B,UACzB9B,QAASkD,KAAKnD,MAAMoC,QACpBoE,OAAQnB,EACRoB,SAAU,SAAAC,GAAG,OAAI,EAAKtD,SAAS,CAAErB,UAAW2E,QAGhD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOL,IAAI,WAAX,eACA,kBAAC,IAAD,CACEjF,GAAG,UACHG,KAAK,UACL+E,UAAQ,EACRC,aAAcpD,KAAKnD,MAAM8B,QACzB7B,QAASkD,KAAKnD,MAAMqC,MACpBmE,OAAQnB,EACRoB,SAAU,SAAAC,GAAG,OAAI,EAAKtD,SAAS,CAAEtB,QAAS4E,QAG9C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOL,IAAI,QAAX,iBACA,kBAAC,IAAD,CACEjF,GAAG,OACHG,KAAK,OACL+E,UAAQ,EACRK,IAAK,IAAI9B,KACT+B,YAAY,aACZC,KAAK,iBACLpE,MAAOU,KAAKnD,MAAMkC,KAClBuE,SAAU,SAAAtC,GAAK,OAAI,EAAKf,SAAS,CAAElB,KAAMiC,EAAM2C,OAAOrE,YAG1D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4D,IAAI,OAAX,qBACA,kBAAC,IAAD,CAAOjF,GAAG,MAAMG,KAAK,MAAMqF,YAAY,GAAGC,KAAK,OAAOpE,MAAOU,KAAKnD,MAAMmC,IAAKsE,SAAU,SAAAtC,GAAK,OAAI,EAAKf,SAAS,CAAEjB,IAAKgC,EAAM2C,OAAOrE,aAGtI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQsC,MAAM,YAAY8B,KAAK,SAAST,QAASjD,KAAKN,OAAQkE,SAAU5D,KAAKnD,MAAMuC,SAAnF,UAEU,IACV,kBAAC,IAAD,CAAQwC,MAAM,UAAU8B,KAAK,SAASE,SAAU5D,KAAKnD,MAAMuC,SACxDY,KAAKnD,MAAMuC,QAAU,cAAgB,kB,GA/UhCyE,aAyVPC,uBACb,kBAA2B,CACzBC,SADF,EAAGA,SAEDC,OAFF,EAAaA,UAIb,CACE3C,SAAU4C,IACVC,YAAaC,KAPFL,CASbnH","file":"static/js/48.74e05714.chunk.js","sourcesContent":["import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst api = axios.create({ baseURL: \"https://onb-api-demo.agenciaonside.com.br\" });\n//const api = axios.create({ baseURL: \"http://192.168.1.5:8080\" });\n\napi.interceptors.request.use(\n  config => {\n    config.headers[\"Authorization\"] = \"bearer \" + Cookies.get(\"rui-auth-token\");\n    return config;\n  },\n  error => {\n    Promise.reject(error);\n  },\n);\n\nexport default api;\n","/**\n * Styles\n */\nimport \"@fullcalendar/common/main.css\";\nimport \"@fullcalendar/core/locales/pt-br\";\nimport \"./style.scss\";\n\n/**\n * External Dependencies\n */\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listWeekPlugin from \"@fullcalendar/list\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\nimport { Modal, ModalBody, ModalFooter } from \"reactstrap\";\nimport { Button, Input, Label, FormGroup } from \"reactstrap\";\nimport Select from \"react-select\";\nimport { parseISO, format } from \"date-fns\";\n\n/**\n * import services/utils\n */\nimport Icon from \"../../../components/icon\";\nimport api from \"./../../../utils/api\";\n\n/**\n * Internal Dependencies\n */\nimport { addToast as actionAddToast, removeToast as actionRemoveToast } from \"../../../actions\";\n\n/**\n * Component\n */\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options: {\n        locale: \"pt-br\",\n        initialView: \"listWeek\",\n        expandRows: true,\n        plugins: [dayGridPlugin, timeGridPlugin, listWeekPlugin, interactionPlugin],\n        headerToolbar: {\n          end: \"newCustomButton,today,prev,next\",\n          center: \"title\",\n          start: \"dayGridMonth,listWeek\",\n        },\n        events: [],\n        customButtons: {\n          newCustomButton: {\n            text: \"NOVA RESERVA\",\n            click: () => this.handleNewSchedule(this),\n          },\n        },\n      },\n      events: [],\n      id: \"\",\n      schedule_id: \"\",\n      data: { name: \"\", phone: \"\", email: \"\", cpf: \"\", profile: { name: \"\" }, schedules: [] },\n      modalOpen: false,\n      user_id: \"\",\n      filial_id: \"\",\n      client_id: \"\",\n      client_name: \"\",\n      date: \"\",\n      obs: \"\",\n      filiais: [],\n      users: [],\n      clients: [],\n      loading: false,\n      states: [\n        { value: \"scheduled\", label: \"Agendado\" },\n        { value: \"canceled\", label: \"Cancelado\" },\n        { value: \"realized\", label: \"Realizado\" },\n      ],\n    };\n\n    this.loadData = this.loadData.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.loadUsers = this.loadUsers.bind(this);\n    this.loadClients = this.loadClients.bind(this);\n    this.loadFiliais = this.loadFiliais.bind(this);\n    this.handleSchedule = this.handleSchedule.bind(this);\n    this.handleScheduleSave = this.handleScheduleSave.bind(this);\n    this.handleNewSchedule = this.handleNewSchedule.bind(this);\n  }\n\n  async loadData() {\n    const { data } = await api.get(`crm/schedules/`);\n\n    this.setState({\n      data,\n      events: data.map(item => {\n        return {\n          id: item.id,\n          title: item?.client?.name,\n          start: format(parseISO(item.date), \"yyyy'-'MM'-'dd'T'HH:mm\"),\n          allDay: false,\n          className: `fc-event-${item.state}`,\n          schedule: item,\n        };\n      }),\n    });\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modalOpen: !prevState.modalOpen,\n    }));\n  }\n\n  async loadUsers() {\n    const { data } = await api.get(\"users/\");\n    this.setState({\n      users: data.map(d => {\n        return { value: d.id, label: d.name };\n      }),\n    });\n  }\n\n  async loadFiliais() {\n    const { data } = await api.get(\"filiais/\");\n    this.setState({\n      filiais: data.map(d => {\n        return { value: d.id, label: d.name };\n      }),\n    });\n  }\n\n  async loadClients() {\n    const { data } = await api.get(\"crm/clients/?is_active=true\");\n    this.setState({\n      clients: data.map(d => {\n        return { value: d.id, label: d.name };\n      }),\n    });\n  }\n\n  handleSchedule(param) {\n    param = this.state.data.find(i => i.id == param.event.id);\n\n    const user_id = { value: param?.user_id, label: param?.user?.name };\n    const client_id = { value: param?.client_id, label: param?.client?.name };\n    const filial_id = { value: param?.filial_id, label: param?.filial?.name };\n    const state = this.state.states.find(i => i.value === param.state);\n    const date = format(parseISO(param.date), \"yyyy'-'MM'-'dd'T'HH:mm\");\n\n    this.setState({ schedule_id: param.id, user_id, client_id, filial_id, date, obs: param.obs, state });\n    this.toggle();\n  }\n\n  handleNewSchedule(context) {\n    const schedule_id = \"\";\n    const obs = \"\";\n    const user_id = \"\";\n    const client_id = \"\";\n    const filial_id = \"\";\n    const state = \"\";\n    const date = \"\";\n\n    context.setState({ schedule_id, user_id, client_id, filial_id, date, obs, state });\n    context.toggle();\n  }\n\n  async handleScheduleSave(event) {\n    event.preventDefault();\n    const { addToast } = this.props;\n\n    if (!this.state.date || !this.state.filial_id || !this.state.user_id || !this.state.client_id) {\n      alert(\"Os campos CLIENTE, DATA, FILIAL E ATENDENTE são obrigatórios.\");\n      return false;\n    }\n\n    try {\n      this.setState({ loading: true });\n      if (this.state.schedule_id) {\n        const { data } = await api.put(`/crm/schedules/${this.state.schedule_id}`, {\n          client_id: this.state.client_id.value,\n          user_id: this.state.user_id.value,\n          filial_id: this.state.filial_id.value,\n          date: this.state.date,\n          obs: this.state.obs,\n          state: this.state.state.value,\n        });\n\n        this.toggle();\n\n        addToast({\n          title: \"Sucesso!.\",\n          content: \"Agendamento atualizado com sucesso.\",\n          time: new Date(),\n          duration: 10000,\n          color: \"success\",\n        });\n      } else {\n        const { data } = await api.post(`/crm/schedules/`, {\n          client_id: this.state.client_id.value,\n          user_id: this.state.user_id.value,\n          filial_id: this.state.filial_id.value,\n          date: this.state.date,\n          obs: this.state.obs,\n          state: this.state.state.value,\n        });\n\n        this.toggle();\n\n        addToast({\n          title: \"Sucesso!.\",\n          content: \"Agendamento adicionado com sucesso.\",\n          time: new Date(),\n          duration: 10000,\n          color: \"success\",\n        });\n      }\n\n      this.loadData();\n    } catch (error) {\n      if (error.response) {\n        if (error.response.data && error.response.data.error === true) {\n          alert(error.response.data.more);\n        } else {\n          alert(\"Erro ao atualizar agendamento\");\n        }\n      } else {\n        alert(\"Erro ao atualizar agendamento\");\n      }\n      console.log(error);\n    }\n\n    this.setState({ loading: false });\n  }\n\n  componentDidMount() {\n    this.loadData();\n    this.loadUsers();\n    this.loadFiliais();\n    this.loadClients();\n  }\n\n  render() {\n    const { options, events } = this.state;\n    options.events = events;\n\n    const customStyles = {\n      control: (css, state) => {\n        return {\n          ...css,\n          borderColor: state.isFocused ? \"rgba(114, 94, 195, 0.6)\" : \"#eaecf0\",\n          \"&:hover\": {\n            borderColor: state.isFocused ? \"rgba(114, 94, 195, 0.6)\" : \"#eaecf0\",\n          },\n          boxShadow: state.isFocused ? \"0 0 0 0.2rem rgba(114, 94, 195, 0.2)\" : \"\",\n        };\n      },\n      option: (css, state) => {\n        let bgc = \"\";\n\n        if (state.isSelected) {\n          bgc = \"#725ec3\";\n        } else if (state.isFocused) {\n          bgc = \"rgba(114, 94, 195, 0.2)\";\n        }\n\n        return {\n          ...css,\n          backgroundColor: bgc,\n        };\n      },\n      multiValueLabel: css => {\n        return {\n          ...css,\n          color: \"#545b61\",\n          backgroundColor: \"#eeeeef\",\n        };\n      },\n    };\n\n    return (\n      <Fragment>\n        <div className=\"rui-calendar rui-calendar-navs\">\n          <FullCalendar {...options} eventClick={this.handleSchedule} />\n        </div>\n\n        {/** modal editar agendamento */}\n        <Modal isOpen={this.state.modalOpen} toggle={this.toggle} className={this.props.className} fade>\n          <form onSubmit={this.handleScheduleSave}>\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title h2\">Agendamento</h5>\n              <Button className=\"close\" color=\"\" onClick={this.toggle}>\n                <Icon name=\"x\" />\n              </Button>\n            </div>\n            <ModalBody>\n              Preencha corretamente os campos a seguir\n              <br />\n              <br />\n              <FormGroup>\n                <Label for=\"state\">Situação *</Label>\n                <Select\n                  id=\"state\"\n                  name=\"state\"\n                  required\n                  defaultValue={this.state.state}\n                  options={this.state.states}\n                  styles={customStyles}\n                  onChange={row => this.setState({ state: row })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"client_id\">Cliente *</Label>\n                <Select\n                  id=\"client_id\"\n                  name=\"client_id\"\n                  required\n                  defaultValue={this.state.client_id}\n                  options={this.state.clients}\n                  styles={customStyles}\n                  onChange={row => this.setState({ client_id: row })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"filial_id\">Filial *</Label>\n                <Select\n                  id=\"filial_id\"\n                  name=\"filial_id\"\n                  required\n                  defaultValue={this.state.filial_id}\n                  options={this.state.filiais}\n                  styles={customStyles}\n                  onChange={row => this.setState({ filial_id: row })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"user_id\">Atendente *</Label>\n                <Select\n                  id=\"user_id\"\n                  name=\"user_id\"\n                  required\n                  defaultValue={this.state.user_id}\n                  options={this.state.users}\n                  styles={customStyles}\n                  onChange={row => this.setState({ user_id: row })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"date\">Data e Hora *</Label>\n                <Input\n                  id=\"date\"\n                  name=\"date\"\n                  required\n                  min={new Date()}\n                  placeholder=\"01/01/2021\"\n                  type=\"datetime-local\"\n                  value={this.state.date}\n                  onChange={event => this.setState({ date: event.target.value })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"obs\">Observações</Label>\n                <Input id=\"obs\" name=\"obs\" placeholder=\"\" type=\"text\" value={this.state.obs} onChange={event => this.setState({ obs: event.target.value })} />\n              </FormGroup>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" type=\"button\" onClick={this.toggle} disabled={this.state.loading}>\n                Fechar\n              </Button>{\" \"}\n              <Button color=\"success\" type=\"submit\" disabled={this.state.loading}>\n                {this.state.loading ? \"Salvando...\" : \"Salvar\"}\n              </Button>\n            </ModalFooter>\n          </form>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  ({ settings, toasts }) => ({\n    settings,\n    toasts,\n  }),\n  {\n    addToast: actionAddToast,\n    removeToast: actionRemoveToast,\n  },\n)(Content);\n\nfunction translate(text) {\n  if (text === \"scheduled\") {\n    return \"Agendado\";\n  } else if (text === \"canceled\") {\n    return \"Cancelado\";\n  } else if (text === \"realized\") {\n    return \"Realizado/Atendido\";\n  } else if (text === \"rescheduled\") {\n    return \"Reagendado\";\n  }\n}\n\nfunction icon(text) {\n  if (text === \"scheduled\") {\n    return \"calendar\";\n  } else if (text === \"canceled\") {\n    return \"x-square\";\n  } else if (text === \"realized\") {\n    return \"check-square\";\n  } else if (text === \"rescheduled\") {\n    return \"copy\";\n  }\n}\n"],"sourceRoot":""}