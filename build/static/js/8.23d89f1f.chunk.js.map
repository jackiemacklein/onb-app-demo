{"version":3,"sources":["../node_modules/react-sortablejs/lib/index.js","../node_modules/react-sortablejs/lib/Sortable.js","../../../utils/src/browser-info.ts","../../../utils/src/utils.ts","../../../sortable/src/PluginManager.ts","../../../sortable/src/EventDispatcher.ts","../../../sortable/src/Sortable.ts","../../../plugins/swap/src/index.ts","../../../sortable/src/Animation.ts","../../../plugins/multi-drag/src/index.ts","../../../plugins/on-spill/src/index.ts","../../../plugins/auto-scroll/src/index.ts","../../src/modular-complete.ts"],"names":["Sortable","require","module","exports","Object","defineProperty","value","_propTypes","_interopRequireDefault","_react","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","_interopRequireWildcard","_sortablejs","default","_extends","assign","target","i","arguments","length","source","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_typeof","Symbol","iterator","constructor","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","_possibleConstructorReturn","self","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","ReferenceError","_setPrototypeOf","p","_defineProperty","store","nextSibling","activeComponent","_Component","_getPrototypeOf2","_this","_len","args","Array","_key","concat","protoProps","staticProps","subClass","superClass","create","_inherits","_this2","options","ownKeys","filter","sym","forEach","_objectSpread","name","eventHandler","_len2","params","_key2","evt","item","nextElementSibling","onChange","items","sortable","toArray","remote","remoteItems","referenceNode","parentNode","from","insertBefore","remoteOptions","group","pull","removeChild","type","_evt","originalEvent","canMove","setTimeout","node","nextProps","destroy","_this3","_this$props","Component","tag","createElement","ref","object","func","oneOfType","string","style","_default","userAgent","pattern","window","navigator","match","IE11OrLess","Edge","FireFox","Safari","IOS","ChromeForAndroid","captureMode","capture","passive","on","el","event","fn","addEventListener","off","removeEventListener","matches","selector","substring","msMatchesSelector","webkitMatchesSelector","_","getParentOrHost","host","document","nodeType","closest","ctx","includeCTX","_throttleTimeout","R_SPACE","toggleClass","state","classList","className","replace","css","prop","val","defaultView","getComputedStyle","currentStyle","matrix","selfOnly","appliedTransforms","transform","matrixFn","DOMMatrix","WebKitCSSMatrix","CSSMatrix","MSCSSMatrix","find","tagName","list","getElementsByTagName","n","getWindowScrollingElement","scrollingElement","documentElement","getRect","relativeToContainingBlock","relativeToNonStaticParent","undoScale","container","getBoundingClientRect","elRect","top","left","bottom","right","height","width","innerHeight","innerWidth","containerRect","parseInt","elMatrix","scaleX","a","scaleY","d","isScrolledPast","elSide","parentSide","parent","getParentAutoScrollElement","elSideVal","parentSideVal","getChild","childNum","currentChild","children","display","ghost","dragged","draggable","lastChild","last","lastElementChild","previousElementSibling","index","nodeName","toUpperCase","clone","getRelativeScrollOffset","offsetLeft","offsetTop","winScroller","scrollLeft","scrollTop","includeSelf","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","isRectEqual","rect1","rect2","Math","round","throttle","callback","ms","scrollBy","x","y","Polymer","$","jQuery","Zepto","dom","cloneNode","setRect","rect","unsetRect","expando","Date","getTime","plugins","defaults","initializeByDefault","pluginManager","mount","plugin","option","push","pluginEvent","eventName","eventCanceled","cancel","eventNameGlobal","pluginName","initializePlugins","initialized","modified","modifyOption","getEventProperties","eventProperties","modifiedValue","optionListeners","dispatchEvent","rootEl","targetEl","cloneEl","toEl","fromEl","oldIndex","newIndex","oldDraggableIndex","newDraggableIndex","putSortable","extraEventProperties","onName","charAt","substr","CustomEvent","createEvent","initEvent","bubbles","cancelable","to","pullMode","lastPutMode","allEventProperties","PluginManager","data","bind","dragEl","parentEl","ghostEl","nextEl","lastDownEl","cloneHidden","dragStarted","moved","activeSortable","active","hideGhostForTarget","_hideGhostForTarget","unhideGhostForTarget","_unhideGhostForTarget","cloneNowHidden","cloneNowShown","dispatchSortableEvent","_dispatchEvent","info","activeGroup","tapEvt","touchEvt","lastDx","lastDy","tapDistanceLeft","tapDistanceTop","lastTarget","lastDirection","targetMoveDistance","ghostRelativeParent","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","_silent","savedInputChecked","documentExists","PositionGhostAbsolutely","CSSFloatProperty","supportDraggable","supportCssPointerEvents","cssText","pointerEvents","_detectDirection","elCSS","elWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","child1","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","secondChildWidth","flexDirection","gridTemplateColumns","split","clear","_prepareGroup","toFn","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","preventDefault","stopPropagation","stopImmediatePropagation","lastSwapEl","nearestEmptyInsertDetectEvent","nearest","touches","clientX","clientY","some","threshold","emptyInsertThreshold","ret","_onDragOver","_checkOutsideTargetEl","_isOutsideThisEl","toString","animationCallbackId","animationStates","sort","disabled","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","animation","easing","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","Number","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","nativeDraggable","_onTapStart","captureAnimationState","slice","child","fromRect","thisAnimationDuration","childMatrix","f","e","addAnimationState","removeAnimationState","splice","arr","animateAll","clearTimeout","animating","animationTime","time","toRect","prevFromRect","prevToRect","animatingRect","targetMatrix","sqrt","pow","animate","max","animationResetTimer","currentRect","duration","translateX","translateY","animatingX","animatingY","forRepaintDummy","offsetWidth","animated","onMove","dragRect","targetRect","willInsertAfter","retVal","onMoveFn","draggedRect","related","relatedRect","_disableDraggable","_unsilent","_generateId","str","src","href","sum","charCodeAt","_nextTick","_cancelNextTick","id","contains","_getDirection","touch","pointerType","originalTarget","shadowRoot","path","composedPath","root","inputs","idx","checked","button","isContentEditable","criteria","trim","_prepareDragStart","dragStartFn","ownerDocument","_lastX","_lastY","_onDrop","_disableDelayedDragEvents","_triggerDragStart","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","abs","floor","_onTouchMove","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","fallback","_appendGhost","_nulling","_emulateDragOver","elementFromPoint","ghostMatrix","relativeScrollOffset","dx","dy","b","c","cssMatrix","appendChild","_hideClone","cloneId","_loopId","setInterval","effectAllowed","_dragStartId","revert","vertical","isOwner","canSort","fromSortable","completedFired","dragOverEvent","_ignoreWhileAnimating","completed","elLastChild","changed","targetBeforeFirstSwap","sibling","differentLevel","differentRowCol","dragElS1Opp","targetS1Opp","side1","scrolledPastTop","scrollBefore","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","invert","dragIndex","after","moveVector","extra","axis","insertion","_showClone","_offMoveEvents","_offUpEvents","clearInterval","save","handleEvent","dropEffect","order","getAttribute","querySelectorAll","removeAttribute","utils","is","extend","dst","nextTick","cancelNextTick","detectDirection","element","version","lastMultiDragSelect","multiDragSortable","clonesFromRect","clonesHidden","multiDragElements","multiDragClones","initialFolding","folding","insertMultiDragClones","elementsInserted","sortableIndex","removeMultiDragElements","multiDragElement","drop","toSortable","changedTouches","onSpill","Revert","Remove","startIndex","dragStart","parentSortable","scrollEl","scrollRootEl","lastAutoScrollX","lastAutoScrollY","pointerElemChangedInterval","autoScrolls","scrolling","clearAutoScrolls","autoScroll","pid","clearPointerElemChangedInterval","isFallback","scroll","scrollCustomFn","sens","scrollSensitivity","speed","scrollSpeed","scrollThisInstance","scrollFn","layersOut","currentParent","canScrollX","canScrollY","scrollPosX","scrollPosY","vx","vy","layer","scrollOffsetY","scrollOffsetX","bubbleScroll","AutoScroll","_handleAutoScroll","_handleFallbackAutoScroll","dragOverCompleted","dragOverBubble","nulling","ogElemScroller","newElem","RemoveOnSpill","RevertOnSpill","Swap","swapClass","dragOverValid","swap","prevSwapEl","n1","n2","i1","i2","p1","p2","isEqualNode","swapItem","MultiDrag","_deselectMultiDrag","_checkKeyDown","_checkKeyUp","selectedClass","multiDragKey","multiDragKeyDown","isMultiDrag","delayStartGlobal","delayEnded","setupClone","t","showClone","hideClone","dragStartGlobal","multiDrag","dragOver","clonesInserted","dragRectAbsolute","clonesHiddenBefore","dragOverAnimationCapture","dragMatrix","dragOverAnimationComplete","originalEvt","shiftKey","lastIndex","currentIndex","multiDragIndex","update","nullingGlobal","destroyGlobal","shift","select","deselect","oldIndicies","newIndicies","clones","toLowerCase"],"mappings":"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","file":"static/js/8.23d89f1f.chunk.js","sourcesContent":["\"use strict\";\n\nvar Sortable = require('./Sortable').default;\n\nmodule.exports = Sortable;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _sortablejs = _interopRequireDefault(require(\"sortablejs\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar store = {\n  nextSibling: null,\n  activeComponent: null\n};\n\nvar Sortable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Sortable, _Component);\n\n  function Sortable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Sortable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Sortable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"sortable\", null);\n\n    return _this;\n  }\n\n  _createClass(Sortable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var options = _objectSpread({}, this.props.options);\n\n      ['onChoose', 'onStart', 'onEnd', 'onAdd', 'onUpdate', 'onSort', 'onRemove', 'onFilter', 'onMove', 'onClone'].forEach(function (name) {\n        var eventHandler = options[name];\n\n        options[name] = function () {\n          for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            params[_key2] = arguments[_key2];\n          }\n\n          var evt = params[0];\n\n          if (name === 'onChoose') {\n            store.nextSibling = evt.item.nextElementSibling;\n            store.activeComponent = _this2;\n          } else if ((name === 'onAdd' || name === 'onUpdate') && _this2.props.onChange) {\n            var items = _this2.sortable.toArray();\n\n            var remote = store.activeComponent;\n            var remoteItems = remote.sortable.toArray();\n            var referenceNode = store.nextSibling && store.nextSibling.parentNode !== null ? store.nextSibling : null;\n            evt.from.insertBefore(evt.item, referenceNode);\n\n            if (remote !== _this2) {\n              var remoteOptions = remote.props.options || {};\n\n              if (_typeof(remoteOptions.group) === 'object' && remoteOptions.group.pull === 'clone') {\n                // Remove the node with the same data-reactid\n                evt.item.parentNode.removeChild(evt.item);\n              }\n\n              remote.props.onChange && remote.props.onChange(remoteItems, remote.sortable, evt);\n            }\n\n            _this2.props.onChange && _this2.props.onChange(items, _this2.sortable, evt);\n          }\n\n          if (evt.type === 'move') {\n            var _evt = params[0],\n                originalEvent = params[1];\n            var canMove = eventHandler ? eventHandler(_evt, originalEvent) : true;\n            return canMove;\n          }\n\n          setTimeout(function () {\n            eventHandler && eventHandler(evt);\n          }, 0);\n        };\n      });\n      this.sortable = _sortablejs.default.create(this.node, options);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      // If onChange is null, it is an UnControlled component\n      // Don't let React re-render it by setting return to false\n      if (!nextProps.onChange) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.sortable) {\n        this.sortable.destroy();\n        this.sortable = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          Component = _this$props.tag,\n          options = _this$props.options,\n          onChange = _this$props.onChange,\n          props = _objectWithoutProperties(_this$props, [\"tag\", \"options\", \"onChange\"]);\n\n      return _react.default.createElement(Component, _extends({}, props, {\n        ref: function ref(node) {\n          _this3.node = node;\n        }\n      }));\n    }\n  }]);\n\n  return Sortable;\n}(_react.Component);\n\n_defineProperty(Sortable, \"propTypes\", {\n  options: _propTypes.default.object,\n  onChange: _propTypes.default.func,\n  tag: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),\n  style: _propTypes.default.object\n});\n\n_defineProperty(Sortable, \"defaultProps\", {\n  options: {},\n  tag: 'div',\n  style: {}\n});\n\nvar _default = Sortable;\nexports.default = _default;","function userAgent(pattern) {\n  if (typeof window !== \"undefined\" && window.navigator) {\n    return !!(/*@__PURE__*/ navigator.userAgent.match(pattern));\n  }\n}\n\nexport const IE11OrLess = userAgent(\n  /(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i\n);\nexport const Edge = userAgent(/Edge/i);\nexport const FireFox = userAgent(/firefox/i);\nexport const Safari =\n  userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nexport const IOS = userAgent(/iP(ad|od|hone)/i);\nexport const ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n","import { IE11OrLess } from \"./browser-info\";\nimport Sortable from \"../../sortable/src/Sortable\";\n\nconst captureMode = {\n  capture: false,\n  passive: false,\n};\n\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(/**HTMLElement*/ el, /**String*/ selector) {\n  if (!selector) return;\n\n  selector[0] === \">\" && (selector = selector.substring(1));\n\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType\n    ? el.host\n    : el.parentNode;\n}\n\nfunction closest(\n  /**HTMLElement*/ el,\n  /**String*/ selector,\n  /**HTMLElement*/ ctx,\n  includeCTX\n) {\n  if (el) {\n    ctx = ctx || document;\n\n    do {\n      if (\n        (selector != null &&\n          (selector[0] === \">\"\n            ? el.parentNode === ctx && matches(el, selector)\n            : matches(el, selector))) ||\n        (includeCTX && el === ctx)\n      ) {\n        return el;\n      }\n\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while ((el = getParentOrHost(el)));\n  }\n\n  return null;\n}\n\nconst R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? \"add\" : \"remove\"](name);\n    } else {\n      let className = (\" \" + el.className + \" \")\n        .replace(R_SPACE, \" \")\n        .replace(\" \" + name + \" \", \" \");\n      el.className = (className + (state ? \" \" + name : \"\")).replace(\n        R_SPACE,\n        \" \"\n      );\n    }\n  }\n}\n\nfunction css(el, prop, val) {\n  let style = el && el.style;\n\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, \"\");\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf(\"webkit\") === -1) {\n        prop = \"-webkit-\" + prop;\n      }\n\n      style[prop] = val + (typeof val === \"string\" ? \"\" : \"px\");\n    }\n  }\n}\n\nfunction matrix(el, selfOnly) {\n  let appliedTransforms = \"\";\n  if (typeof el === \"string\") {\n    appliedTransforms = el;\n  } else {\n    do {\n      //@ts-ignore\n      let transform = css(el, \"transform\");\n\n      if (transform && transform !== \"none\") {\n        appliedTransforms = transform + \" \" + appliedTransforms;\n      }\n      /* jshint boss:true */\n    } while (!selfOnly && (el = el.parentNode));\n  }\n\n  const matrixFn =\n    window.DOMMatrix ||\n    window.WebKitCSSMatrix ||\n    //@ts-ignore\n    window.CSSMatrix ||\n    //@ts-ignore\n    window.MSCSSMatrix;\n  /*jshint -W056 */\n  return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    let list = ctx.getElementsByTagName(tagName),\n      i = 0,\n      n = list.length;\n\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n\n    return list;\n  }\n\n  return [];\n}\n\nfunction getWindowScrollingElement() {\n  let scrollingElement = document.scrollingElement;\n\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n\n/**\n * Returns the \"bounding client rect\" of given element\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\n * @param  {[HTMLElement]} container              The parent the element will be placed in\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\n */\nfunction getRect(\n  el,\n  relativeToContainingBlock,\n  relativeToNonStaticParent,\n  undoScale,\n  container\n) {\n  if (!el.getBoundingClientRect && el !== window) return;\n\n  let elRect, top, left, bottom, right, height, width;\n\n  if (el !== window && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n\n  if (\n    (relativeToContainingBlock || relativeToNonStaticParent) &&\n    el !== window\n  ) {\n    // Adjust for translate()\n    container = container || el.parentNode;\n\n    // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n    if (!IE11OrLess) {\n      do {\n        if (\n          container &&\n          container.getBoundingClientRect &&\n          //@ts-ignore\n          (css(container, \"transform\") !== \"none\" ||\n            (relativeToNonStaticParent &&\n              //@ts-ignore\n              css(container, \"position\") !== \"static\"))\n        ) {\n          let containerRect = container.getBoundingClientRect();\n\n          // Set relative to edges of padding box of container\n          top -=\n            //@ts-ignore\n            containerRect.top + parseInt(css(container, \"border-top-width\"));\n          left -=\n            //@ts-ignore\n            containerRect.left + parseInt(css(container, \"border-left-width\"));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n\n          break;\n        }\n        /* jshint boss:true */\n      } while ((container = container.parentNode));\n    }\n  }\n\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    //@ts-ignore\n    let elMatrix = matrix(container || el),\n      scaleX = elMatrix && elMatrix.a,\n      scaleY = elMatrix && elMatrix.d;\n\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n\n      width /= scaleX;\n      height /= scaleY;\n\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height,\n  };\n}\n\n/**\n * Checks if a side of an element is scrolled past a side of its parents\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\n */\nfunction isScrolledPast(el, elSide, parentSide) {\n  let parent = getParentAutoScrollElement(el, true),\n    //@ts-ignore\n    elSideVal = getRect(el)[elSide];\n\n  /* jshint boss:true */\n  while (parent) {\n    //@ts-ignore\n    let parentSideVal = getRect(parent)[parentSide],\n      visible;\n\n    if (parentSide === \"top\" || parentSide === \"left\") {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n\n    if (!visible) return parent;\n\n    if (parent === getWindowScrollingElement()) break;\n\n    parent = getParentAutoScrollElement(parent, false);\n  }\n\n  return false;\n}\n\n/**\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\n * and non-draggable elements\n * @param  {HTMLElement} el       The parent element\n * @param  {Number} childNum      The index of the child\n * @param  {Object} options       Parent Sortable's options\n * @return {HTMLElement}          The child at index childNum, or null if not found\n */\nfunction getChild(el, childNum, options) {\n  let currentChild = 0,\n    i = 0,\n    children = el.children;\n\n  while (i < children.length) {\n    if (\n      children[i].style.display !== \"none\" &&\n      //@ts-ignore\n      children[i] !== Sortable.ghost &&\n      //@ts-ignore\n      children[i] !== Sortable.dragged &&\n      closest(children[i], options.draggable, el, false)\n    ) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n      currentChild++;\n    }\n\n    i++;\n  }\n  return null;\n}\n\n/**\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n * @param  {HTMLElement} el       Parent element\n * @param  {selector} selector    Any other elements that should be ignored\n * @return {HTMLElement}          The last child, ignoring ghostEl\n */\nfunction lastChild(el, selector) {\n  let last = el.lastElementChild;\n\n  while (\n    last &&\n    //@ts-ignore\n    (last === Sortable.ghost ||\n      //@ts-ignore\n      css(last, \"display\") === \"none\" ||\n      (selector && !matches(last, selector)))\n  ) {\n    last = last.previousElementSibling;\n  }\n\n  return last || null;\n}\n\n/**\n * Returns the index of an element within its parent for a selected set of\n * elements\n * @param  {HTMLElement} el\n * @param  {selector} selector\n * @return {number}\n */\nfunction index(el, selector) {\n  let index = 0;\n\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n\n  /* jshint boss:true */\n  while ((el = el.previousElementSibling)) {\n    if (\n      el.nodeName.toUpperCase() !== \"TEMPLATE\" &&\n      //@ts-ignore\n      el !== Sortable.clone &&\n      (!selector || matches(el, selector))\n    ) {\n      index++;\n    }\n  }\n\n  return index;\n}\n\n/**\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\n * The value is returned in real pixels.\n * @param  {HTMLElement} el\n * @return {Array}             Offsets in the format of [left, top]\n */\nfunction getRelativeScrollOffset(el) {\n  let offsetLeft = 0,\n    offsetTop = 0,\n    winScroller = getWindowScrollingElement();\n\n  if (el) {\n    do {\n      //@ts-ignore\n      let elMatrix = matrix(el),\n        scaleX = elMatrix.a,\n        scaleY = elMatrix.d;\n\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n\n  return [offsetLeft, offsetTop];\n}\n\n/**\n * Returns the index of the object within the given array\n * @param  {Array} arr   Array that may or may not hold the object\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\n * @return {Number}      The index of the object in the array, or -1\n */\nfunction indexOfObject(arr, obj) {\n  for (let i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n  return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n\n  let elem = el;\n  let gotSelf = false;\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (\n      elem.clientWidth < elem.scrollWidth ||\n      elem.clientHeight < elem.scrollHeight\n    ) {\n      //@ts-ignore\n      let elemCSS = css(elem);\n      if (\n        (elem.clientWidth < elem.scrollWidth &&\n          (elemCSS.overflowX == \"auto\" || elemCSS.overflowX == \"scroll\")) ||\n        (elem.clientHeight < elem.scrollHeight &&\n          (elemCSS.overflowY == \"auto\" || elemCSS.overflowY == \"scroll\"))\n      ) {\n        if (!elem.getBoundingClientRect || elem === document.body)\n          return getWindowScrollingElement();\n\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n  } while ((elem = elem.parentNode));\n\n  return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (let key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n  return (\n    Math.round(rect1.top) === Math.round(rect2.top) &&\n    Math.round(rect1.left) === Math.round(rect2.left) &&\n    Math.round(rect1.height) === Math.round(rect2.height) &&\n    Math.round(rect1.width) === Math.round(rect2.width)\n  );\n}\n\nlet _throttleTimeout;\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      let args = arguments,\n        _this = this;\n\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\n\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\n\nfunction clone(el) {\n  //@ts-ignore\n  let Polymer = window.Polymer;\n  //@ts-ignore\n  let $ = window.jQuery || window.Zepto;\n\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\n\nfunction setRect(el, rect) {\n  css(el, \"position\", \"absolute\");\n  css(el, \"top\", rect.top);\n  css(el, \"left\", rect.left);\n  css(el, \"width\", rect.width);\n  css(el, \"height\", rect.height);\n}\n\nfunction unsetRect(el) {\n  css(el, \"position\", \"\");\n  css(el, \"top\", \"\");\n  css(el, \"left\", \"\");\n  css(el, \"width\", \"\");\n  css(el, \"height\", \"\");\n}\n\nconst expando = \"Sortable\" + new Date().getTime();\n\nexport {\n  on,\n  off,\n  matches,\n  getParentOrHost,\n  closest,\n  toggleClass,\n  css,\n  matrix,\n  find,\n  getWindowScrollingElement,\n  getRect,\n  isScrolledPast,\n  getChild,\n  lastChild,\n  index,\n  getRelativeScrollOffset,\n  indexOfObject,\n  getParentAutoScrollElement,\n  extend,\n  isRectEqual,\n  throttle,\n  cancelThrottle,\n  scrollBy,\n  clone,\n  setRect,\n  unsetRect,\n  expando,\n};\n","let plugins = [];\n\nconst defaults = {\n  initializeByDefault: true,\n};\n\nconst pluginManager = {\n  mount(plugin) {\n    // Set default static properties\n    for (let option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n    plugins.push(plugin);\n  },\n  pluginEvent(eventName, sortable, evt) {\n    this.eventCanceled = false;\n    evt.cancel = () => {\n      this.eventCanceled = true;\n    };\n    const eventNameGlobal = eventName + \"Global\";\n    plugins.forEach((plugin) => {\n      if (!sortable[plugin.pluginName]) return;\n      // Fire global events if it exists in this sortable\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal]({ sortable, ...evt });\n      }\n\n      // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n      if (\n        sortable.options[plugin.pluginName] &&\n        sortable[plugin.pluginName][eventName]\n      ) {\n        sortable[plugin.pluginName][eventName]({ sortable, ...evt });\n      }\n    });\n  },\n  initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach((plugin) => {\n      const pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n\n      let initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized;\n\n      // Add default options from plugin\n      Object.assign(defaults, initialized.defaults);\n    });\n\n    for (let option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      let modified = this.modifyOption(\n        sortable,\n        option,\n        sortable.options[option]\n      );\n      if (typeof modified !== \"undefined\") {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties(name, sortable) {\n    let eventProperties = {};\n    plugins.forEach((plugin) => {\n      if (typeof plugin.eventProperties !== \"function\") return;\n      Object.assign(\n        eventProperties,\n        plugin.eventProperties.call(sortable[plugin.pluginName], name)\n      );\n    });\n\n    return eventProperties;\n  },\n  modifyOption(sortable, name, value) {\n    let modifiedValue;\n    plugins.forEach((plugin) => {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return;\n\n      // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n      if (\n        plugin.optionListeners &&\n        typeof plugin.optionListeners[name] === \"function\"\n      ) {\n        modifiedValue = plugin.optionListeners[name].call(\n          sortable[plugin.pluginName],\n          value\n        );\n      }\n    });\n\n    return modifiedValue;\n  },\n};\n\nexport default pluginManager;\n","import { expando, IE11OrLess, Edge } from \"../../utils/src\";\nimport PluginManager from \"./PluginManager\";\n\nexport default function dispatchEvent({\n  sortable,\n  rootEl,\n  name,\n  targetEl,\n  cloneEl,\n  toEl,\n  fromEl,\n  oldIndex,\n  newIndex,\n  oldDraggableIndex,\n  newDraggableIndex,\n  originalEvent,\n  putSortable,\n  extraEventProperties,\n}) {\n  sortable = sortable || (rootEl && rootEl[expando]);\n  if (!sortable) return;\n\n  let evt,\n    options = sortable.options,\n    onName = \"on\" + name.charAt(0).toUpperCase() + name.substr(1);\n  // Support for new CustomEvent feature\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true,\n    });\n  } else {\n    evt = document.createEvent(\"Event\");\n    evt.initEvent(name, true, true);\n  }\n\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n  let allEventProperties = {\n    ...extraEventProperties,\n    ...PluginManager.getEventProperties(name, sortable),\n  };\n  for (let option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n","import { version } from \"../package.json\";\nimport AnimationStateManager from \"./Animation\";\nimport PluginManager from \"./PluginManager\";\nimport dispatchEvent from \"./EventDispatcher\";\n/**\n * @todo import as namespace: import * as utils from \"../../utils/src\"\n */\nimport {\n  on,\n  off,\n  closest,\n  toggleClass,\n  css,\n  matrix,\n  find,\n  getWindowScrollingElement,\n  getRect,\n  isScrolledPast,\n  getChild,\n  lastChild,\n  index,\n  getRelativeScrollOffset,\n  extend,\n  throttle,\n  scrollBy,\n  clone,\n  expando,\n  IE11OrLess,\n  Edge,\n  FireFox,\n  Safari,\n  IOS,\n  ChromeForAndroid,\n} from \"../../utils/src\";\n\nlet pluginEvent = function (\n  eventName,\n  sortable,\n  //@ts-ignore\n  { evt: originalEvent, ...data } = {}\n) {\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, {\n    dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    dragStarted: moved,\n    putSortable,\n    //@ts-ignore\n    activeSortable: Sortable.active,\n    originalEvent,\n\n    oldIndex,\n    oldDraggableIndex,\n    newIndex,\n    newDraggableIndex,\n\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n\n    cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown() {\n      cloneHidden = false;\n    },\n\n    dispatchSortableEvent(name) {\n      _dispatchEvent({ sortable, name, originalEvent });\n    },\n\n    ...data,\n  });\n};\n\nfunction _dispatchEvent(info) {\n  dispatchEvent({\n    putSortable,\n    cloneEl,\n    targetEl: dragEl,\n    rootEl,\n    oldIndex,\n    oldDraggableIndex,\n    newIndex,\n    newDraggableIndex,\n    ...info,\n  });\n}\n\nlet dragEl,\n  parentEl,\n  ghostEl,\n  rootEl,\n  nextEl,\n  lastDownEl,\n  cloneEl,\n  cloneHidden,\n  oldIndex,\n  newIndex,\n  oldDraggableIndex,\n  newDraggableIndex,\n  activeGroup,\n  putSortable,\n  awaitingDragStarted = false,\n  ignoreNextClick = false,\n  sortables = [],\n  tapEvt,\n  touchEvt,\n  lastDx,\n  lastDy,\n  tapDistanceLeft,\n  tapDistanceTop,\n  moved,\n  lastTarget,\n  lastDirection,\n  pastFirstInvertThresh = false,\n  isCircumstantialInvert = false,\n  targetMoveDistance,\n  // For positioning ghost absolutely\n  ghostRelativeParent,\n  ghostRelativeParentInitialScroll = [], // (left, top)\n  _silent = false,\n  savedInputChecked = [];\n\n/** @const */\nconst documentExists = typeof document !== \"undefined\",\n  PositionGhostAbsolutely = IOS,\n  CSSFloatProperty = Edge || IE11OrLess ? \"cssFloat\" : \"float\",\n  // This will not pass for IE9, because IE9 DnD only works on anchors\n  supportDraggable =\n    documentExists &&\n    !ChromeForAndroid &&\n    !IOS &&\n    \"draggable\" in document.createElement(\"div\"),\n  supportCssPointerEvents = (function () {\n    if (!documentExists) return;\n    // false when <= IE11\n    if (IE11OrLess) {\n      return false;\n    }\n    let el = document.createElement(\"x\");\n    el.style.cssText = \"pointer-events:auto\";\n    return el.style.pointerEvents === \"auto\";\n  })(),\n  _detectDirection = function (el, options) {\n    //@ts-ignore\n    let elCSS = css(el),\n      elWidth =\n        parseInt(elCSS.width) -\n        parseInt(elCSS.paddingLeft) -\n        parseInt(elCSS.paddingRight) -\n        parseInt(elCSS.borderLeftWidth) -\n        parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      //@ts-ignore\n      firstChildCSS = child1 && css(child1),\n      //@ts-ignore\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth =\n        firstChildCSS &&\n        parseInt(firstChildCSS.marginLeft) +\n          parseInt(firstChildCSS.marginRight) +\n          //@ts-ignore\n          getRect(child1).width,\n      secondChildWidth =\n        secondChildCSS &&\n        parseInt(secondChildCSS.marginLeft) +\n          parseInt(secondChildCSS.marginRight) +\n          //@ts-ignore\n          getRect(child2).width;\n\n    if (elCSS.display === \"flex\") {\n      return elCSS.flexDirection === \"column\" ||\n        elCSS.flexDirection === \"column-reverse\"\n        ? \"vertical\"\n        : \"horizontal\";\n    }\n\n    if (elCSS.display === \"grid\") {\n      return elCSS.gridTemplateColumns.split(\" \").length <= 1\n        ? \"vertical\"\n        : \"horizontal\";\n    }\n\n    if (child1 && firstChildCSS.float && firstChildCSS.float !== \"none\") {\n      let touchingSideChild2 =\n        firstChildCSS.float === \"left\" ? \"left\" : \"right\";\n\n      return child2 &&\n        (secondChildCSS.clear === \"both\" ||\n          secondChildCSS.clear === touchingSideChild2)\n        ? \"vertical\"\n        : \"horizontal\";\n    }\n\n    return child1 &&\n      (firstChildCSS.display === \"block\" ||\n        firstChildCSS.display === \"flex\" ||\n        firstChildCSS.display === \"table\" ||\n        firstChildCSS.display === \"grid\" ||\n        (firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === \"none\") ||\n        (child2 &&\n          elCSS[CSSFloatProperty] === \"none\" &&\n          firstChildWidth + secondChildWidth > elWidth))\n      ? \"vertical\"\n      : \"horizontal\";\n  },\n  _dragElInRowColumn = function (dragRect, targetRect, vertical) {\n    let dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n\n    return (\n      dragElS1Opp === targetS1Opp ||\n      dragElS2Opp === targetS2Opp ||\n      dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2\n    );\n  },\n  /**\n   * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n   * @param  {Number} x      X position\n   * @param  {Number} y      Y position\n   * @return {HTMLElement}   Element of the first found nearest Sortable\n   */\n  _detectNearestEmptySortable = function (x, y) {\n    let ret;\n    sortables.some((sortable) => {\n      //@ts-ignore\n      if (lastChild(sortable)) return;\n\n      //@ts-ignore\n      let rect = getRect(sortable),\n        threshold = sortable[expando].options.emptyInsertThreshold,\n        insideHorizontally =\n          x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically =\n          y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n      if (threshold && insideHorizontally && insideVertically) {\n        return (ret = sortable);\n      }\n    });\n    return ret;\n  },\n  _prepareGroup = function (options) {\n    function toFn(value, pull) {\n      return function (to, from, dragEl, evt) {\n        let sameGroup =\n          to.options.group.name &&\n          from.options.group.name &&\n          to.options.group.name === from.options.group.name;\n\n        if (value == null && (pull || sameGroup)) {\n          // Default pull value\n          // Default pull and put value if same group\n          return true;\n        } else if (value == null || value === false) {\n          return false;\n        } else if (pull && value === \"clone\") {\n          return value;\n        } else if (typeof value === \"function\") {\n          return toFn(value(to, from, dragEl, evt), pull)(\n            to,\n            from,\n            dragEl,\n            evt\n          );\n        } else {\n          let otherGroup = (pull ? to : from).options.group.name;\n\n          return (\n            value === true ||\n            (typeof value === \"string\" && value === otherGroup) ||\n            (value.join && value.indexOf(otherGroup) > -1)\n          );\n        }\n      };\n    }\n\n    let group = {};\n    let originalGroup = options.group;\n\n    if (!originalGroup || typeof originalGroup != \"object\") {\n      originalGroup = { name: originalGroup };\n    }\n\n    //@ts-ignore\n    group.name = originalGroup.name;\n    //@ts-ignore\n    group.checkPull = toFn(originalGroup.pull, true);\n    //@ts-ignore\n    group.checkPut = toFn(originalGroup.put);\n    //@ts-ignore\n    group.revertClone = originalGroup.revertClone;\n\n    options.group = group;\n  },\n  _hideGhostForTarget = function () {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, \"display\", \"none\");\n    }\n  },\n  _unhideGhostForTarget = function () {\n    if (!supportCssPointerEvents && ghostEl) {\n      css(ghostEl, \"display\", \"\");\n    }\n  };\n\n// #1184 fix - Prevent click event on fallback if dragged but item not changed position\nif (documentExists) {\n  document.addEventListener(\n    \"click\",\n    function (evt) {\n      if (ignoreNextClick) {\n        evt.preventDefault();\n        evt.stopPropagation && evt.stopPropagation();\n        evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n        ignoreNextClick = false;\n        return false;\n      }\n    },\n    true\n  );\n}\n\nlet nearestEmptyInsertDetectEvent = function (evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n    let nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n    if (nearest) {\n      // Create imitation event\n      let event = {};\n      for (let i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n      //@ts-ignore\n      event.target = event.rootEl = nearest;\n      //@ts-ignore\n      event.preventDefault = void 0;\n      //@ts-ignore\n      event.stopPropagation = void 0;\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\n\nlet _checkOutsideTargetEl = function (evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n\n/**\n * @class  Sortable\n * @param  {HTMLElement}  el\n * @param  {Object}       [options]\n */\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw `Sortable: \\`el\\` must be an HTMLElement, not ${{}.toString.call(\n      el\n    )}`;\n  }\n\n  this.el = el; // root element\n  this.options = options = Object.assign({}, options);\n\n  // Export instance\n  el[expando] = this;\n\n  let defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? \">li\" : \">*\",\n    swapThreshold: 1, // percentage; 0 <= x <= 1\n    invertSwap: false, // invert always\n    invertedSwapThreshold: null, // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function () {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: \"sortable-ghost\",\n    chosenClass: \"sortable-chosen\",\n    dragClass: \"sortable-drag\",\n    ignore: \"a, img\",\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function (dataTransfer, dragEl) {\n      dataTransfer.setData(\"Text\", dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: \"data-id\",\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold:\n      (Number.parseInt ? Number : window).parseInt(\n        //@ts-ignore\n        window.devicePixelRatio,\n        10\n      ) || 1,\n    forceFallback: false,\n    fallbackClass: \"sortable-fallback\",\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: { x: 0, y: 0 },\n    supportPointer:\n      //@ts-ignore\n      Sortable.supportPointer !== false && \"PointerEvent\" in window,\n    emptyInsertThreshold: 5,\n  };\n\n  //@ts-ignore\n  PluginManager.initializePlugins(this, el, defaults);\n\n  // Set default options\n  for (let name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n\n  _prepareGroup(options);\n\n  // Bind all private methods\n  for (let fn in this) {\n    if (fn.charAt(0) === \"_\" && typeof this[fn] === \"function\") {\n      this[fn] = this[fn].bind(this);\n    }\n  }\n\n  // Setup drag mode\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  }\n\n  // Bind events\n  if (options.supportPointer) {\n    on(el, \"pointerdown\", this._onTapStart);\n  } else {\n    on(el, \"mousedown\", this._onTapStart);\n    on(el, \"touchstart\", this._onTapStart);\n  }\n\n  if (this.nativeDraggable) {\n    on(el, \"dragover\", this);\n    on(el, \"dragenter\", this);\n  }\n\n  sortables.push(this.el);\n\n  // Restore sorting\n  options.store &&\n    options.store.get &&\n    this.sort(options.store.get(this) || []);\n\n  // Add animation state manager\n  Object.assign(this, AnimationStateManager());\n}\n\nSortable.prototype = /** @lends Sortable.prototype */ {\n  constructor: Sortable,\n\n  _isOutsideThisEl: function (target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n\n  _getDirection: function (evt, target) {\n    return typeof this.options.direction === \"function\"\n      ? this.options.direction.call(this, evt, target, dragEl)\n      : this.options.direction;\n  },\n\n  _onTapStart: function (/** Event|TouchEvent */ evt) {\n    if (!evt.cancelable) return;\n    let _this = this,\n      el = this.el,\n      options = this.options,\n      preventOnFilter = options.preventOnFilter,\n      type = evt.type,\n      touch =\n        (evt.touches && evt.touches[0]) ||\n        (evt.pointerType && evt.pointerType === \"touch\" && evt),\n      target = (touch || evt).target,\n      originalTarget =\n        (evt.target.shadowRoot &&\n          ((evt.path && evt.path[0]) ||\n            (evt.composedPath && evt.composedPath()[0]))) ||\n        target,\n      filter = options.filter;\n\n    _saveInputCheckedState(el);\n\n    // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n    if (dragEl) {\n      return;\n    }\n\n    if (\n      (/mousedown|pointerdown/.test(type) && evt.button !== 0) ||\n      options.disabled\n    ) {\n      return; // only left button and enabled\n    }\n\n    // cancel dnd if original target is content editable\n    if (originalTarget.isContentEditable) {\n      return;\n    }\n\n    // Safari ignores further event handling after mousedown\n    if (\n      !this.nativeDraggable &&\n      Safari &&\n      target &&\n      target.tagName.toUpperCase() === \"SELECT\"\n    ) {\n      return;\n    }\n\n    target = closest(target, options.draggable, el, false);\n\n    if (target && target.animated) {\n      return;\n    }\n\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    }\n\n    // Get the index of the dragged element within its parent\n    //@ts-ignore\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable);\n\n    // Check filter\n    if (typeof filter === \"function\") {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: \"filter\",\n          targetEl: target,\n          toEl: el,\n          fromEl: el,\n        });\n        pluginEvent(\"filter\", _this, { evt });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(\",\").some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: \"filter\",\n            targetEl: target,\n            fromEl: el,\n            toEl: el,\n          });\n          pluginEvent(\"filter\", _this, { evt });\n          return true;\n        }\n      });\n\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    }\n\n    // Prepare `dragstart`\n    this._prepareDragStart(evt, touch, target);\n  },\n\n  _prepareDragStart: function (\n    /** Event */ evt,\n    /** Touch */ touch,\n    /** HTMLElement */ target\n  ) {\n    let _this = this,\n      el = _this.el,\n      options = _this.options,\n      ownerDocument = el.ownerDocument,\n      dragStartFn;\n\n    if (target && !dragEl && target.parentNode === el) {\n      //@ts-ignore\n      let dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n\n      //@ts-ignore\n      Sortable.dragged = dragEl;\n\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY,\n      };\n\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n\n      dragEl.style[\"will-change\"] = \"all\";\n\n      dragStartFn = function () {\n        pluginEvent(\"delayEnded\", _this, { evt });\n        //@ts-ignore\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n          return;\n        }\n        // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n        _this._disableDelayedDragEvents();\n\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        }\n\n        // Bind the events: dragstart/dragend\n        _this._triggerDragStart(evt, touch);\n\n        // Drag start event\n        _dispatchEvent({\n          sortable: _this,\n          name: \"choose\",\n          originalEvent: evt,\n        });\n\n        // Chosen item\n        toggleClass(dragEl, options.chosenClass, true);\n      };\n\n      // Disable \"draggable\"\n      options.ignore.split(\",\").forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n\n      on(ownerDocument, \"dragover\", nearestEmptyInsertDetectEvent);\n      on(ownerDocument, \"mousemove\", nearestEmptyInsertDetectEvent);\n      on(ownerDocument, \"touchmove\", nearestEmptyInsertDetectEvent);\n\n      on(ownerDocument, \"mouseup\", _this._onDrop);\n      on(ownerDocument, \"touchend\", _this._onDrop);\n      on(ownerDocument, \"touchcancel\", _this._onDrop);\n\n      // Make dragEl draggable (must be before delay for FireFox)\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n\n      pluginEvent(\"delayStart\", this, { evt });\n\n      // Delay is impossible for native DnD in Edge or IE\n      if (\n        options.delay &&\n        (!options.delayOnTouchOnly || touch) &&\n        (!this.nativeDraggable || !(Edge || IE11OrLess))\n      ) {\n        //@ts-ignore\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n          return;\n        }\n        // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n        on(ownerDocument, \"mouseup\", _this._disableDelayedDrag);\n        on(ownerDocument, \"touchend\", _this._disableDelayedDrag);\n        on(ownerDocument, \"touchcancel\", _this._disableDelayedDrag);\n        on(ownerDocument, \"mousemove\", _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, \"touchmove\", _this._delayedDragTouchMoveHandler);\n        options.supportPointer &&\n          on(ownerDocument, \"pointermove\", _this._delayedDragTouchMoveHandler);\n\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n\n  _delayedDragTouchMoveHandler: function (/** TouchEvent|PointerEvent **/ e) {\n    let touch = e.touches ? e.touches[0] : e;\n    if (\n      Math.max(\n        Math.abs(touch.clientX - this._lastX),\n        Math.abs(touch.clientY - this._lastY)\n      ) >=\n      Math.floor(\n        this.options.touchStartThreshold /\n          ((this.nativeDraggable && window.devicePixelRatio) || 1)\n      )\n    ) {\n      this._disableDelayedDrag();\n    }\n  },\n\n  _disableDelayedDrag: function () {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n\n    this._disableDelayedDragEvents();\n  },\n\n  _disableDelayedDragEvents: function () {\n    let ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, \"mouseup\", this._disableDelayedDrag);\n    off(ownerDocument, \"touchend\", this._disableDelayedDrag);\n    off(ownerDocument, \"touchcancel\", this._disableDelayedDrag);\n    off(ownerDocument, \"mousemove\", this._delayedDragTouchMoveHandler);\n    off(ownerDocument, \"touchmove\", this._delayedDragTouchMoveHandler);\n    off(ownerDocument, \"pointermove\", this._delayedDragTouchMoveHandler);\n  },\n\n  _triggerDragStart: function (/** Event */ evt, /** Touch */ touch) {\n    touch = touch || (evt.pointerType == \"touch\" && evt);\n\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, \"pointermove\", this._onTouchMove);\n      } else if (touch) {\n        on(document, \"touchmove\", this._onTouchMove);\n      } else {\n        on(document, \"mousemove\", this._onTouchMove);\n      }\n    } else {\n      on(dragEl, \"dragend\", this);\n      on(rootEl, \"dragstart\", this._onDragStart);\n    }\n\n    try {\n      //@ts-ignore\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          //@ts-ignore\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n\n  _dragStarted: function (fallback, evt) {\n    let _this = this;\n    awaitingDragStarted = false;\n    if (rootEl && dragEl) {\n      pluginEvent(\"dragStarted\", this, { evt });\n\n      if (this.nativeDraggable) {\n        on(document, \"dragover\", _checkOutsideTargetEl);\n      }\n      let options = this.options;\n\n      // Apply effect\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n\n      //@ts-ignore\n      Sortable.active = this;\n\n      fallback && this._appendGhost();\n\n      // Drag start event\n      _dispatchEvent({\n        sortable: this,\n        name: \"start\",\n        originalEvent: evt,\n      });\n    } else {\n      this._nulling();\n    }\n  },\n\n  _emulateDragOver: function () {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n\n      _hideGhostForTarget();\n\n      let target = document.elementFromPoint(\n        touchEvt.clientX,\n        touchEvt.clientY\n      );\n      let parent = target;\n\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(\n          touchEvt.clientX,\n          touchEvt.clientY\n        );\n        if (target === parent) break;\n        parent = target;\n      }\n\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            let inserted;\n\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent,\n            });\n\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n\n          target = parent; // store last element\n        } while (\n          /* jshint boss:true */\n          //@ts-ignore\n          (parent = parent.parentNode)\n        );\n      }\n\n      _unhideGhostForTarget();\n    }\n  },\n\n  _onTouchMove: function (/**TouchEvent*/ evt) {\n    if (tapEvt) {\n      let options = this.options,\n        fallbackTolerance = options.fallbackTolerance,\n        fallbackOffset = options.fallbackOffset,\n        touch = evt.touches ? evt.touches[0] : evt,\n        ghostMatrix = ghostEl && matrix(ghostEl, true),\n        scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n        scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n        relativeScrollOffset =\n          PositionGhostAbsolutely &&\n          ghostRelativeParent &&\n          getRelativeScrollOffset(ghostRelativeParent),\n        dx =\n          (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) +\n          (relativeScrollOffset\n            ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0]\n            : 0) /\n            (scaleX || 1),\n        dy =\n          (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) +\n          (relativeScrollOffset\n            ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1]\n            : 0) /\n            (scaleY || 1);\n\n      // only set the status to dragging, when we are actually dragging\n      //@ts-ignore\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (\n          fallbackTolerance &&\n          Math.max(\n            Math.abs(touch.clientX - this._lastX),\n            Math.abs(touch.clientY - this._lastY)\n          ) < fallbackTolerance\n        ) {\n          return;\n        }\n        this._onDragStart(evt, true);\n      }\n\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy,\n          };\n        }\n\n        let cssMatrix = `matrix(${ghostMatrix.a},${ghostMatrix.b},${ghostMatrix.c},${ghostMatrix.d},${ghostMatrix.e},${ghostMatrix.f})`;\n\n        css(ghostEl, \"webkitTransform\", cssMatrix);\n        css(ghostEl, \"mozTransform\", cssMatrix);\n        css(ghostEl, \"msTransform\", cssMatrix);\n        css(ghostEl, \"transform\", cssMatrix);\n\n        lastDx = dx;\n        lastDy = dy;\n\n        touchEvt = touch;\n      }\n\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n\n  _appendGhost: function () {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      let container = this.options.fallbackOnBody ? document.body : rootEl,\n        rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n        options = this.options;\n\n      // Position absolutely\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n\n        while (\n          //@ts-ignore\n          css(ghostRelativeParent, \"position\") === \"static\" &&\n          //@ts-ignore\n          css(ghostRelativeParent, \"transform\") === \"none\" &&\n          ghostRelativeParent !== document\n        ) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n\n        if (\n          ghostRelativeParent !== document.body &&\n          ghostRelativeParent !== document.documentElement\n        ) {\n          if (ghostRelativeParent === document)\n            ghostRelativeParent = getWindowScrollingElement();\n\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(\n          ghostRelativeParent\n        );\n      }\n\n      ghostEl = dragEl.cloneNode(true);\n\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n\n      css(ghostEl, \"transition\", \"\");\n      css(ghostEl, \"transform\", \"\");\n\n      css(ghostEl, \"box-sizing\", \"border-box\");\n      css(ghostEl, \"margin\", 0);\n      css(ghostEl, \"top\", rect.top);\n      css(ghostEl, \"left\", rect.left);\n      css(ghostEl, \"width\", rect.width);\n      css(ghostEl, \"height\", rect.height);\n      css(ghostEl, \"opacity\", \"0.8\");\n      css(ghostEl, \"position\", PositionGhostAbsolutely ? \"absolute\" : \"fixed\");\n      css(ghostEl, \"zIndex\", \"100000\");\n      css(ghostEl, \"pointerEvents\", \"none\");\n\n      //@ts-ignore\n      Sortable.ghost = ghostEl;\n\n      container.appendChild(ghostEl);\n\n      // Set transform-origin\n      css(\n        ghostEl,\n        \"transform-origin\",\n        (tapDistanceLeft / parseInt(ghostEl.style.width)) * 100 +\n          \"% \" +\n          (tapDistanceTop / parseInt(ghostEl.style.height)) * 100 +\n          \"%\"\n      );\n    }\n  },\n\n  _onDragStart: function (/**Event*/ evt, /**boolean*/ fallback) {\n    let _this = this;\n    let dataTransfer = evt.dataTransfer;\n    let options = _this.options;\n\n    pluginEvent(\"dragStart\", this, { evt });\n    //@ts-ignore\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n      return;\n    }\n\n    pluginEvent(\"setupClone\", this);\n    //@ts-ignore\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n\n      cloneEl.draggable = false;\n      cloneEl.style[\"will-change\"] = \"\";\n\n      this._hideClone();\n\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      //@ts-ignore\n      Sortable.clone = cloneEl;\n    }\n\n    // #1143: IFrame support workaround\n    _this.cloneId = _nextTick(function () {\n      pluginEvent(\"clone\", _this);\n      //@ts-ignore\n      if (Sortable.eventCanceled) return;\n\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n      _this._hideClone();\n\n      _dispatchEvent({\n        sortable: _this,\n        name: \"clone\",\n      });\n    });\n\n    !fallback && toggleClass(dragEl, options.dragClass, true);\n\n    // Set proper drop events\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, \"mouseup\", _this._onDrop);\n      off(document, \"touchend\", _this._onDrop);\n      off(document, \"touchcancel\", _this._onDrop);\n\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = \"move\";\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n\n      on(document, \"drop\", _this);\n\n      // #1276 fix:\n      css(dragEl, \"transform\", \"translateZ(0)\");\n    }\n\n    awaitingDragStarted = true;\n\n    _this._dragStartId = _nextTick(\n      _this._dragStarted.bind(_this, fallback, evt)\n    );\n    on(document, \"selectstart\", _this);\n\n    moved = true;\n\n    if (Safari) {\n      css(document.body, \"user-select\", \"none\");\n    }\n  },\n\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function (/**Event*/ evt) {\n    let el = this.el,\n      target = evt.target,\n      dragRect,\n      targetRect,\n      revert,\n      options = this.options,\n      group = options.group,\n      //@ts-ignore\n      activeSortable = Sortable.active,\n      isOwner = activeGroup === group,\n      canSort = options.sort,\n      fromSortable = putSortable || activeSortable,\n      vertical,\n      _this = this,\n      completedFired = false;\n\n    if (_silent) return;\n\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, {\n        evt,\n        isOwner,\n        axis: vertical ? \"vertical\" : \"horizontal\",\n        revert,\n        dragRect,\n        targetRect,\n        canSort,\n        fromSortable,\n        target,\n        completed,\n        onMove(target, after) {\n          return onMove(\n            rootEl,\n            el,\n            dragEl,\n            dragRect,\n            target,\n            //@ts-ignore\n            getRect(target),\n            evt,\n            after\n          );\n        },\n        changed,\n        ...extra,\n      });\n    }\n\n    // Capture animation state\n    function capture() {\n      //@ts-ignore\n      dragOverEvent(\"dragOverAnimationCapture\");\n\n      _this.captureAnimationState();\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    }\n\n    // Return invocation when dragEl is inserted (or completed)\n    function completed(insertion) {\n      dragOverEvent(\"dragOverCompleted\", { insertion });\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(\n            dragEl,\n            putSortable\n              ? putSortable.options.ghostClass\n              : activeSortable.options.ghostClass,\n            false\n          );\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n\n        //@ts-ignore\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n          //@ts-ignore\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        }\n\n        // Animation\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n        _this.animateAll(function () {\n          //@ts-ignore\n          dragOverEvent(\"dragOverAnimationComplete\");\n          _this._ignoreWhileAnimating = null;\n        });\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      }\n\n      // Null lastTarget if it is not inside a previously swapped element\n      if (\n        (target === dragEl && !dragEl.animated) ||\n        (target === el && !target.animated)\n      ) {\n        lastTarget = null;\n      }\n\n      // no bubbling and not fallback\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n\n        // Do not detect for empty insert if already inserted\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n\n      return (completedFired = true);\n    }\n\n    // Call when dragEl has been inserted\n    function changed() {\n      //@ts-ignore\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n      _dispatchEvent({\n        sortable: _this,\n        name: \"change\",\n        toEl: el,\n        newIndex,\n        newDraggableIndex,\n        originalEvent: evt,\n      });\n    }\n\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n\n    target = closest(target, options.draggable, el, true);\n\n    //@ts-ignore\n    dragOverEvent(\"dragOver\");\n    //@ts-ignore\n    if (Sortable.eventCanceled) return completedFired;\n\n    if (\n      dragEl.contains(evt.target) ||\n      (target.animated && target.animatingX && target.animatingY) ||\n      _this._ignoreWhileAnimating === target\n    ) {\n      return completed(false);\n    }\n\n    ignoreNextClick = false;\n\n    if (\n      activeSortable &&\n      !options.disabled &&\n      (isOwner\n        ? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n        : putSortable === this ||\n          ((this.lastPutMode = activeGroup.checkPull(\n            this,\n            activeSortable,\n            dragEl,\n            evt\n          )) &&\n            group.checkPut(this, activeSortable, dragEl, evt)))\n    ) {\n      vertical = this._getDirection(evt, target) === \"vertical\";\n\n      //@ts-ignore\n      dragRect = getRect(dragEl);\n\n      //@ts-ignore\n      dragOverEvent(\"dragOverValid\");\n      //@ts-ignore\n      if (Sortable.eventCanceled) return completedFired;\n\n      if (revert) {\n        parentEl = rootEl; // actualization\n        capture();\n\n        this._hideClone();\n\n        //@ts-ignore\n        dragOverEvent(\"revert\");\n\n        //@ts-ignore\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n\n        return completed(true);\n      }\n\n      let elLastChild = lastChild(el, options.draggable);\n\n      if (\n        !elLastChild ||\n        (_ghostIsLast(evt, vertical, this) && !elLastChild.animated)\n      ) {\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        }\n\n        // assign target only if condition is true\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n\n        if (target) {\n          //@ts-ignore\n          targetRect = getRect(target);\n        }\n\n        if (\n          onMove(\n            rootEl,\n            el,\n            dragEl,\n            dragRect,\n            target,\n            targetRect,\n            evt,\n            !!target\n          ) !== false\n        ) {\n          capture();\n          el.appendChild(dragEl);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        //@ts-ignore\n        targetRect = getRect(target);\n        let direction = 0,\n          targetBeforeFirstSwap,\n          differentLevel = dragEl.parentNode !== el,\n          differentRowCol = !_dragElInRowColumn(\n            (dragEl.animated && dragEl.toRect) || dragRect,\n            (target.animated && target.toRect) || targetRect,\n            vertical\n          ),\n          side1 = vertical ? \"top\" : \"left\",\n          scrolledPastTop =\n            isScrolledPast(target, \"top\", \"top\") ||\n            isScrolledPast(dragEl, \"top\", \"top\"),\n          scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert =\n            (!differentRowCol && options.invertSwap) || differentLevel;\n        }\n\n        direction = _getSwapDirection(\n          evt,\n          target,\n          targetRect,\n          vertical,\n          differentRowCol ? 1 : options.swapThreshold,\n          options.invertedSwapThreshold == null\n            ? options.swapThreshold\n            : options.invertedSwapThreshold,\n          isCircumstantialInvert,\n          lastTarget === target\n        );\n\n        let sibling;\n\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          //@ts-ignore\n          let dragIndex = index(dragEl);\n\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (\n            sibling &&\n            //@ts-ignore\n            (css(sibling, \"display\") === \"none\" || sibling === ghostEl)\n          );\n        }\n        // If dragEl is already beside target: Do not insert\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n\n        lastTarget = target;\n\n        lastDirection = direction;\n\n        let nextSibling = target.nextElementSibling,\n          after = false;\n\n        after = direction === 1;\n\n        let moveVector = onMove(\n          rootEl,\n          el,\n          dragEl,\n          dragRect,\n          target,\n          targetRect,\n          evt,\n          after\n        );\n\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n\n          _silent = true;\n          setTimeout(_unsilent, 30);\n\n          capture();\n\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(\n              dragEl,\n              after ? nextSibling : target\n            );\n          }\n\n          // Undo chrome's scroll adjustment (has no effect on other browsers)\n          if (scrolledPastTop) {\n            scrollBy(\n              scrolledPastTop,\n              0,\n              scrollBefore - scrolledPastTop.scrollTop\n            );\n          }\n\n          parentEl = dragEl.parentNode; // actualization\n\n          // must be done before animation\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(\n              //@ts-ignore\n              targetBeforeFirstSwap - getRect(target)[side1]\n            );\n          }\n          changed();\n\n          return completed(true);\n        }\n      }\n\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n\n    return false;\n  },\n\n  _ignoreWhileAnimating: null,\n\n  _offMoveEvents: function () {\n    off(document, \"mousemove\", this._onTouchMove);\n    off(document, \"touchmove\", this._onTouchMove);\n    off(document, \"pointermove\", this._onTouchMove);\n    off(document, \"dragover\", nearestEmptyInsertDetectEvent);\n    off(document, \"mousemove\", nearestEmptyInsertDetectEvent);\n    off(document, \"touchmove\", nearestEmptyInsertDetectEvent);\n  },\n\n  _offUpEvents: function () {\n    let ownerDocument = this.el.ownerDocument;\n\n    off(ownerDocument, \"mouseup\", this._onDrop);\n    off(ownerDocument, \"touchend\", this._onDrop);\n    off(ownerDocument, \"pointerup\", this._onDrop);\n    off(ownerDocument, \"touchcancel\", this._onDrop);\n    off(document, \"selectstart\", this);\n  },\n\n  _onDrop: function (/**Event*/ evt) {\n    let el = this.el,\n      options = this.options;\n\n    // Get the index of the dragged element within its parent\n    //@ts-ignore\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    pluginEvent(\"drop\", this, {\n      evt,\n    });\n\n    parentEl = dragEl && dragEl.parentNode;\n\n    // Get again after plugin event\n    //@ts-ignore\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    //@ts-ignore\n    if (Sortable.eventCanceled) {\n      this._nulling();\n      return;\n    }\n\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n\n    clearInterval(this._loopId);\n\n    clearTimeout(this._dragStartTimer);\n\n    _cancelNextTick(this.cloneId);\n    _cancelNextTick(this._dragStartId);\n\n    // Unbind events\n    if (this.nativeDraggable) {\n      off(document, \"drop\", this);\n      off(el, \"dragstart\", this._onDragStart);\n    }\n    this._offMoveEvents();\n    this._offUpEvents();\n\n    if (Safari) {\n      css(document.body, \"user-select\", \"\");\n    }\n\n    css(dragEl, \"transform\", \"\");\n\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n      if (\n        rootEl === parentEl ||\n        (putSortable && putSortable.lastPutMode !== \"clone\")\n      ) {\n        // Remove clone(s)\n        cloneEl &&\n          cloneEl.parentNode &&\n          cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, \"dragend\", this);\n        }\n\n        _disableDraggable(dragEl);\n        dragEl.style[\"will-change\"] = \"\";\n\n        // Remove classes\n        // ghostClass is added in dragStarted\n        if (moved && !awaitingDragStarted) {\n          toggleClass(\n            dragEl,\n            putSortable\n              ? putSortable.options.ghostClass\n              : this.options.ghostClass,\n            false\n          );\n        }\n        toggleClass(dragEl, this.options.chosenClass, false);\n\n        // Drag stop event\n        _dispatchEvent({\n          sortable: this,\n          name: \"unchoose\",\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt,\n        });\n\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: \"add\",\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt,\n            });\n\n            // Remove event\n            _dispatchEvent({\n              sortable: this,\n              name: \"remove\",\n              toEl: parentEl,\n              originalEvent: evt,\n            });\n\n            // drag from one list and drop into another\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: \"sort\",\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt,\n            });\n\n            _dispatchEvent({\n              sortable: this,\n              name: \"sort\",\n              toEl: parentEl,\n              originalEvent: evt,\n            });\n          }\n\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: \"update\",\n                toEl: parentEl,\n                originalEvent: evt,\n              });\n\n              _dispatchEvent({\n                sortable: this,\n                name: \"sort\",\n                toEl: parentEl,\n                originalEvent: evt,\n              });\n            }\n          }\n        }\n\n        //@ts-ignore\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n\n          _dispatchEvent({\n            sortable: this,\n            name: \"end\",\n            toEl: parentEl,\n            originalEvent: evt,\n          });\n\n          // Save sorting\n          this.save();\n        }\n      }\n    }\n    this._nulling();\n  },\n\n  _nulling: function () {\n    pluginEvent(\"nulling\", this);\n    //@ts-ignore\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n\n  handleEvent: function (/**Event*/ evt) {\n    switch (evt.type) {\n      case \"drop\":\n      case \"dragend\":\n        this._onDrop(evt);\n        break;\n\n      case \"dragenter\":\n      case \"dragover\":\n        if (dragEl) {\n          this._onDragOver(evt);\n          _globalDragOver(evt);\n        }\n        break;\n\n      case \"selectstart\":\n        evt.preventDefault();\n        break;\n    }\n  },\n\n  /**\n   * Serializes the item into an array of string.\n   * @returns {String[]}\n   */\n  toArray: function () {\n    let order = [],\n      el,\n      children = this.el.children,\n      i = 0,\n      n = children.length,\n      options = this.options;\n\n    for (; i < n; i++) {\n      el = children[i];\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n\n    return order;\n  },\n\n  /**\n   * Sorts the elements according to the array.\n   * @param  {String[]}  order  order of the items\n   */\n  sort: function (order) {\n    let items = {},\n      rootEl = this.el;\n\n    this.toArray().forEach(function (id, i) {\n      let el = rootEl.children[i];\n\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n  },\n\n  /**\n   * Save the current sorting\n   */\n  save: function () {\n    let store = this.options.store;\n    store && store.set && store.set(this);\n  },\n\n  /**\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n   * @param   {HTMLElement}  el\n   * @param   {String}       [selector]  default: `options.draggable`\n   * @returns {HTMLElement|null}\n   */\n  closest: function (el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n\n  /**\n   * Set/get option\n   * @param   {string} name\n   * @param   {*}      [value]\n   * @returns {*}\n   */\n  option: function (name, value) {\n    let options = this.options;\n\n    if (value === void 0) {\n      return options[name];\n    } else {\n      let modifiedValue = PluginManager.modifyOption(this, name, value);\n      if (typeof modifiedValue !== \"undefined\") {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n\n      if (name === \"group\") {\n        _prepareGroup(options);\n      }\n    }\n  },\n\n  /**\n   * Destroy\n   */\n  destroy: function () {\n    pluginEvent(\"destroy\", this);\n    let el = this.el;\n\n    el[expando] = null;\n\n    off(el, \"mousedown\", this._onTapStart);\n    off(el, \"touchstart\", this._onTapStart);\n    off(el, \"pointerdown\", this._onTapStart);\n\n    if (this.nativeDraggable) {\n      off(el, \"dragover\", this);\n      off(el, \"dragenter\", this);\n    }\n    // Remove draggable attributes\n    Array.prototype.forEach.call(el.querySelectorAll(\"[draggable]\"), function (\n      el\n    ) {\n      el.removeAttribute(\"draggable\");\n    });\n\n    this._onDrop();\n\n    this._disableDelayedDragEvents();\n\n    sortables.splice(sortables.indexOf(this.el), 1);\n\n    this.el = el = null;\n  },\n\n  _hideClone: function () {\n    if (!cloneHidden) {\n      pluginEvent(\"hideClone\", this);\n      //@ts-ignore\n      if (Sortable.eventCanceled) return;\n\n      css(cloneEl, \"display\", \"none\");\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n      cloneHidden = true;\n    }\n  },\n\n  _showClone: function (putSortable) {\n    if (putSortable.lastPutMode !== \"clone\") {\n      this._hideClone();\n      return;\n    }\n\n    if (cloneHidden) {\n      pluginEvent(\"showClone\", this);\n      //@ts-ignore\n      if (Sortable.eventCanceled) return;\n\n      // show clone at dragEl or original position\n      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n\n      css(cloneEl, \"display\", \"\");\n      cloneHidden = false;\n    }\n  },\n};\n\nfunction _globalDragOver(/**Event*/ evt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = \"move\";\n  }\n  evt.cancelable && evt.preventDefault();\n}\n\nfunction onMove(\n  fromEl,\n  toEl,\n  dragEl,\n  dragRect,\n  targetEl,\n  targetRect,\n  originalEvent,\n  willInsertAfter\n) {\n  let evt,\n    sortable = fromEl[expando],\n    onMoveFn = sortable.options.onMove,\n    retVal;\n  // Support for new CustomEvent feature\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(\"move\", {\n      bubbles: true,\n      cancelable: true,\n    });\n  } else {\n    evt = document.createEvent(\"Event\");\n    evt.initEvent(\"move\", true, true);\n  }\n\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  //@ts-ignore\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n\n  evt.originalEvent = originalEvent;\n\n  fromEl.dispatchEvent(evt);\n\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n\n  return retVal;\n}\n\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\n\nfunction _unsilent() {\n  _silent = false;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n  //@ts-ignore\n  let rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  const spacer = 10;\n\n  return vertical\n    ? evt.clientX > rect.right + spacer ||\n        (evt.clientX <= rect.right &&\n          evt.clientY > rect.bottom &&\n          evt.clientX >= rect.left)\n    : (evt.clientX > rect.right && evt.clientY > rect.top) ||\n        (evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer);\n}\n\nfunction _getSwapDirection(\n  evt,\n  target,\n  targetRect,\n  vertical,\n  swapThreshold,\n  invertedSwapThreshold,\n  invertSwap,\n  isLastTarget\n) {\n  let mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n    targetLength = vertical ? targetRect.height : targetRect.width,\n    targetS1 = vertical ? targetRect.top : targetRect.left,\n    targetS2 = vertical ? targetRect.bottom : targetRect.right,\n    invert = false;\n\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (\n        !pastFirstInvertThresh &&\n        (lastDirection === 1\n          ? mouseOnAxis > targetS1 + (targetLength * invertedSwapThreshold) / 2\n          : mouseOnAxis < targetS2 - (targetLength * invertedSwapThreshold) / 2)\n      ) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (\n          lastDirection === 1\n            ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n            : mouseOnAxis > targetS2 - targetMoveDistance\n        ) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (\n        mouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold)) / 2 &&\n        mouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold)) / 2\n      ) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n\n  invert = invert || invertSwap;\n\n  if (invert) {\n    // Invert of regular\n    if (\n      mouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold) / 2 ||\n      mouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold) / 2\n    ) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Gets the direction dragEl must be swapped relative to target in order to make it\n * seem that dragEl has been \"inserted\" into that element's position\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n * @return {Number}                   Direction dragEl must be swapped\n */\nfunction _getInsertDirection(target) {\n  //@ts-ignore\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n\n/**\n * Generate id\n * @param   {HTMLElement} el\n * @returns {String}\n * @private\n */\nfunction _generateId(el) {\n  let str = el.tagName + el.className + el.src + el.href + el.textContent,\n    i = str.length,\n    sum = 0;\n\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n\n  let inputs = root.getElementsByTagName(\"input\");\n  let idx = inputs.length;\n\n  while (idx--) {\n    let el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\n\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n}\n\n// Fixed #973:\nif (documentExists) {\n  on(document, \"touchmove\", function (evt) {\n    //@ts-ignore\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n}\n\n// Export utils\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function (el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild,\n};\n\n/**\n * Get the Sortable instance of an element\n * @param  {HTMLElement} element The element\n * @return {Sortable|undefined}         The instance of Sortable\n */\nSortable.get = function (element) {\n  return element[expando];\n};\n\n/**\n * Mount a plugin to Sortable\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\n */\nSortable.mount = function (...plugins) {\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n\n  plugins.forEach((plugin) => {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw `Sortable: Mounted plugin must be a constructor function, not ${{}.toString.call(\n        plugin\n      )}`;\n    }\n    if (plugin.utils) Sortable.utils = { ...Sortable.utils, ...plugin.utils };\n\n    PluginManager.mount(plugin);\n  });\n};\n\n/**\n * Create sortable instance\n * @param {HTMLElement}  el\n * @param {Object}      [options]\n */\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n};\n\n// Export\nSortable.version = version;\n\nexport default Sortable;\n","import { toggleClass, index } from \"../../../utils/src\";\n\nlet lastSwapEl;\n\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: \"sortable-swap-highlight\",\n    };\n  }\n\n  Swap.prototype = {\n    dragStart({ dragEl }) {\n      lastSwapEl = dragEl;\n    },\n    dragOverValid({\n      completed,\n      target,\n      onMove,\n      activeSortable,\n      changed,\n      cancel,\n    }) {\n      if (!activeSortable.options.swap) return;\n      let el = this.sortable.el,\n        options = this.options;\n      if (target && target !== el) {\n        let prevSwapEl = lastSwapEl;\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n      changed();\n\n      completed(true);\n      cancel();\n    },\n    drop({ activeSortable, putSortable, dragEl }) {\n      let toSortable = putSortable || this.sortable;\n      let options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n      if (\n        lastSwapEl &&\n        (options.swap || (putSortable && putSortable.options.swap))\n      ) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable)\n            activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling() {\n      lastSwapEl = null;\n    },\n  };\n\n  return Object.assign(Swap, {\n    pluginName: \"swap\",\n    eventProperties() {\n      return {\n        swapItem: lastSwapEl,\n      };\n    },\n  });\n}\n\nfunction swapNodes(n1, n2) {\n  let p1 = n1.parentNode,\n    p2 = n2.parentNode,\n    i1,\n    i2;\n\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n\n  //@ts-ignore\n  i1 = index(n1);\n  //@ts-ignore\n  i2 = index(n2);\n\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nexport default SwapPlugin;\n","import {\n  getRect,\n  css,\n  matrix,\n  isRectEqual,\n  indexOfObject,\n} from \"../../utils/src\";\nimport * as Sortable from \"./Sortable\";\n\nexport default function AnimationStateManager() {\n  let animationStates = [],\n    animationCallbackId;\n\n  return {\n    captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      let children = [].slice.call(this.el.children);\n\n      children.forEach((child) => {\n        //@ts-ignore\n        if (css(child, \"display\") === \"none\" || child === Sortable.ghost)\n          return;\n        animationStates.push({\n          target: child,\n          //@ts-ignore\n          rect: getRect(child),\n        });\n        let fromRect = { ...animationStates[animationStates.length - 1].rect };\n\n        // If animating: compensate for current animation\n        if (child.thisAnimationDuration) {\n          let childMatrix = matrix(child, true);\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n\n        child.fromRect = fromRect;\n      });\n    },\n\n    addAnimationState(state) {\n      animationStates.push(state);\n    },\n\n    removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, { target }), 1);\n    },\n\n    animateAll(callback) {\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === \"function\") callback();\n        return;\n      }\n\n      let animating = false,\n        animationTime = 0;\n\n      animationStates.forEach((state) => {\n        let time = 0,\n          animatingThis = false,\n          target = state.target,\n          fromRect = target.fromRect,\n          //@ts-ignore\n          toRect = getRect(target),\n          prevFromRect = target.prevFromRect,\n          prevToRect = target.prevToRect,\n          animatingRect = state.rect,\n          targetMatrix = matrix(target, true);\n\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n\n        target.toRect = toRect;\n\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (\n            isRectEqual(prevFromRect, toRect) &&\n            !isRectEqual(fromRect, toRect) &&\n            // Make sure animatingRect is on line between toRect & fromRect\n            (animatingRect.top - toRect.top) /\n              (animatingRect.left - toRect.left) ===\n              (fromRect.top - toRect.top) / (fromRect.left - toRect.left)\n          ) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(\n              animatingRect,\n              prevFromRect,\n              prevToRect,\n              this.options\n            );\n          }\n        }\n\n        // if fromRect != toRect: animate\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n\n          if (!time) {\n            time = this.options.animation;\n          }\n          this.animate(target, animatingRect, toRect, time);\n        }\n\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n\n      clearTimeout(animationCallbackId);\n      if (!animating) {\n        if (typeof callback === \"function\") callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === \"function\") callback();\n        }, animationTime);\n      }\n      animationStates = [];\n    },\n\n    animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, \"transition\", \"\");\n        css(target, \"transform\", \"\");\n        //@ts-ignore\n        let elMatrix = matrix(this.el),\n          scaleX = elMatrix && elMatrix.a,\n          scaleY = elMatrix && elMatrix.d,\n          translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n          translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n\n        css(\n          target,\n          \"transform\",\n          \"translate3d(\" + translateX + \"px,\" + translateY + \"px,0)\"\n        );\n\n        this.forRepaintDummy = repaint(target); // repaint\n\n        css(\n          target,\n          \"transition\",\n          \"transform \" +\n            duration +\n            \"ms\" +\n            (this.options.easing ? \" \" + this.options.easing : \"\")\n        );\n        css(target, \"transform\", \"translate3d(0,0,0)\");\n        typeof target.animated === \"number\" && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, \"transition\", \"\");\n          css(target, \"transform\", \"\");\n          target.animated = false;\n\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    },\n  };\n}\n\nfunction repaint(target) {\n  return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return (\n    (Math.sqrt(\n      Math.pow(fromRect.top - animatingRect.top, 2) +\n        Math.pow(fromRect.left - animatingRect.left, 2)\n    ) /\n      Math.sqrt(\n        Math.pow(fromRect.top - toRect.top, 2) +\n          Math.pow(fromRect.left - toRect.left, 2)\n      )) *\n    options.animation\n  );\n}\n","import {\n  toggleClass,\n  getRect,\n  index,\n  closest,\n  on,\n  off,\n  clone,\n  css,\n  setRect,\n  unsetRect,\n  matrix,\n  expando,\n} from \"../../../utils/src\";\n\nimport dispatchEvent from \"../../../sortable/src/EventDispatcher\";\n\nlet multiDragElements = [],\n  multiDragClones = [],\n  lastMultiDragSelect, // for selection with modifier key down (SHIFT)\n  multiDragSortable,\n  initialFolding = false, // Initial multi-drag fold when drag started\n  folding = false, // Folding any other time\n  dragStarted = false,\n  dragEl,\n  clonesFromRect,\n  clonesHidden;\n\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (let fn in this) {\n      if (fn.charAt(0) === \"_\" && typeof this[fn] === \"function\") {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n\n    if (sortable.options.supportPointer) {\n      on(document, \"pointerup\", this._deselectMultiDrag);\n    } else {\n      on(document, \"mouseup\", this._deselectMultiDrag);\n      on(document, \"touchend\", this._deselectMultiDrag);\n    }\n\n    on(document, \"keydown\", this._checkKeyDown);\n    on(document, \"keyup\", this._checkKeyUp);\n\n    this.defaults = {\n      selectedClass: \"sortable-selected\",\n      multiDragKey: null,\n      setData(dataTransfer, dragEl) {\n        let data = \"\";\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach((multiDragElement, i) => {\n            data += (!i ? \"\" : \", \") + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n        dataTransfer.setData(\"Text\", data);\n      },\n    };\n  }\n\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n\n    delayStartGlobal({ dragEl: dragged }) {\n      dragEl = dragged;\n    },\n\n    delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl);\n    },\n\n    setupClone({ sortable, cancel }) {\n      if (!this.isMultiDrag) return;\n      for (let i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style[\"will-change\"] = \"\";\n\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl &&\n          toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n\n      sortable._hideClone();\n      cancel();\n    },\n\n    clone({ sortable, rootEl, dispatchSortableEvent, cancel }) {\n      if (!this.isMultiDrag) return;\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent(\"clone\");\n\n          cancel();\n        }\n      }\n    },\n\n    showClone({ cloneNowShown, rootEl, cancel }) {\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach((clone) => {\n        css(clone, \"display\", \"\");\n      });\n\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n\n    hideClone({ sortable, cloneNowHidden, cancel }) {\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach((clone) => {\n        css(clone, \"display\", \"none\");\n        if (this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n\n    dragStartGlobal({ sortable }) {\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n\n      multiDragElements.forEach((multiDragElement) => {\n        //@ts-ignore\n        multiDragElement.sortableIndex = index(multiDragElement);\n      });\n\n      // Sort multi-drag elements\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n\n    dragStarted({ sortable }) {\n      if (!this.isMultiDrag) return;\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n\n        sortable.captureAnimationState();\n\n        if (this.options.animation) {\n          multiDragElements.forEach((multiDragElement) => {\n            if (multiDragElement === dragEl) return;\n            css(multiDragElement, \"position\", \"absolute\");\n          });\n\n          //@ts-ignore\n          let dragRect = getRect(dragEl, false, true, true);\n\n          multiDragElements.forEach((multiDragElement) => {\n            if (multiDragElement === dragEl) return;\n            setRect(multiDragElement, dragRect);\n          });\n\n          folding = true;\n          initialFolding = true;\n        }\n      }\n\n      sortable.animateAll(() => {\n        folding = false;\n        initialFolding = false;\n\n        if (this.options.animation) {\n          multiDragElements.forEach((multiDragElement) => {\n            unsetRect(multiDragElement);\n          });\n        }\n\n        // Remove all auxiliary multidrag items from el, if sorting enabled\n        if (this.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n\n    dragOver({ target, completed, cancel }) {\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n\n    revert({ fromSortable, rootEl, sortable, dragRect }) {\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach((multiDragElement) => {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            //@ts-ignore\n            rect: folding ? getRect(multiDragElement) : dragRect,\n          });\n\n          unsetRect(multiDragElement);\n\n          multiDragElement.fromRect = dragRect;\n\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n\n    dragOverCompleted({\n      sortable,\n      isOwner,\n      insertion,\n      activeSortable,\n      parentEl,\n      putSortable,\n    }) {\n      let options = this.options;\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n\n        initialFolding = false;\n        // If leaving sort:false root, or already folding - Fold to new location\n        if (\n          options.animation &&\n          multiDragElements.length > 1 &&\n          (folding ||\n            (!isOwner && !activeSortable.options.sort && !putSortable))\n        ) {\n          //@ts-ignore\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          let dragRectAbsolute = getRect(dragEl, false, true, true);\n\n          multiDragElements.forEach((multiDragElement) => {\n            if (multiDragElement === dragEl) return;\n            setRect(multiDragElement, dragRectAbsolute);\n\n            // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n            parentEl.appendChild(multiDragElement);\n          });\n\n          folding = true;\n        }\n\n        // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n\n          if (multiDragElements.length > 1) {\n            let clonesHiddenBefore = clonesHidden;\n            activeSortable._showClone(sortable);\n\n            // Unfold animation for clones if showing from hidden\n            if (\n              activeSortable.options.animation &&\n              !clonesHidden &&\n              clonesHiddenBefore\n            ) {\n              multiDragClones.forEach((clone) => {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect,\n                });\n\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n\n    dragOverAnimationCapture({ dragRect, isOwner, activeSortable }) {\n      multiDragElements.forEach((multiDragElement) => {\n        multiDragElement.thisAnimationDuration = null;\n      });\n\n      if (\n        activeSortable.options.animation &&\n        !isOwner &&\n        activeSortable.multiDrag.isMultiDrag\n      ) {\n        clonesFromRect = Object.assign({}, dragRect);\n        let dragMatrix = matrix(dragEl, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n\n    dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n\n    drop({\n      originalEvent: evt,\n      rootEl,\n      parentEl,\n      sortable,\n      dispatchSortableEvent,\n      oldIndex,\n      putSortable,\n    }) {\n      let toSortable = putSortable || this.sortable;\n\n      if (!evt) return;\n\n      let options = this.options,\n        children = parentEl.children;\n\n      // Multi-drag selection\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n        toggleClass(\n          dragEl,\n          options.selectedClass,\n          !~multiDragElements.indexOf(dragEl)\n        );\n\n        if (!~multiDragElements.indexOf(dragEl)) {\n          multiDragElements.push(dragEl);\n          dispatchEvent({\n            sortable,\n            rootEl,\n            name: \"select\",\n            targetEl: dragEl,\n            //@ts-ignore\n            originalEvt: evt,\n          });\n\n          // Modifier activated, select from last to dragEl\n          if (\n            evt.shiftKey &&\n            lastMultiDragSelect &&\n            sortable.el.contains(lastMultiDragSelect)\n          ) {\n            //@ts-ignore\n            let lastIndex = index(lastMultiDragSelect),\n              //@ts-ignore\n              currentIndex = index(dragEl);\n\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              let n, i;\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n\n                dispatchEvent({\n                  sortable,\n                  rootEl,\n                  name: \"select\",\n                  targetEl: children[i],\n                  //@ts-ignore\n                  originalEvt: evt,\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl;\n          }\n\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable,\n            rootEl,\n            name: \"deselect\",\n            targetEl: dragEl,\n            //@ts-ignore\n            originalEvt: evt,\n          });\n        }\n      }\n\n      // Multi-drag drop\n      if (dragStarted && this.isMultiDrag) {\n        // Do not \"unfold\" after around dragEl if reverted\n        if (\n          (parentEl[expando].options.sort || parentEl !== rootEl) &&\n          multiDragElements.length > 1\n        ) {\n          //@ts-ignore\n          let dragRect = getRect(dragEl),\n            multiDragIndex = index(\n              dragEl,\n              \":not(.\" + this.options.selectedClass + \")\"\n            );\n\n          if (!initialFolding && options.animation)\n            dragEl.thisAnimationDuration = null;\n\n          toSortable.captureAnimationState();\n\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl.fromRect = dragRect;\n              multiDragElements.forEach((multiDragElement) => {\n                multiDragElement.thisAnimationDuration = null;\n                if (multiDragElement !== dragEl) {\n                  //@ts-ignore\n                  let rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect;\n\n                  // Prepare unfold animation\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect,\n                  });\n                }\n              });\n            }\n\n            // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n            removeMultiDragElements();\n\n            multiDragElements.forEach((multiDragElement) => {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(\n                  multiDragElement,\n                  children[multiDragIndex]\n                );\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n              multiDragIndex++;\n            });\n\n            // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n            //@ts-ignore\n            if (oldIndex === index(dragEl)) {\n              let update = false;\n              multiDragElements.forEach((multiDragElement) => {\n                //@ts-ignore\n                if (\n                  //@ts-ignore\n                  multiDragElement.sortableIndex !== index(multiDragElement)\n                ) {\n                  update = true;\n                  return;\n                }\n              });\n\n              if (update) {\n                dispatchSortableEvent(\"update\");\n              }\n            }\n          }\n\n          // Must be done after capturing individual rects (scroll bar)\n          multiDragElements.forEach((multiDragElement) => {\n            unsetRect(multiDragElement);\n          });\n\n          toSortable.animateAll();\n        }\n\n        multiDragSortable = toSortable;\n      }\n\n      // Remove clones if necessary\n      if (\n        rootEl === parentEl ||\n        (putSortable && putSortable.lastPutMode !== \"clone\")\n      ) {\n        multiDragClones.forEach((clone) => {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n\n    nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n\n    destroyGlobal() {\n      this._deselectMultiDrag();\n      off(document, \"pointerup\", this._deselectMultiDrag);\n      off(document, \"mouseup\", this._deselectMultiDrag);\n      off(document, \"touchend\", this._deselectMultiDrag);\n\n      off(document, \"keydown\", this._checkKeyDown);\n      off(document, \"keyup\", this._checkKeyUp);\n    },\n\n    _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return;\n\n      // Only deselect if selection is in this sortable\n      if (multiDragSortable !== this.sortable) return;\n\n      // Only deselect if target is not item in this sortable\n      if (\n        evt &&\n        closest(evt.target, this.options.draggable, this.sortable.el, false)\n      )\n        return;\n\n      // Only deselect if left click\n      if (evt && evt.button !== 0) return;\n\n      while (multiDragElements.length) {\n        let el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: \"deselect\",\n          //@ts-ignore\n          targetEl: el,\n          //@ts-ignore\n          originalEvt: evt,\n        });\n      }\n    },\n\n    _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n\n    _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    },\n  };\n\n  return Object.assign(MultiDrag, {\n    // Static methods & properties\n    pluginName: \"multiDrag\",\n    utils: {\n      /**\n       * Selects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be selected\n       */\n      select(el) {\n        let sortable = el.parentNode[expando];\n        if (\n          !sortable ||\n          !sortable.options.multiDrag ||\n          ~multiDragElements.indexOf(el)\n        )\n          return;\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n          multiDragSortable = sortable;\n        }\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n      /**\n       * Deselects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be deselected\n       */\n      deselect(el) {\n        let sortable = el.parentNode[expando],\n          index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      },\n    },\n    eventProperties() {\n      const oldIndicies = [],\n        newIndicies = [];\n\n      multiDragElements.forEach((multiDragElement) => {\n        oldIndicies.push({\n          multiDragElement,\n          index: multiDragElement.sortableIndex,\n        });\n\n        // multiDragElements will already be sorted if folding\n        let newIndex;\n        if (folding && multiDragElement !== dragEl) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(\n            multiDragElement,\n            \":not(.\" + this.options.selectedClass + \")\"\n          );\n        } else {\n          //@ts-ignore\n          newIndex = index(multiDragElement);\n        }\n        newIndicies.push({\n          multiDragElement,\n          index: newIndex,\n        });\n      });\n      return {\n        items: [...multiDragElements],\n        clones: [...multiDragClones],\n        oldIndicies,\n        newIndicies,\n      };\n    },\n    optionListeners: {\n      multiDragKey(key) {\n        key = key.toLowerCase();\n        if (key === \"ctrl\") {\n          key = \"Control\";\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n        return key;\n      },\n    },\n  });\n}\n\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach((multiDragElement, i) => {\n    let target =\n      rootEl.children[\n        multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)\n      ];\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n\n/**\n * Insert multi-drag clones\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\n * @param  {HTMLElement} rootEl\n */\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach((clone, i) => {\n    let target =\n      rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\n\nfunction removeMultiDragElements() {\n  multiDragElements.forEach((multiDragElement) => {\n    if (multiDragElement === dragEl) return;\n    multiDragElement.parentNode &&\n      multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nexport default MultiDragPlugin;\n","import { getChild } from \"../../../utils/src\";\n\nconst drop = function ({\n  originalEvent,\n  putSortable,\n  dragEl,\n  activeSortable,\n  dispatchSortableEvent,\n  hideGhostForTarget,\n  unhideGhostForTarget,\n}) {\n  if (!originalEvent) return;\n  let toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  let touch =\n    originalEvent.changedTouches && originalEvent.changedTouches.length\n      ? originalEvent.changedTouches[0]\n      : originalEvent;\n  let target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent(\"spill\");\n    this.onSpill({ dragEl, putSortable });\n  }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n  startIndex: null,\n  dragStart({ oldDraggableIndex }) {\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill({ dragEl, putSortable }) {\n    this.sortable.captureAnimationState();\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n    let nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n    this.sortable.animateAll();\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop,\n};\n\nObject.assign(Revert, {\n  pluginName: \"revertOnSpill\",\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n  onSpill({ dragEl, putSortable }) {\n    const parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop,\n};\n\nObject.assign(Remove, {\n  pluginName: \"removeOnSpill\",\n});\n\nexport default [Remove, Revert];\n\nexport { Remove as RemoveOnSpill, Revert as RevertOnSpill };\n","import {\n  on,\n  off,\n  css,\n  throttle,\n  cancelThrottle,\n  scrollBy,\n  getParentAutoScrollElement,\n  expando,\n  getRect,\n  getWindowScrollingElement,\n  Edge,\n  IE11OrLess,\n  Safari,\n} from \"../../../utils/src\";\n\nimport Sortable from \"../../../sortable/src/Sortable\";\n\nlet autoScrolls = [],\n  scrollEl,\n  scrollRootEl,\n  scrolling = false,\n  lastAutoScrollX,\n  lastAutoScrollY,\n  touchEvt,\n  pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true,\n    };\n\n    // Bind all private methods\n    for (let fn in this) {\n      if (fn.charAt(0) === \"_\" && typeof this[fn] === \"function\") {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n\n  AutoScroll.prototype = {\n    dragStarted({ originalEvent }) {\n      if (this.sortable.nativeDraggable) {\n        on(document, \"dragover\", this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, \"pointermove\", this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, \"touchmove\", this._handleFallbackAutoScroll);\n        } else {\n          on(document, \"mousemove\", this._handleFallbackAutoScroll);\n        }\n      }\n    },\n\n    dragOverCompleted({ originalEvent }) {\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n\n    drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, \"dragover\", this._handleAutoScroll);\n      } else {\n        off(document, \"pointermove\", this._handleFallbackAutoScroll);\n        off(document, \"touchmove\", this._handleFallbackAutoScroll);\n        off(document, \"mousemove\", this._handleFallbackAutoScroll);\n      }\n\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n\n    nulling() {\n      touchEvt = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n\n      autoScrolls.length = 0;\n    },\n\n    _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n\n    _handleAutoScroll(evt, fallback) {\n      const x = (evt.touches ? evt.touches[0] : evt).clientX,\n        y = (evt.touches ? evt.touches[0] : evt).clientY,\n        elem = document.elementFromPoint(x, y);\n\n      touchEvt = evt;\n\n      // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n      if (fallback || Edge || IE11OrLess || Safari) {\n        //@ts-ignore\n        autoScroll(evt, this.options, elem, fallback);\n\n        // Listener for pointer element change\n        let ogElemScroller = getParentAutoScrollElement(elem, true);\n        if (\n          scrolling &&\n          (!pointerElemChangedInterval ||\n            x !== lastAutoScrollX ||\n            y !== lastAutoScrollY)\n        ) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval();\n          // Detect for pointer elem change, emulating native DnD behaviour\n          pointerElemChangedInterval = setInterval(() => {\n            let newElem = getParentAutoScrollElement(\n              document.elementFromPoint(x, y),\n              true\n            );\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n            //@ts-ignore\n            autoScroll(evt, this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (\n          !this.options.bubbleScroll ||\n          getParentAutoScrollElement(elem, true) === getWindowScrollingElement()\n        ) {\n          clearAutoScrolls();\n          return;\n        }\n        autoScroll(\n          //@ts-ignore\n          evt,\n          this.options,\n          getParentAutoScrollElement(elem, false),\n          false\n        );\n      }\n    },\n  };\n\n  return Object.assign(AutoScroll, {\n    pluginName: \"scroll\",\n    initializeByDefault: true,\n  });\n}\n\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\n\nconst autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  const x = (evt.touches ? evt.touches[0] : evt).clientX,\n    y = (evt.touches ? evt.touches[0] : evt).clientY,\n    sens = options.scrollSensitivity,\n    speed = options.scrollSpeed,\n    winScroller = getWindowScrollingElement();\n\n  let scrollThisInstance = false,\n    scrollCustomFn;\n\n  // New scroll root, set scrollEl\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n\n    clearAutoScrolls();\n\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n\n  let layersOut = 0;\n  let currentParent = scrollEl;\n  do {\n    let el = currentParent,\n      //@ts-ignore\n      rect = getRect(el),\n      top = rect.top,\n      bottom = rect.bottom,\n      left = rect.left,\n      right = rect.right,\n      width = rect.width,\n      height = rect.height,\n      canScrollX,\n      canScrollY,\n      scrollWidth = el.scrollWidth,\n      scrollHeight = el.scrollHeight,\n      //@ts-ignore\n      elCSS = css(el),\n      scrollPosX = el.scrollLeft,\n      scrollPosY = el.scrollTop;\n\n    if (el === winScroller) {\n      canScrollX =\n        width < scrollWidth &&\n        (elCSS.overflowX === \"auto\" ||\n          elCSS.overflowX === \"scroll\" ||\n          elCSS.overflowX === \"visible\");\n      canScrollY =\n        height < scrollHeight &&\n        (elCSS.overflowY === \"auto\" ||\n          elCSS.overflowY === \"scroll\" ||\n          elCSS.overflowY === \"visible\");\n    } else {\n      canScrollX =\n        width < scrollWidth &&\n        (elCSS.overflowX === \"auto\" || elCSS.overflowX === \"scroll\");\n      canScrollY =\n        height < scrollHeight &&\n        (elCSS.overflowY === \"auto\" || elCSS.overflowY === \"scroll\");\n    }\n\n    let vx =\n      canScrollX &&\n      //@ts-ignore\n      (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) -\n        //@ts-ignore\n        (Math.abs(left - x) <= sens && !!scrollPosX);\n    let vy =\n      canScrollY &&\n      //@ts-ignore\n      (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) -\n        //@ts-ignore\n        (Math.abs(top - y) <= sens && !!scrollPosY);\n\n    if (!autoScrolls[layersOut]) {\n      for (let i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n\n    if (\n      autoScrolls[layersOut].vx != vx ||\n      autoScrolls[layersOut].vy != vy ||\n      autoScrolls[layersOut].el !== el\n    ) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n\n      clearInterval(autoScrolls[layersOut].pid);\n\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n        autoScrolls[layersOut].pid = setInterval(\n          function () {\n            // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n            if (isFallback && this.layer === 0) {\n              //@ts-ignore\n              Sortable.active._onTouchMove(touchEvt); // To move ghost if it is positioned absolutely\n            }\n            let scrollOffsetY = autoScrolls[this.layer].vy\n              ? autoScrolls[this.layer].vy * speed\n              : 0;\n            let scrollOffsetX = autoScrolls[this.layer].vx\n              ? autoScrolls[this.layer].vx * speed\n              : 0;\n\n            if (typeof scrollCustomFn === \"function\") {\n              if (\n                scrollCustomFn.call(\n                  //@ts-ignore\n                  Sortable.dragged.parentNode[expando],\n                  scrollOffsetX,\n                  scrollOffsetY,\n                  evt,\n                  touchEvt,\n                  autoScrolls[this.layer].el\n                ) !== \"continue\"\n              ) {\n                return;\n              }\n            }\n\n            scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n          }.bind({ layer: layersOut }),\n          24\n        );\n      }\n    }\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nexport default AutoScrollPlugin;\n","import Sortable from \"../../sortable/src/Sortable\";\nimport Swap from \"../../plugins/swap/src\";\nimport MultiDrag from \"../../plugins/multi-drag/src\";\nimport { RemoveOnSpill, RevertOnSpill } from \"../../plugins/on-spill/src\";\nimport AutoScroll from \"../../plugins/auto-scroll/src\";\n\n//@ts-ignore\nSortable.mount(new AutoScroll());\nSortable.mount(RemoveOnSpill, RevertOnSpill);\n//@ts-ignore\nSortable.mount(new Swap());\n//@ts-ignore\nSortable.mount(new MultiDrag());\n\nexport default Sortable;\nexport { Sortable };\n"],"sourceRoot":""}